type InsurancePoolCreated @entity(immutable: true) {
  id: Bytes!
  insurer: Bytes! # address
  poolAddress: Bytes! # address
  poolName: String! # string
  symbol: String! # string
  descriptionUri: String! # string
  exampleResponseUri: String! # string
  curl: String! # string
  encryptedCurlSecretKey: String! # string
  encryptedApplicationID: String! # string
  encryptedApplicationSecret: String! # string
  regexExtraction: String! # string
  regexValidation: String! # string
  claimFee: BigInt! # uint256
  benefit: BigInt! # uint256
  startedAt: BigInt! # uint256
  finishedAt: BigInt! # uint256
  endOfPurchaseAt: BigInt! # uint256
  maxPolicies: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Approval @entity(immutable: true) {
  id: Bytes!
  pool: Bytes! #address
  owner: Bytes! # address
  spender: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ClaimApproved @entity(immutable: true) {
  id: Bytes!
  pool: Bytes! #address
  claim_insured: Bytes! # address
  claim_amount: BigInt! # uint256
  claim_index: BigInt! # uint256
  claim_proofUri: String! # string
  claim_isApproved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ClaimRejected @entity(immutable: true) {
  id: Bytes!
  pool: Bytes! #address
  claim_insured: Bytes! # address
  claim_amount: BigInt! # uint256
  claim_index: BigInt! # uint256
  claim_proofUri: String! # string
  claim_isApproved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ClaimSubmitted @entity(immutable: true) {
  id: Bytes!
  pool: Bytes! #address
  claimNum: BigInt! # uint32
  claim_insured: Bytes! # address
  claim_amount: BigInt! # uint256
  claim_index: BigInt! # uint256
  claim_proofUri: String! # string
  claim_isApproved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Deposit @entity(immutable: true) {
  id: Bytes!
  pool: Bytes! #address
  from: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PolicyPurchased @entity(immutable: true) {
  id: Bytes!
  pool: Bytes! #address
  insured: Bytes! # address
  shares: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Stake @entity(immutable: true) {
  id: Bytes!
  pool: Bytes! #address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  pool: Bytes! #address
  from: Bytes! # address
  to: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferInsurer @entity(immutable: true) {
  id: Bytes!
  pool: Bytes! #address
  oldInsurer: Bytes! # address
  newInsurer: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Withdraw @entity(immutable: true) {
  id: Bytes!
  pool: Bytes! #address
  withdrawAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type YieldUpdated @entity(immutable: true) {
  id: Bytes!
  pool: Bytes! #address
  totalAssetInUSDe: BigInt! # uint256
  yieldAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
