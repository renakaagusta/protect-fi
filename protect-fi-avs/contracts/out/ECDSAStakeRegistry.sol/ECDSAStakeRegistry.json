{"abi":[{"type":"constructor","inputs":[{"name":"_delegationManager","type":"address","internalType":"contract IDelegationManager"}],"stateMutability":"nonpayable"},{"type":"function","name":"deregisterOperator","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getLastCheckpointOperatorWeight","inputs":[{"name":"_operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLastCheckpointThresholdWeight","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLastCheckpointThresholdWeightAtBlock","inputs":[{"name":"_blockNumber","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLastCheckpointTotalWeight","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLastCheckpointTotalWeightAtBlock","inputs":[{"name":"_blockNumber","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLastestOperatorSigningKey","inputs":[{"name":"_operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getOperatorSigningKeyAtBlock","inputs":[{"name":"_operator","type":"address","internalType":"address"},{"name":"_blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getOperatorWeight","inputs":[{"name":"_operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getOperatorWeightAtBlock","inputs":[{"name":"_operator","type":"address","internalType":"address"},{"name":"_blockNumber","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"_serviceManager","type":"address","internalType":"address"},{"name":"_thresholdWeight","type":"uint256","internalType":"uint256"},{"name":"_quorum","type":"tuple","internalType":"struct Quorum","components":[{"name":"strategies","type":"tuple[]","internalType":"struct StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isValidSignature","inputs":[{"name":"_dataHash","type":"bytes32","internalType":"bytes32"},{"name":"_signatureData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"minimumWeight","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"operatorRegistered","inputs":[{"name":"_operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"quorum","inputs":[],"outputs":[{"name":"","type":"tuple","internalType":"struct Quorum","components":[{"name":"strategies","type":"tuple[]","internalType":"struct StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}]}],"stateMutability":"view"},{"type":"function","name":"registerOperatorWithSignature","inputs":[{"name":"_operatorSignature","type":"tuple","internalType":"struct ISignatureUtils.SignatureWithSaltAndExpiry","components":[{"name":"signature","type":"bytes","internalType":"bytes"},{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"expiry","type":"uint256","internalType":"uint256"}]},{"name":"_signingKey","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateMinimumWeight","inputs":[{"name":"_newMinimumWeight","type":"uint256","internalType":"uint256"},{"name":"_operators","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateOperatorSigningKey","inputs":[{"name":"_newSigningKey","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateOperators","inputs":[{"name":"_operators","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateOperatorsForQuorum","inputs":[{"name":"operatorsPerQuorum","type":"address[][]","internalType":"address[][]"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateQuorumConfig","inputs":[{"name":"_quorum","type":"tuple","internalType":"struct Quorum","components":[{"name":"strategies","type":"tuple[]","internalType":"struct StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}]},{"name":"_operators","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateStakeThreshold","inputs":[{"name":"_thresholdWeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"MinimumWeightUpdated","inputs":[{"name":"_old","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_new","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OperatorDeregistered","inputs":[{"name":"_operator","type":"address","indexed":true,"internalType":"address"},{"name":"_avs","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"OperatorRegistered","inputs":[{"name":"_operator","type":"address","indexed":true,"internalType":"address"},{"name":"_avs","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"OperatorWeightUpdated","inputs":[{"name":"_operator","type":"address","indexed":true,"internalType":"address"},{"name":"oldWeight","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newWeight","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"QuorumUpdated","inputs":[{"name":"_old","type":"tuple","indexed":false,"internalType":"struct Quorum","components":[{"name":"strategies","type":"tuple[]","internalType":"struct StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}]},{"name":"_new","type":"tuple","indexed":false,"internalType":"struct Quorum","components":[{"name":"strategies","type":"tuple[]","internalType":"struct StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}]}],"anonymous":false},{"type":"event","name":"SigningKeyUpdate","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"updateBlock","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"newSigningKey","type":"address","indexed":true,"internalType":"address"},{"name":"oldSigningKey","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ThresholdWeightUpdated","inputs":[{"name":"_thresholdWeight","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"TotalWeightUpdated","inputs":[{"name":"oldTotalWeight","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newTotalWeight","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"UpdateMinimumWeight","inputs":[{"name":"oldMinimumWeight","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newMinimumWeight","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"InsufficientSignedStake","inputs":[]},{"type":"error","name":"InsufficientWeight","inputs":[]},{"type":"error","name":"InvalidLength","inputs":[]},{"type":"error","name":"InvalidQuorum","inputs":[]},{"type":"error","name":"InvalidReferenceBlock","inputs":[]},{"type":"error","name":"InvalidSignature","inputs":[]},{"type":"error","name":"InvalidSignedWeight","inputs":[]},{"type":"error","name":"InvalidThreshold","inputs":[]},{"type":"error","name":"LengthMismatch","inputs":[]},{"type":"error","name":"MustUpdateAllOperators","inputs":[]},{"type":"error","name":"NotSorted","inputs":[]},{"type":"error","name":"OperatorAlreadyRegistered","inputs":[]},{"type":"error","name":"OperatorNotRegistered","inputs":[]}],"bytecode":{"object":"0x60a034606657601f61257a38819003918201601f19168301916001600160401b03831184841017606b57808492602094604052833981010312606657516001600160a01b03811681036066576080526040516124f890816100828239608051816113db0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c8062cf2ab514610f4d5780630dba339414610f235780631626ba7e14610be35780631703a01814610b925780631e4cd85e14610b68578063314f3a4914610b4d5780633b242e4a14610b145780633d5611f61461092957806340bf2fb71461090b5780635140a548146107ff5780635e1042e8146107b95780635ef5332914610794578063696255be14610719578063715018a6146106bc578063743c31f414610674578063857dc1901461055e5780638da5cb5b14610535578063955f2d90146104e857806398ec1ac9146104bc578063ab11899514610327578063b933fa74146102be578063cdcd358114610273578063dec5d1f614610201578063ec7fbb31146101c25763f2fde38b1461012f57600080fd5b346101bf5760203660031901126101bf57610148611005565b610150611827565b6001600160a01b0381161561016b5761016890611a56565b80f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b80fd5b50346101bf5760203660031901126101bf5760209060ff906040906001600160a01b036101ed611005565b168152606e84522054166040519015158152f35b50346101bf5760403660031901126101bf576004356001600160401b03811161026f5761023290369060040161115d565b602435906001600160401b03821161026b57610266610258610168933690600401611020565b91610261611827565b611b87565b611564565b8280fd5b5080fd5b50346101bf5760203660031901126101bf576020906001600160a01b03610298611005565b168152606a8252604090206001600160a01b03906102b5906117f3565b16604051908152f35b50346101bf57806003193601126101bf57606c5490816102f057602091505b6040516001600160e01b03919091168152f35b6000198201918211610313575061030a602091606c6115b4565b5054811c6102dd565b634e487b7160e01b81526011600452602490fd5b50346101bf5760603660031901126101bf57610341611005565b6044356001600160401b03811161026b5761036090369060040161115d565b82549060ff8260081c1615928380946104af575b8015610498575b1561043c5760ff19831660011785556103cb928461042b575b506103a560ff865460081c16611b27565b60018060a01b03166001600160601b0360a01b606854161760685561026160243561187f565b6103e460ff835460081c166103df81611b27565b611b27565b6103ed33611a56565b6103f45780f35b61ff001981541681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b61ffff191661010117855538610394565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b15801561037b5750600160ff84161461037b565b50600160ff841610610374565b50346101bf5760203660031901126101bf5760206104e06104db611005565b611317565b604051908152f35b50346101bf5760403660031901126101bf57610502611005565b6024359063ffffffff821680920361026b576001600160a01b03168252606d602090815260409092206104e09190611750565b50346101bf57806003193601126101bf576033546040516001600160a01b039091168152602090f35b50346101bf57806003193601126101bf57338152606e60205260ff604082205416156106655760655480156106515760001901606555338152606e6020526040812060ff1981541690556105b96105b433611d09565b611f3d565b505060685481906001600160a01b0316803b1561064e578180916024604051809481936351b27a6d60e11b83523360048401525af180156106435761062e575b506068546001600160a01b0316337f31e0adfec71bccee37b6e83a90c2fedb17d8f1693fee863c4771e7bfe2aed5808380a380f35b8161063891610fcd565b6101bf5780386105f9565b6040513d84823e3d90fd5b50fd5b634e487b7160e01b82526011600452602482fd5b6325ec6c1f60e01b8152600490fd5b50346101bf5760203660031901126101bf5761068e611005565b338252606e60205260ff604083205416156106ad576101689033611a9f565b6325ec6c1f60e01b8252600482fd5b50346101bf57806003193601126101bf576106d5611827565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101bf5760403660031901126101bf576024356004356001600160401b03821161026b577f713ca53b88d6eb63f5b1854cb8cbdd736ec51eda225e46791aa9298b0160648f6040610773610168943690600401611020565b9261077c611827565b606754908060675582519182526020820152a1611564565b50346101bf5760203660031901126101bf576107ae611827565b61016860043561187f565b50346101bf5760403660031901126101bf576020906001600160a01b036107de611005565b168152606a8252604090206001600160a01b03906102b59060243590611750565b50346101bf5760403660031901126101bf576004356001600160401b03811161026f573660238201121561026f5780600401359061083c82610fee565b9061084a6040519283610fcd565b828252602082019260051b8101602401833682116109075760248301905b8282106108d457505050506024356001600160401b0381116108d0576108929036906004016110bc565b5051156108bc57518051606554036108ad5761016890611564565b63169efb5b60e11b8252600482fd5b634e487b7160e01b82526032600452602482fd5b8380fd5b81356001600160401b038111610903576020916108f8839260243691890101611020565b815201910190610868565b8780fd5b8580fd5b50346101bf57806003193601126101bf576020606754604051908152f35b50346101bf5760403660031901126101bf576004356001600160401b03811161026f576060600319823603011261026f57604051606081018181106001600160401b03821117610b005760405281600401356001600160401b0381116108d05761099990600436918501016110bc565b8152602480830135602083019081526044909301356040830190815290356001600160a01b0381168103610afc57338552606e60205260ff604086205416610aed576065546000198114610ad957859392916001610a209201606555338552606e60205260408520600160ff19825416179055610a186105b433611d09565b505033611a9f565b6068546001600160a01b0316803b156108d057610a6c84809460405197889586948593639926ee7d60e01b855233600486015260406024860152516060604486015260a4850190611802565b9151606484015251608483015203925af18015610acc57610abc575b6068546001600160a01b0316337fa453db612af59e5521d6ab9284dc3e2d06af286eb1b1b7b771fce4716c19f2c18380a380f35b610ac591610fcd565b3881610a88565b50604051903d90823e3d90fd5b634e487b7160e01b86526011600452602486fd5b6342ee68b560e01b8552600485fd5b8480fd5b634e487b7160e01b84526041600452602484fd5b50346101bf5760203660031901126101bf576020906104e0906040906001600160a01b03610b40611005565b168152606d8452206117f3565b50346101bf57806003193601126101bf5760206104e06117e5565b50346101bf5760203660031901126101bf5760206104e063ffffffff610b8c61108e565b166116ba565b50346101bf57806003193601126101bf576060604051610bb181610f81565b52610bdf604051610bc181610f81565b610bc9611251565b8152604051918291602083526020830190611103565b0390f35b50346101bf5760403660031901126101bf576004356024356001600160401b03811161026b57610c179036906004016110bc565b908151820190606083602084019303126108d05760208301516001600160401b038111610afc5783019282603f85011215610afc576020840151610c5a81610fee565b94610c686040519687610fcd565b8186526020808088019360051b830101019085821161090357604001915b818310610f035750505060408101516001600160401b03811161090757810183603f8201121561090757602081015190610cbf82610fee565b94610ccd6040519687610fcd565b8286526020808088019460051b8401010191818311610eff5760408101935b838510610e8a575050505050606001519063ffffffff8216809203610afc578351908590869480518403610e78578315610e695794959394438610159488935b858510610d9957505050505050610d8a57610d46816115cc565b8211610d7b57610d55906116ba565b11610d6c57604051630b135d3f60e11b8152602090f35b63e121632f60e01b8152600490fd5b634b05a0f760e11b8352600483fd5b63e64f180f60e01b8352600483fd5b60018060a09a939495969998979a1b03610db389856112ca565b511695610e5a57858a52606a60205260408a2086906001600160a01b0390610ddc908a90611750565b16916001600160a01b03161015610e4b57610e039085610dfc8a876112ca565b51916121ff565b15610e3c57906001610e2f8a959493610e298960408a99809b8152606d60205220611750565b906112f4565b9701939794959697610d2c565b638baa579f60e01b8952600489fd5b63ba50f91160e01b8a5260048afd5b63e64f180f60e01b8a5260048afd5b63251f56a160e21b8852600488fd5b6001621398b960e31b03198852600488fd5b84516001600160401b038111610efb576020908301019083603f83011215610efb57602082015190610ebb826110a1565b610ec86040519182610fcd565b8281526040848401018610610ef757610eec6020949385946040868501910161122e565b815201940193610cec565b8c80fd5b8a80fd5b8880fd5b82516001600160a01b0381168103610eff57815260209283019201610c86565b50346101bf5760203660031901126101bf5760206104e063ffffffff610f4761108e565b166115cc565b50346101bf5760203660031901126101bf576004356001600160401b03811161026f57610266610168913690600401611020565b602081019081106001600160401b03821117610f9c57604052565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b03821117610f9c57604052565b90601f801991011681019081106001600160401b03821117610f9c57604052565b6001600160401b038111610f9c5760051b60200190565b600435906001600160a01b038216820361101b57565b600080fd5b9080601f8301121561101b5781359061103882610fee565b926110466040519485610fcd565b82845260208085019360051b82010191821161101b57602001915b81831061106e5750505090565b82356001600160a01b038116810361101b57815260209283019201611061565b6004359063ffffffff8216820361101b57565b6001600160401b038111610f9c57601f01601f191660200190565b81601f8201121561101b578035906110d3826110a1565b926110e16040519485610fcd565b8284526020838301011161101b57816000926020809301838601378301015290565b6020604081840192519382815284518094520192019060005b8181106111295750505090565b825180516001600160a01b031685526020908101516001600160601b0316818601526040909401939092019160010161111c565b919060208382031261101b5760405161117581610f81565b80938035906001600160401b03821161101b570182601f8201121561101b578035906111a082610fee565b936111ae6040519586610fcd565b82855260208086019360061b8301019181831161101b57602001925b8284106111d8575050505052565b60408483031261101b57604051906111ef82610fb2565b84356001600160a01b038116810361101b5782526020850135906001600160601b038216820361101b57826020928360409501528152019301926111ca565b60005b8381106112415750506000910152565b8181015183820152602001611231565b6066549061125e82610fee565b9161126c6040519384610fcd565b808352606660009081526000805160206124a3833981519152602085015b8383106112975750505050565b6001602081926040516112a981610fb2565b8554848060a01b038116825260a01c8382015281520192019201919061128a565b80518210156112de5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b9190820180921161130157565b634e487b7160e01b600052601160045260246000fd5b61131f611251565b80519092600061134761133184610fee565b9361133f6040519586610fcd565b808552610fee565b6020840190601f190136823760005b8651811015611388576001906001600160a01b03611374828a6112ca565b51511661138182886112ca565b5201611356565b5060408051639004134760e01b81526001600160a01b03909616600487015260248601529251604485018190529193909290918291606483019160005b81811061152657506000939283900391508290507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561151a5760009161148b575b506000915b845183101561146b5761142c83836112ca565b51906001600160601b03602061144286896112ca565b510151169182810292818404149015171561130157600191611463916112f4565b920191611419565b915050612710919250046067548110156000146114855790565b50600090565b3d8083833e61149a8183610fcd565b81019060208183031261026b578051906001600160401b0382116108d0570181601f8201121561026b578051906114d082610fee565b936114de6040519586610fcd565b82855260208086019360051b8301019384116101bf5750602001905b82821061150a5750505038611414565b81518152602091820191016114fa565b6040513d6000823e3d90fd5b82516001600160a01b03168452859450602093840193909201916001016113c5565b9190916000838201938412911290801582169115161761130157565b906000805b83518210156115a35760019061159b906115956001600160a01b0361158e86896112ca565b5116611d09565b90611548565b910190611569565b90506115b0919250611f3d565b5050565b80548210156112de5760005260206000200190600090565b4381101561167657606b54906000905b82821061161b575050806115fa575060005b6001600160e01b031690565b60001981019081116113015761161190606b6115b4565b505460201c6115ee565b909161162e81841860011c8285166112f4565b908263ffffffff61164084606b6115b4565b50541611156116525750915b906115dc565b9250600181018091111561164c57634e487b7160e01b600052601160045260246000fd5b606460405162461bcd60e51b815260206004820152602060248201527f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e65646044820152fd5b4381101561167657606c54906000905b8282106116f5575050806116de5750600090565b60001981019081116113015761161190606c6115b4565b909161170881841860011c8285166112f4565b908263ffffffff61171a84606c6115b4565b505416111561172c5750915b906116ca565b9250600181018091111561172657634e487b7160e01b600052601160045260246000fd5b9043811015611676578154906000905b82821061178b5750508061177657506000919050565b600019810190811161130157611611916115b4565b909161179e81841860011c8285166112f4565b908263ffffffff6117af84886115b4565b50541611156117c15750915b90611760565b925060018101809111156117bb57634e487b7160e01b600052601160045260246000fd5b606b54806115fa5750600090565b80548061177657506000919050565b9060209161181b8151809281855285808601910161122e565b601f01601f1916010190565b6033546001600160a01b0316330361183b57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6000606c549061188f606c6117f3565b9180151580611a1b575b1561190b576118a78461231b565b9160001982019182116103135750916119017f9324f7e5a7c0288808a634ccde44b8e979676474b22e29ee9dd569b55e791a4b94926118e9602095606c6115b4565b509063ffffffff82549181199060201b169116179055565b50604051908152a1565b63ffffffff43116119c75761191f8461231b565b906040519061192d82610fb2565b4363ffffffff1682526001600160e01b039092166020820190815291600160401b811015610b00578060016119679201606c55606c6115b4565b9390936119b3575051905163ffffffff90911663ffffffff19602092831b16179091557f9324f7e5a7c0288808a634ccde44b8e979676474b22e29ee9dd569b55e791a4b929091611901565b634e487b7160e01b81526004819052602490fd5b60405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608490fd5b506000198101818111611a4257611a3863ffffffff91606c6115b4565b5054164314611899565b634e487b7160e01b83526011600452602483fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b6001600160a01b039081166000818152606a6020526040902090929190611ac5906117f3565b6001600160a01b0390921692911690828214611b225780600052606a602052611af2836040600020612071565b50506040519182527fd061168252f441733658f09e4d8f5b2d998ed4ef24a2bbfd6ceca52ea131500260204393a4565b505050565b15611b2e57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b611b9081612172565b15611cdf5760405191611ba283610f81565b611baa611251565b8352606654600060665580611ca1575b5060005b82518051821015611c4e5781611bd3916112ca565b51606654600160401b811015610f9c57600181016066556000606654821015611c3a5760669052815160209092015160a01b6001600160a01b0319166001600160a01b0392909216919091176000805160206124a383398151915290910155600101611bbe565b634e487b7160e01b81526032600452602490fd5b505091611c8e90611c9c7f23aad4e61744ece164130aa415c1616e80136b0f0770e56589438b90b269265e93604051938493604085526040850190611103565b908382036020850152611103565b0390a1565b60666000526000805160206124a3833981519152016000805160206124a38339815191525b818110611cd35750611bba565b60008155600101611cc6565b63d173577960e01b60005260046000fd5b8181039291600013801582851316918412161761130157565b6001600160a01b0381166000818152606d602052604081209092908390611d2f906117f3565b9183600052606e60205260ff6040600020541615600014611edc575081611d5591611cf0565b928315611ed65782600052606d602052604060002060008154611d77836117f3565b9281151580611e9c575b15611de157611d8f8361231b565b9260001983019283116103135750604094926118e97f88770dc862e47a7ed586907857eb1b75e4c5ffc8b707c7ee10eb74d6885fe594979593611dd1936115b4565b505b82519182526020820152a290565b63ffffffff43116119c757611df58361231b565b9160405191611e0383610fb2565b4363ffffffff1683526001600160e01b039093166020830190815292600160401b821015611e885790611e3b916001820181556115b4565b9390936119b3575051905160201b63ffffffff191663ffffffff919091161790557f88770dc862e47a7ed586907857eb1b75e4c5ffc8b707c7ee10eb74d6885fe594926040929091611dd1565b634e487b7160e01b85526041600452602485fd5b506000198201828111611ec257611eb863ffffffff91836115b4565b5054164314611d81565b634e487b7160e01b84526011600452602484fd5b50505090565b9050611ee9919350611317565b91611ef48184611cf0565b928315611ed6577f88770dc862e47a7ed586907857eb1b75e4c5ffc8b707c7ee10eb74d6885fe5949160409184600052606d602052611f368184600020612071565b5050611dd3565b90611f50611f496117e5565b9283611548565b906000606b5490611f61606b6117f3565b918015158061204a575b15611fc857611f798561231b565b9160001982019182116103135750906118e9611f9692606b6115b4565b507f86dcf86b12dfeedea74ae9300dbdaa193bcce5809369c8177ea2f4eaaa65729b60408051858152846020820152a1565b63ffffffff43116119c757611fdc8561231b565b9060405190611fea82610fb2565b4363ffffffff1682526001600160e01b039092166020820190815291600160401b811015610b00578060016120249201606b55606b6115b4565b9390936119b3575051905160201b63ffffffff191663ffffffff91909116179055611f96565b506000198101818111611a425761206763ffffffff91606b6115b4565b5054164314611f6b565b919091805461207f826117f3565b918115158061214c575b156120b5576120978561231b565b906000198301928311611301576120b1926118e9916115b4565b9190565b63ffffffff43116119c7576120c98561231b565b90604051926120d784610fb2565b4363ffffffff1684526001600160e01b039092166020840190815291600160401b811015610f9c5761210e916001820181556115b4565b919091612136579151915160201b63ffffffff191663ffffffff929092169190911790559190565b634e487b7160e01b600052600060045260246000fd5b5060001982018281116113015761216863ffffffff91836115b4565b5054164314612089565b5190600080805b84518210156121e7576001600160a01b0361219483876112ca565b515116906001600160a01b03168111156121d6576121cd600191936001600160601b0360206121c3868a6112ca565b51015116906112f4565b91019091612179565b63ba50f91160e01b60005260046000fd5b509192506127101490506121fa57600090565b600190565b91909161220c828461238a565b6005811015612305571590816122ef575b506122e75760009261225861226685946040519283916020830195630b135d3f60e11b87526024840152604060448401526064830190611802565b03601f198101835282610fcd565b51915afa3d156122e0573d61227a816110a1565b906122886040519283610fcd565b81523d6000602083013e5b816122d4575b816122a2575090565b905060208180518101031261101b57602001516001600160e01b031981169081900361101b57630b135d3f60e11b1490565b80516020149150612299565b6060612293565b505050600190565b6001600160a01b0383811691161490503861221d565b634e487b7160e01b600052602160045260246000fd5b6001600160e01b038111612335576001600160e01b031690565b60405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608490fd5b8151604181036123b75750906123b3916020820151906060604084015193015160001a906123fa565b9091565b6040036123f05760406020830151920151918260ff1c91601b8301809311611301576123b3936001600160ff1b03169260ff16906123fa565b5050600090600290565b907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116124965760ff1690601b8214158061248b575b61247f57602093600093608093604051938452868401526040830152606082015282805260015afa1561151a576000516001600160a01b038116156124765790600090565b50600090600190565b50505050600090600490565b50601c821415612431565b5050505060009060039056fe46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e94354a264697066735822122058ecb2fe201e2442c42102fead25e3d01367f787e63c92743eb641dc9d0885f264736f6c634300081a0033","sourceMap":"1122:25313:99:-:0;;;;;;;;;;;;;-1:-1:-1;;1122:25313:99;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;2152:39:100;;1122:25313:99;;;;;;;;2152:39:100;1122:25313:99;;;;;;;-1:-1:-1;1122:25313:99;;;;;;-1:-1:-1;1122:25313:99;;;;;-1:-1:-1;1122:25313:99","linkReferences":{}},"deployedBytecode":{"object":"0x6080604052600436101561001257600080fd5b6000803560e01c8062cf2ab514610f4d5780630dba339414610f235780631626ba7e14610be35780631703a01814610b925780631e4cd85e14610b68578063314f3a4914610b4d5780633b242e4a14610b145780633d5611f61461092957806340bf2fb71461090b5780635140a548146107ff5780635e1042e8146107b95780635ef5332914610794578063696255be14610719578063715018a6146106bc578063743c31f414610674578063857dc1901461055e5780638da5cb5b14610535578063955f2d90146104e857806398ec1ac9146104bc578063ab11899514610327578063b933fa74146102be578063cdcd358114610273578063dec5d1f614610201578063ec7fbb31146101c25763f2fde38b1461012f57600080fd5b346101bf5760203660031901126101bf57610148611005565b610150611827565b6001600160a01b0381161561016b5761016890611a56565b80f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b80fd5b50346101bf5760203660031901126101bf5760209060ff906040906001600160a01b036101ed611005565b168152606e84522054166040519015158152f35b50346101bf5760403660031901126101bf576004356001600160401b03811161026f5761023290369060040161115d565b602435906001600160401b03821161026b57610266610258610168933690600401611020565b91610261611827565b611b87565b611564565b8280fd5b5080fd5b50346101bf5760203660031901126101bf576020906001600160a01b03610298611005565b168152606a8252604090206001600160a01b03906102b5906117f3565b16604051908152f35b50346101bf57806003193601126101bf57606c5490816102f057602091505b6040516001600160e01b03919091168152f35b6000198201918211610313575061030a602091606c6115b4565b5054811c6102dd565b634e487b7160e01b81526011600452602490fd5b50346101bf5760603660031901126101bf57610341611005565b6044356001600160401b03811161026b5761036090369060040161115d565b82549060ff8260081c1615928380946104af575b8015610498575b1561043c5760ff19831660011785556103cb928461042b575b506103a560ff865460081c16611b27565b60018060a01b03166001600160601b0360a01b606854161760685561026160243561187f565b6103e460ff835460081c166103df81611b27565b611b27565b6103ed33611a56565b6103f45780f35b61ff001981541681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b61ffff191661010117855538610394565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b15801561037b5750600160ff84161461037b565b50600160ff841610610374565b50346101bf5760203660031901126101bf5760206104e06104db611005565b611317565b604051908152f35b50346101bf5760403660031901126101bf57610502611005565b6024359063ffffffff821680920361026b576001600160a01b03168252606d602090815260409092206104e09190611750565b50346101bf57806003193601126101bf576033546040516001600160a01b039091168152602090f35b50346101bf57806003193601126101bf57338152606e60205260ff604082205416156106655760655480156106515760001901606555338152606e6020526040812060ff1981541690556105b96105b433611d09565b611f3d565b505060685481906001600160a01b0316803b1561064e578180916024604051809481936351b27a6d60e11b83523360048401525af180156106435761062e575b506068546001600160a01b0316337f31e0adfec71bccee37b6e83a90c2fedb17d8f1693fee863c4771e7bfe2aed5808380a380f35b8161063891610fcd565b6101bf5780386105f9565b6040513d84823e3d90fd5b50fd5b634e487b7160e01b82526011600452602482fd5b6325ec6c1f60e01b8152600490fd5b50346101bf5760203660031901126101bf5761068e611005565b338252606e60205260ff604083205416156106ad576101689033611a9f565b6325ec6c1f60e01b8252600482fd5b50346101bf57806003193601126101bf576106d5611827565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101bf5760403660031901126101bf576024356004356001600160401b03821161026b577f713ca53b88d6eb63f5b1854cb8cbdd736ec51eda225e46791aa9298b0160648f6040610773610168943690600401611020565b9261077c611827565b606754908060675582519182526020820152a1611564565b50346101bf5760203660031901126101bf576107ae611827565b61016860043561187f565b50346101bf5760403660031901126101bf576020906001600160a01b036107de611005565b168152606a8252604090206001600160a01b03906102b59060243590611750565b50346101bf5760403660031901126101bf576004356001600160401b03811161026f573660238201121561026f5780600401359061083c82610fee565b9061084a6040519283610fcd565b828252602082019260051b8101602401833682116109075760248301905b8282106108d457505050506024356001600160401b0381116108d0576108929036906004016110bc565b5051156108bc57518051606554036108ad5761016890611564565b63169efb5b60e11b8252600482fd5b634e487b7160e01b82526032600452602482fd5b8380fd5b81356001600160401b038111610903576020916108f8839260243691890101611020565b815201910190610868565b8780fd5b8580fd5b50346101bf57806003193601126101bf576020606754604051908152f35b50346101bf5760403660031901126101bf576004356001600160401b03811161026f576060600319823603011261026f57604051606081018181106001600160401b03821117610b005760405281600401356001600160401b0381116108d05761099990600436918501016110bc565b8152602480830135602083019081526044909301356040830190815290356001600160a01b0381168103610afc57338552606e60205260ff604086205416610aed576065546000198114610ad957859392916001610a209201606555338552606e60205260408520600160ff19825416179055610a186105b433611d09565b505033611a9f565b6068546001600160a01b0316803b156108d057610a6c84809460405197889586948593639926ee7d60e01b855233600486015260406024860152516060604486015260a4850190611802565b9151606484015251608483015203925af18015610acc57610abc575b6068546001600160a01b0316337fa453db612af59e5521d6ab9284dc3e2d06af286eb1b1b7b771fce4716c19f2c18380a380f35b610ac591610fcd565b3881610a88565b50604051903d90823e3d90fd5b634e487b7160e01b86526011600452602486fd5b6342ee68b560e01b8552600485fd5b8480fd5b634e487b7160e01b84526041600452602484fd5b50346101bf5760203660031901126101bf576020906104e0906040906001600160a01b03610b40611005565b168152606d8452206117f3565b50346101bf57806003193601126101bf5760206104e06117e5565b50346101bf5760203660031901126101bf5760206104e063ffffffff610b8c61108e565b166116ba565b50346101bf57806003193601126101bf576060604051610bb181610f81565b52610bdf604051610bc181610f81565b610bc9611251565b8152604051918291602083526020830190611103565b0390f35b50346101bf5760403660031901126101bf576004356024356001600160401b03811161026b57610c179036906004016110bc565b908151820190606083602084019303126108d05760208301516001600160401b038111610afc5783019282603f85011215610afc576020840151610c5a81610fee565b94610c686040519687610fcd565b8186526020808088019360051b830101019085821161090357604001915b818310610f035750505060408101516001600160401b03811161090757810183603f8201121561090757602081015190610cbf82610fee565b94610ccd6040519687610fcd565b8286526020808088019460051b8401010191818311610eff5760408101935b838510610e8a575050505050606001519063ffffffff8216809203610afc578351908590869480518403610e78578315610e695794959394438610159488935b858510610d9957505050505050610d8a57610d46816115cc565b8211610d7b57610d55906116ba565b11610d6c57604051630b135d3f60e11b8152602090f35b63e121632f60e01b8152600490fd5b634b05a0f760e11b8352600483fd5b63e64f180f60e01b8352600483fd5b60018060a09a939495969998979a1b03610db389856112ca565b511695610e5a57858a52606a60205260408a2086906001600160a01b0390610ddc908a90611750565b16916001600160a01b03161015610e4b57610e039085610dfc8a876112ca565b51916121ff565b15610e3c57906001610e2f8a959493610e298960408a99809b8152606d60205220611750565b906112f4565b9701939794959697610d2c565b638baa579f60e01b8952600489fd5b63ba50f91160e01b8a5260048afd5b63e64f180f60e01b8a5260048afd5b63251f56a160e21b8852600488fd5b6001621398b960e31b03198852600488fd5b84516001600160401b038111610efb576020908301019083603f83011215610efb57602082015190610ebb826110a1565b610ec86040519182610fcd565b8281526040848401018610610ef757610eec6020949385946040868501910161122e565b815201940193610cec565b8c80fd5b8a80fd5b8880fd5b82516001600160a01b0381168103610eff57815260209283019201610c86565b50346101bf5760203660031901126101bf5760206104e063ffffffff610f4761108e565b166115cc565b50346101bf5760203660031901126101bf576004356001600160401b03811161026f57610266610168913690600401611020565b602081019081106001600160401b03821117610f9c57604052565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b03821117610f9c57604052565b90601f801991011681019081106001600160401b03821117610f9c57604052565b6001600160401b038111610f9c5760051b60200190565b600435906001600160a01b038216820361101b57565b600080fd5b9080601f8301121561101b5781359061103882610fee565b926110466040519485610fcd565b82845260208085019360051b82010191821161101b57602001915b81831061106e5750505090565b82356001600160a01b038116810361101b57815260209283019201611061565b6004359063ffffffff8216820361101b57565b6001600160401b038111610f9c57601f01601f191660200190565b81601f8201121561101b578035906110d3826110a1565b926110e16040519485610fcd565b8284526020838301011161101b57816000926020809301838601378301015290565b6020604081840192519382815284518094520192019060005b8181106111295750505090565b825180516001600160a01b031685526020908101516001600160601b0316818601526040909401939092019160010161111c565b919060208382031261101b5760405161117581610f81565b80938035906001600160401b03821161101b570182601f8201121561101b578035906111a082610fee565b936111ae6040519586610fcd565b82855260208086019360061b8301019181831161101b57602001925b8284106111d8575050505052565b60408483031261101b57604051906111ef82610fb2565b84356001600160a01b038116810361101b5782526020850135906001600160601b038216820361101b57826020928360409501528152019301926111ca565b60005b8381106112415750506000910152565b8181015183820152602001611231565b6066549061125e82610fee565b9161126c6040519384610fcd565b808352606660009081526000805160206124a3833981519152602085015b8383106112975750505050565b6001602081926040516112a981610fb2565b8554848060a01b038116825260a01c8382015281520192019201919061128a565b80518210156112de5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b9190820180921161130157565b634e487b7160e01b600052601160045260246000fd5b61131f611251565b80519092600061134761133184610fee565b9361133f6040519586610fcd565b808552610fee565b6020840190601f190136823760005b8651811015611388576001906001600160a01b03611374828a6112ca565b51511661138182886112ca565b5201611356565b5060408051639004134760e01b81526001600160a01b03909616600487015260248601529251604485018190529193909290918291606483019160005b81811061152657506000939283900391508290507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561151a5760009161148b575b506000915b845183101561146b5761142c83836112ca565b51906001600160601b03602061144286896112ca565b510151169182810292818404149015171561130157600191611463916112f4565b920191611419565b915050612710919250046067548110156000146114855790565b50600090565b3d8083833e61149a8183610fcd565b81019060208183031261026b578051906001600160401b0382116108d0570181601f8201121561026b578051906114d082610fee565b936114de6040519586610fcd565b82855260208086019360051b8301019384116101bf5750602001905b82821061150a5750505038611414565b81518152602091820191016114fa565b6040513d6000823e3d90fd5b82516001600160a01b03168452859450602093840193909201916001016113c5565b9190916000838201938412911290801582169115161761130157565b906000805b83518210156115a35760019061159b906115956001600160a01b0361158e86896112ca565b5116611d09565b90611548565b910190611569565b90506115b0919250611f3d565b5050565b80548210156112de5760005260206000200190600090565b4381101561167657606b54906000905b82821061161b575050806115fa575060005b6001600160e01b031690565b60001981019081116113015761161190606b6115b4565b505460201c6115ee565b909161162e81841860011c8285166112f4565b908263ffffffff61164084606b6115b4565b50541611156116525750915b906115dc565b9250600181018091111561164c57634e487b7160e01b600052601160045260246000fd5b606460405162461bcd60e51b815260206004820152602060248201527f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e65646044820152fd5b4381101561167657606c54906000905b8282106116f5575050806116de5750600090565b60001981019081116113015761161190606c6115b4565b909161170881841860011c8285166112f4565b908263ffffffff61171a84606c6115b4565b505416111561172c5750915b906116ca565b9250600181018091111561172657634e487b7160e01b600052601160045260246000fd5b9043811015611676578154906000905b82821061178b5750508061177657506000919050565b600019810190811161130157611611916115b4565b909161179e81841860011c8285166112f4565b908263ffffffff6117af84886115b4565b50541611156117c15750915b90611760565b925060018101809111156117bb57634e487b7160e01b600052601160045260246000fd5b606b54806115fa5750600090565b80548061177657506000919050565b9060209161181b8151809281855285808601910161122e565b601f01601f1916010190565b6033546001600160a01b0316330361183b57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6000606c549061188f606c6117f3565b9180151580611a1b575b1561190b576118a78461231b565b9160001982019182116103135750916119017f9324f7e5a7c0288808a634ccde44b8e979676474b22e29ee9dd569b55e791a4b94926118e9602095606c6115b4565b509063ffffffff82549181199060201b169116179055565b50604051908152a1565b63ffffffff43116119c75761191f8461231b565b906040519061192d82610fb2565b4363ffffffff1682526001600160e01b039092166020820190815291600160401b811015610b00578060016119679201606c55606c6115b4565b9390936119b3575051905163ffffffff90911663ffffffff19602092831b16179091557f9324f7e5a7c0288808a634ccde44b8e979676474b22e29ee9dd569b55e791a4b929091611901565b634e487b7160e01b81526004819052602490fd5b60405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608490fd5b506000198101818111611a4257611a3863ffffffff91606c6115b4565b5054164314611899565b634e487b7160e01b83526011600452602483fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b6001600160a01b039081166000818152606a6020526040902090929190611ac5906117f3565b6001600160a01b0390921692911690828214611b225780600052606a602052611af2836040600020612071565b50506040519182527fd061168252f441733658f09e4d8f5b2d998ed4ef24a2bbfd6ceca52ea131500260204393a4565b505050565b15611b2e57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b611b9081612172565b15611cdf5760405191611ba283610f81565b611baa611251565b8352606654600060665580611ca1575b5060005b82518051821015611c4e5781611bd3916112ca565b51606654600160401b811015610f9c57600181016066556000606654821015611c3a5760669052815160209092015160a01b6001600160a01b0319166001600160a01b0392909216919091176000805160206124a383398151915290910155600101611bbe565b634e487b7160e01b81526032600452602490fd5b505091611c8e90611c9c7f23aad4e61744ece164130aa415c1616e80136b0f0770e56589438b90b269265e93604051938493604085526040850190611103565b908382036020850152611103565b0390a1565b60666000526000805160206124a3833981519152016000805160206124a38339815191525b818110611cd35750611bba565b60008155600101611cc6565b63d173577960e01b60005260046000fd5b8181039291600013801582851316918412161761130157565b6001600160a01b0381166000818152606d602052604081209092908390611d2f906117f3565b9183600052606e60205260ff6040600020541615600014611edc575081611d5591611cf0565b928315611ed65782600052606d602052604060002060008154611d77836117f3565b9281151580611e9c575b15611de157611d8f8361231b565b9260001983019283116103135750604094926118e97f88770dc862e47a7ed586907857eb1b75e4c5ffc8b707c7ee10eb74d6885fe594979593611dd1936115b4565b505b82519182526020820152a290565b63ffffffff43116119c757611df58361231b565b9160405191611e0383610fb2565b4363ffffffff1683526001600160e01b039093166020830190815292600160401b821015611e885790611e3b916001820181556115b4565b9390936119b3575051905160201b63ffffffff191663ffffffff919091161790557f88770dc862e47a7ed586907857eb1b75e4c5ffc8b707c7ee10eb74d6885fe594926040929091611dd1565b634e487b7160e01b85526041600452602485fd5b506000198201828111611ec257611eb863ffffffff91836115b4565b5054164314611d81565b634e487b7160e01b84526011600452602484fd5b50505090565b9050611ee9919350611317565b91611ef48184611cf0565b928315611ed6577f88770dc862e47a7ed586907857eb1b75e4c5ffc8b707c7ee10eb74d6885fe5949160409184600052606d602052611f368184600020612071565b5050611dd3565b90611f50611f496117e5565b9283611548565b906000606b5490611f61606b6117f3565b918015158061204a575b15611fc857611f798561231b565b9160001982019182116103135750906118e9611f9692606b6115b4565b507f86dcf86b12dfeedea74ae9300dbdaa193bcce5809369c8177ea2f4eaaa65729b60408051858152846020820152a1565b63ffffffff43116119c757611fdc8561231b565b9060405190611fea82610fb2565b4363ffffffff1682526001600160e01b039092166020820190815291600160401b811015610b00578060016120249201606b55606b6115b4565b9390936119b3575051905160201b63ffffffff191663ffffffff91909116179055611f96565b506000198101818111611a425761206763ffffffff91606b6115b4565b5054164314611f6b565b919091805461207f826117f3565b918115158061214c575b156120b5576120978561231b565b906000198301928311611301576120b1926118e9916115b4565b9190565b63ffffffff43116119c7576120c98561231b565b90604051926120d784610fb2565b4363ffffffff1684526001600160e01b039092166020840190815291600160401b811015610f9c5761210e916001820181556115b4565b919091612136579151915160201b63ffffffff191663ffffffff929092169190911790559190565b634e487b7160e01b600052600060045260246000fd5b5060001982018281116113015761216863ffffffff91836115b4565b5054164314612089565b5190600080805b84518210156121e7576001600160a01b0361219483876112ca565b515116906001600160a01b03168111156121d6576121cd600191936001600160601b0360206121c3868a6112ca565b51015116906112f4565b91019091612179565b63ba50f91160e01b60005260046000fd5b509192506127101490506121fa57600090565b600190565b91909161220c828461238a565b6005811015612305571590816122ef575b506122e75760009261225861226685946040519283916020830195630b135d3f60e11b87526024840152604060448401526064830190611802565b03601f198101835282610fcd565b51915afa3d156122e0573d61227a816110a1565b906122886040519283610fcd565b81523d6000602083013e5b816122d4575b816122a2575090565b905060208180518101031261101b57602001516001600160e01b031981169081900361101b57630b135d3f60e11b1490565b80516020149150612299565b6060612293565b505050600190565b6001600160a01b0383811691161490503861221d565b634e487b7160e01b600052602160045260246000fd5b6001600160e01b038111612335576001600160e01b031690565b60405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608490fd5b8151604181036123b75750906123b3916020820151906060604084015193015160001a906123fa565b9091565b6040036123f05760406020830151920151918260ff1c91601b8301809311611301576123b3936001600160ff1b03169260ff16906123fa565b5050600090600290565b907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116124965760ff1690601b8214158061248b575b61247f57602093600093608093604051938452868401526040830152606082015282805260015afa1561151a576000516001600160a01b038116156124765790600090565b50600090600190565b50505050600090600490565b50601c821415612431565b5050505060009060039056fe46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e94354a264697066735822122058ecb2fe201e2442c42102fead25e3d01367f787e63c92743eb641dc9d0885f264736f6c634300081a0033","sourceMap":"1122:25313:99:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1122:25313:99;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;-1:-1:-1;;;;;1122:25313:99;;2409:22:0;1122:25313:99;;2503:8:0;;;:::i;:::-;1122:25313:99;;;;;-1:-1:-1;;;1122:25313:99;;;;;;;;;;;;;;;;;-1:-1:-1;;;1122:25313:99;;;;;;;;;;;;;;;;;-1:-1:-1;;1122:25313:99;;;;;;;;;;-1:-1:-1;;;;;1122:25313:99;;:::i;:::-;;;;9949:19;1122:25313;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1122:25313:99;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1122:25313:99;;;;4261:7;1122:25313;4296:10;1122:25313;;;;;;:::i;:::-;1303:62:0;;;:::i;:::-;4261:7:99;:::i;:::-;4296:10;:::i;1122:25313::-;;;;;;;;;;;;;;;-1:-1:-1;;1122:25313:99;;;;;;-1:-1:-1;;;;;1122:25313:99;;:::i;:::-;;;;6861:26;1122:25313;;;;;-1:-1:-1;;;;;1122:25313:99;6861:46;;;:::i;:::-;1122:25313;;;;;;;;;;;;;;;;;;;;8466:23;1122:25313;;1069:8:5;;;1122:25313:99;1069:48:5;;;1122:25313:99;;-1:-1:-1;;;;;1122:25313:99;;;;;;;1069:48:5;-1:-1:-1;;1122:25313:99;;;;;;;1084:26:5;;1122:25313:99;1084:26:5;8466:23:99;1084:26:5;:::i;:::-;1122:25313:99;;;;1069:48:5;;1122:25313:99;-1:-1:-1;;;1122:25313:99;;;;;;;;;;;;;;;-1:-1:-1;;1122:25313:99;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;;;:::i;:::-;;;;;;;;;3133:14:2;;;;3179:34;;;1122:25313:99;3178:108:2;;;;1122:25313:99;;;;-1:-1:-1;;1122:25313:99;;;;;;11708:7;;1122:25313;3394:65:2;;1122:25313:99;;4902:69:2;1122:25313:99;;;;;;4902:69:2;:::i;:::-;1122:25313:99;;;;;;-1:-1:-1;;;;;1122:25313:99;;11592:37;1122:25313;;;11592:37;1122:25313;11661:16;1122:25313;;11661:16;:::i;11708:7::-;4902:69:2;1122:25313:99;;;;;;4902:69:2;;;:::i;:::-;;:::i;:::-;1195:12:0;929:10:6;1195:12:0;:::i;:::-;3479:99:2;;1122:25313:99;;3479:99:2;1122:25313:99;;;;;;;3553:14:2;1122:25313:99;;;;;;3553:14:2;1122:25313:99;;3394:65:2;-1:-1:-1;;1122:25313:99;;;;;3394:65:2;;;1122:25313:99;;;-1:-1:-1;;;1122:25313:99;;;;;;;;;;;;;;;;;-1:-1:-1;;;1122:25313:99;;;;;;;3178:108:2;3258:4;;1476:19:4;:23;3219:66:2;;3178:108;3219:66;1122:25313:99;;;;;3268:17:2;3178:108;;3179:34;1122:25313:99;;;;;3197:16:2;3179:34;;1122:25313:99;;;;;;;-1:-1:-1;;1122:25313:99;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;1122:25313:99;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:99;;;8946:22;1122:25313;;;;;;;;8946:58;;1122:25313;8946:58;:::i;1122:25313::-;;;;;;;;;;;;;1513:6:0;1122:25313:99;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;;;;;;;;;;;;;2833:10;1122:25313;;14973:19;1122:25313;;;;;;;;14972:31;14968:92;;15069:17;1122:25313;;;;;;;;15069:17;1122:25313;2833:10;1122:25313;;14973:19;1122:25313;;;;;;;;;;;;15200:25;15158:32;2833:10;15158:32;:::i;:::-;15200:25;:::i;:::-;-1:-1:-1;;15251:15:99;1122:25313;;;-1:-1:-1;;;;;1122:25313:99;15235:69;;;;;1122:25313;;;15235:69;1122:25313;;;;;;;;;15235:69;;2833:10;1122:25313;15235:69;;1122:25313;15235:69;;;;;;;;1122:25313;-1:-1:-1;15251:15:99;1122:25313;-1:-1:-1;;;;;1122:25313:99;2833:10;15319:57;;;;1122:25313;;15235:69;;;;;:::i;:::-;1122:25313;;15235:69;;;;;1122:25313;;;;;;;;;15235:69;1122:25313;;;-1:-1:-1;;;1122:25313:99;;;;;;;;14968:92;-1:-1:-1;;;15026:23:99;;1122:25313;;15026:23;1122:25313;;;;;;;-1:-1:-1;;1122:25313:99;;;;;;:::i;:::-;3156:10;1122:25313;;3136:19;1122:25313;;;;;;;;3135:32;3131:93;;3271:14;3156:10;;3271:14;:::i;3131:93::-;-1:-1:-1;;;3190:23:99;;1122:25313;3190:23;;1122:25313;;;;;;;;;;;;;1303:62:0;;:::i;:::-;2765:6;1122:25313:99;;-1:-1:-1;;;;;;1122:25313:99;;;;;;;-1:-1:-1;;;;;1122:25313:99;2813:40:0;1122:25313:99;;2813:40:0;1122:25313:99;;;;;;;;;-1:-1:-1;;1122:25313:99;;;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;13932:57;1122:25313;;4752:10;1122:25313;;;;;;:::i;:::-;1303:62:0;;;:::i;:::-;13859:14:99;1122:25313;;;13859:14;1122:25313;;;;;;;;;;13932:57;4752:10;:::i;1122:25313::-;;;;;;;-1:-1:-1;;1122:25313:99;;;;1303:62:0;;:::i;:::-;5403:16:99;1122:25313;;5403:16;:::i;1122:25313::-;;;;;;;-1:-1:-1;;1122:25313:99;;;;;;-1:-1:-1;;;;;1122:25313:99;;:::i;:::-;;;;7450:26;1122:25313;;;;;-1:-1:-1;;;;;1122:25313:99;7450:108;;1122:25313;;;7450:108;:::i;1122:25313::-;;;;;;;-1:-1:-1;;1122:25313:99;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;;;:::i;:::-;;;;;;12195:21;1122:25313;;12605:15;1122:25313;12584:36;12580:98;;12704:10;;;:::i;12580:98::-;-1:-1:-1;;;12643:24:99;;1122:25313;12643:24;;1122:25313;-1:-1:-1;;;1122:25313:99;;;;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10158:14;1122:25313;;;;;;;;;;;;;;-1:-1:-1;;1122:25313:99;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;2658:10;1122:25313;;15820:19;1122:25313;;;;;;;;15816:95;;15920:17;1122:25313;-1:-1:-1;;1122:25313:99;;;;;;;;;16123:11;1122:25313;;15920:17;1122:25313;2658:10;1122:25313;;15820:19;1122:25313;;;;;;;;;;;;;;16051:25;16009:32;2658:10;16009:32;:::i;16051:25::-;2658:10;;;16123:11;:::i;:::-;16161:15;1122:25313;-1:-1:-1;;;;;1122:25313:99;16145:119;;;;;1122:25313;;;;;;;;;;;;;;;;16145:119;;2658:10;1122:25313;16145:119;;1122:25313;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;16145:119;;;;;;;;;;1122:25313;16161:15;1122:25313;-1:-1:-1;;;;;1122:25313:99;2658:10;16279:46;;;;1122:25313;;16145:119;;;;:::i;:::-;;;;;;1122:25313;;;;;;;;;;;;-1:-1:-1;;;1122:25313:99;;;;;;;;15816:95;-1:-1:-1;;;15873:27:99;;1122:25313;15873:27;;1122:25313;;;;;-1:-1:-1;;;1122:25313:99;;;;;;;;;;;;;;;-1:-1:-1;;1122:25313:99;;;;;;7914:42;;1122:25313;;-1:-1:-1;;;;;1122:25313:99;;:::i;:::-;;;;7914:22;1122:25313;;;7914:42;:::i;1122:25313::-;;;;;;;;;;;;;;8188:28;;:::i;1122:25313::-;;;;;;;-1:-1:-1;;1122:25313:99;;;;;9781:48;1122:25313;;;:::i;:::-;;9781:48;:::i;1122:25313::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;1122:25313:99;;;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;;;:::i;:::-;;;;6101:56;;;1122:25313;6101:56;1122:25313;6101:56;;1122:25313;;;;;;6101:56;;1122:25313;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20642:20;;20696;;1122:25313;;;21765:35;;21761:89;;21863:19;;21859:72;;20802:9;;;;23417:12;23398:31;;;;20802:9;;20813:17;;;;;;24922:92;;;;;;;;25030:47;;;:::i;:::-;26173:27;;26169:86;;25625:51;25517:92;25625:51;:::i;:::-;26338:30;26334:93;;1122:25313;;-1:-1:-1;;;1122:25313:99;;;;;26334:93;-1:-1:-1;;;26391:25:99;;1122:25313;;26391:25;26169:86;-1:-1:-1;;;26223:21:99;;1122:25313;26223:21;;24922:92;-1:-1:-1;;;24980:23:99;;1122:25313;23452:23;24980;20832:3;1122:25313;;;;;;;;;;;;;;20869:13;;;;:::i;:::-;1122:25313;;23394:92;;;1122:25313;;;23568:26;1122:25313;;;;;;;-1:-1:-1;;;;;1122:25313:99;23568:111;;1122:25313;;23568:111;:::i;:::-;1122:25313;;-1:-1:-1;;;;;1122:25313:99;22273:29;;22269:78;;22772:50;21081:14;;;;;;:::i;:::-;;22772:50;;:::i;:::-;22771:51;22767:107;;21111:30;1122:25313;21292:30;21111;;;;24332:59;21111:30;1122:25313;21111:30;24224:92;;1122:25313;;;24332:22;1122:25313;;;24332:59;:::i;:::-;21292:30;;:::i;:::-;20832:3;1122:25313;20802:9;;;;;;;;22767:107;-1:-1:-1;;;22845:18:99;;1122:25313;22845:18;;22269:78;-1:-1:-1;;;22325:11:99;;1122:25313;22325:11;;23394:92;-1:-1:-1;;;23452:23:99;;1122:25313;23452:23;;21859:72;-1:-1:-1;;;21905:15:99;;1122:25313;21905:15;;21761:89;-1:-1:-1;;;;;;21823:16:99;;1122:25313;21823:16;;1122:25313;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;1122:25313:99;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1122:25313:99;;;;;9364:44;1122:25313;;;:::i;:::-;;9364:44;:::i;1122:25313::-;;;;;;;-1:-1:-1;;1122:25313:99;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;3687:10;1122:25313;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;:::o;:::-;;;;-1:-1:-1;1122:25313:99;;;;;-1:-1:-1;1122:25313:99;;;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;:::o;:::-;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;1122:25313:99;;;;;;-1:-1:-1;;1122:25313:99;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1122:25313:99;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1122:25313:99;;;;:::o;:::-;;;;;;;;;;;;;;6511:7;1122:25313;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;6511:7;-1:-1:-1;1122:25313:99;;;-1:-1:-1;;;;;;;;;;;1122:25313:99;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;10470:803;1122:25313;;:::i;:::-;;;10639:14;;1122:25313;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;-1:-1:-1;;1122:25313:99;;;;;10786:3;1122:25313;;10759:25;;;;;1122:25313;;-1:-1:-1;;;;;10821:17:99;1122:25313;10821:17;;:::i;:::-;;1122:25313;;10805:42;;;;:::i;:::-;1122:25313;;10748:9;;10759:25;-1:-1:-1;1122:25313:99;;;-1:-1:-1;;;10893:93:99;;-1:-1:-1;;;;;1122:25313:99;;;10893:93;;;1122:25313;;;;;;;;;;;;;10759:25;;;;1122:25313;;;;;;;;-1:-1:-1;1122:25313:99;;;;;;-1:-1:-1;1122:25313:99;;10893:93;;;;;-1:-1:-1;10893:93:99;;-1:-1:-1;10893:18:99;-1:-1:-1;;;;;1122:25313:99;10893:93;;;;;;;1122:25313;10893:93;;;1122:25313;11001:9;1122:25313;10996:123;11039:3;1122:25313;;11012:25;;;;;11068:9;;;;:::i;:::-;1122:25313;11080:17;-1:-1:-1;;;;;1122:25313:99;11080:17;;;;:::i;:::-;;:28;1122:25313;;;;;;;;;;;;;;;;;;11058:50;;;;:::i;:::-;11039:3;1122:25313;11001:9;;;11012:25;;;;729:6:100;11012:25:99;;;729:6:100;11174:14:99;1122:25313;11164:24;;;11160:107;11174:14;;;11204:13;:::o;11160:107::-;11248:8;1122:25313;11248:8;:::o;10893:93::-;;;;;;;;;;:::i;:::-;;;1122:25313;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10893:93;;;;;;1122:25313;;;;;;;;;;;;;10893:93;1122:25313;;;;;;;;;;;;-1:-1:-1;;;;;1122:25313:99;;;;;-1:-1:-1;1122:25313:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12971:251::-;;-1:-1:-1;;13106:3:99;1122:25313;;13083:21;;;;;1122:25313;;13125:45;;13134:36;-1:-1:-1;;;;;13156:13:99;;;;:::i;:::-;1122:25313;;13134:36;:::i;:::-;13125:45;;:::i;:::-;13106:3;1122:25313;13072:9;;;13083:21;;;13190:25;13083:21;;;13190:25;:::i;:::-;12971:251;;:::o;1122:25313::-;;;;;;;;-1:-1:-1;1122:25313:99;;-1:-1:-1;1122:25313:99;;;-1:-1:-1;1122:25313:99;:::o;1314:589:5:-;1441:12;1427:26;;1122:25313:99;;;9364:19;1122:25313;1550:15:5;1516:17;1575:255;1582:10;;;;;;-1:-1:-1;;1846:9:5;;;:50;1516:17;1846:50;-1:-1:-1;;;;;1122:25313:99;;1314:589:5:o;1846:50::-;-1:-1:-1;;1122:25313:99;;;;;;;1862:27:5;;9364:19:99;1862:27:5;:::i;:::-;1122:25313:99;;;;1846:50:5;;1575:255;953:5:10;;942:21;953:5;;;729:6:100;;943:5:10;;;942:21;:::i;:::-;1674:22:5;;1122:25313:99;1674:22:5;;9364:19:99;1674:22:5;:::i;:::-;-1:-1:-1;1122:25313:99;;1674:49:5;;;;1743:10;1670:150;;1575:255;;;1670:150;1122:25313:99;;729:6:100;1122:25313:99;;;;;;1670:150:5;1122:25313:99;;;;1516:17:5;1122:25313:99;;;;;1516:17:5;1122:25313:99;;;;;;;;;;;;;;;;;;;;;;;;;;1314:589:5;1441:12;1427:26;;1122:25313:99;;;25625:23;1122:25313;1550:15:5;1516:17;1575:255;1582:10;;;;;;-1:-1:-1;;1846:9:5;;;-1:-1:-1;1516:17:5;;1314:589::o;1846:50::-;-1:-1:-1;;1122:25313:99;;;;;;;1862:27:5;;25625:23:99;1862:27:5;:::i;1575:255::-;953:5:10;;942:21;953:5;;;729:6:100;;943:5:10;;;942:21;:::i;:::-;1674:22:5;;1122:25313:99;1674:22:5;;25625:23:99;1674:22:5;:::i;:::-;-1:-1:-1;1122:25313:99;;1674:49:5;;;;1743:10;1670:150;;1575:255;;;1670:150;1122:25313:99;;729:6:100;1122:25313:99;;;;;;1670:150:5;1122:25313:99;;;;1516:17:5;1122:25313:99;;;;;1516:17:5;1122:25313:99;1314:589:5;;1441:12;1427:26;;1122:25313:99;;;;;1550:15:5;1516:17;1575:255;1582:10;;;;;;-1:-1:-1;;1846:9:5;;;-1:-1:-1;1516:17:5;;1122:25313:99;-1:-1:-1;1314:589:5:o;1846:50::-;-1:-1:-1;;1122:25313:99;;;;;;;1862:27:5;;;:::i;1575:255::-;953:5:10;;942:21;953:5;;;729:6:100;;943:5:10;;;942:21;:::i;:::-;1674:22:5;;1122:25313:99;1674:22:5;;;;:::i;:::-;-1:-1:-1;1122:25313:99;;1674:49:5;;;;1743:10;1670:150;;1575:255;;;1670:150;1122:25313:99;;729:6:100;1122:25313:99;;;;;;1670:150:5;1122:25313:99;;;;1516:17:5;1122:25313:99;;;;;1516:17:5;1122:25313:99;934:190:5;8188:19:99;1122:25313;1069:8:5;;;-1:-1:-1;1028:17:5;;934:190::o;:::-;1122:25313:99;;1069:8:5;;;-1:-1:-1;1028:17:5;;1122:25313:99;-1:-1:-1;934:190:5:o;1122:25313:99:-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1122:25313:99;;;;:::o;1599:130:0:-;1513:6;1122:25313:99;-1:-1:-1;;;;;1122:25313:99;929:10:6;1662:23:0;1122:25313:99;;1599:130:0:o;1122:25313:99:-;;;;;;;;;;;;;;;;;;;;;;;;;13392:184;-1:-1:-1;13468:23:99;1122:25313;2240:12:5;;13468:23:99;2240:12:5;:::i;:::-;2266:7;;;;:66;;;13392:184:99;2262:370:5;;;2384:36;;;:::i;:::-;1122:25313:99;-1:-1:-1;;1122:25313:99;;;;;;;2348:26:5;;:72;13529:40:99;2348:26:5;;;1122:25313:99;2348:26:5;13468:23:99;2348:26:5;:::i;:::-;:72;1122:25313:99;;;;;;;;;;;;;;;;;2348:72:5;2641:19;1122:25313:99;;;;;13529:40;13392:184::o;2262:370:5:-;1122:25313:99;2546:12:5;15272:25:11;1122:25313:99;;2569:36:5;;;:::i;:::-;1122:25313:99;;;;;;;:::i;:::-;2546:12:5;1122:25313:99;;;;-1:-1:-1;;;;;1122:25313:99;;;2491:116:5;;;1122:25313:99;;;2491:116:5;-1:-1:-1;;;1122:25313:99;;;;;;;;;;13468:23;1122:25313;13468:23;1122:25313;:::i;:::-;;;;;;-1:-1:-1;1122:25313:99;;;;;;;-1:-1:-1;;1122:25313:99;;;;;;;;;13529:40;;1122:25313;;2262:370:5;;1122:25313:99;-1:-1:-1;;;1122:25313:99;;;;;;;;;;;;-1:-1:-1;;;1122:25313:99;;;;;;;;;;;;;;;;;-1:-1:-1;;;1122:25313:99;;;;;;;2266:66:5;-1:-1:-1;;;1122:25313:99;;;;;;;2277:26:5;1122:25313:99;2277:26:5;13468:23:99;2277:26:5;:::i;:::-;1122:25313:99;;;2320:12:5;2277:55;2266:66;;1122:25313:99;-1:-1:-1;;;1122:25313:99;;;;;;;;2673:187:0;2765:6;1122:25313:99;;-1:-1:-1;;;;;1122:25313:99;;;-1:-1:-1;;;;;;1122:25313:99;;;;;;;;;;2813:40:0;-1:-1:-1;;2813:40:0;2673:187::o;16562:535:99:-;-1:-1:-1;;;;;1122:25313:99;;;-1:-1:-1;1122:25313:99;;;16734:26;1122:25313;;;;;;;;;16734:46;;;:::i;:::-;-1:-1:-1;;;;;1122:25313:99;;;;;;;16805:31;;;16801:68;;1122:25313;-1:-1:-1;1122:25313:99;16734:26;1122:25313;;16878:67;1122:25313;;-1:-1:-1;1122:25313:99;16878:67;:::i;:::-;1122:25313;;;;;;;16960:130;1122:25313;17013:12;16960:130;;16562:535::o;16801:68::-;16852:7;;;:::o;1122:25313::-;;;;:::o;:::-;;;-1:-1:-1;;;1122:25313:99;;;;;;;;;;;;;;;;;-1:-1:-1;;;1122:25313:99;;;;;;;14360:416;14439:26;;;:::i;:::-;14438:27;14434:80;;1122:25313;;;;;;:::i;:::-;;;:::i;:::-;;;14549:7;1122:25313;-1:-1:-1;14549:7:99;1122:25313;;;;14360:416;14595:9;-1:-1:-1;14640:3:99;14610:21;;1122:25313;;14606:32;;;;;14683:24;;;;:::i;:::-;;14549:7;1122:25313;-1:-1:-1;;;1122:25313:99;;;;;;;;14549:7;1122:25313;-1:-1:-1;14549:7:99;1122:25313;;;;;;14549:7;1122:25313;;;;;;;;;;;-1:-1:-1;;;;;;1122:25313:99;-1:-1:-1;;;;;1122:25313:99;;;;;;;;-1:-1:-1;;;;;;;;;;;1122:25313:99;;;;;;14595:9;;1122:25313;-1:-1:-1;;;1122:25313:99;;;;;;;;14606:32;;;;1122:25313;14606:32;1122:25313;14733:36;14606:32;1122:25313;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;14733:36;;;14360:416::o;1122:25313::-;14549:7;-1:-1:-1;1122:25313:99;-1:-1:-1;;;;;;;;;;;1122:25313:99;-1:-1:-1;;;;;;;;;;;1122:25313:99;;;;;;;;;;-1:-1:-1;1122:25313:99;;;;;;14434:80;14488:15;;;-1:-1:-1;14488:15:99;;-1:-1:-1;14488:15:99;1122:25313;;;;;;;-1:-1:-1;1122:25313:99;;;;;;;;;;;;;:::o;17277:810::-;-1:-1:-1;;;;;1122:25313:99;;;;;;17454:22;1122:25313;;;;;;;;;;17454:42;;;:::i;:::-;1122:25313;;;;17511:19;1122:25313;;;;;;;;17510:31;17506:484;1122:25313;;;17557:26;;;;;:::i;:::-;17601:10;;;17597:61;;1122:25313;;;17454:22;1122:25313;;;;;;;;2240:12:5;;;:::i;:::-;2266:7;;;;:66;;;17506:484:99;2262:370:5;;;2384:36;;;:::i;:::-;1122:25313:99;-1:-1:-1;;1122:25313:99;;;;;;;2348:26:5;1122:25313:99;2348:26:5;;;18004:54:99;2348:26:5;;;:72;:26;;:::i;:72::-;2641:19;17506:484:99;1122:25313;;;;;;;;;18004:54;17277:810;:::o;2262:370:5:-;1122:25313:99;2546:12:5;15272:25:11;1122:25313:99;;2569:36:5;;;:::i;:::-;1122:25313:99;;;;;;;:::i;:::-;2546:12:5;1122:25313:99;;;;-1:-1:-1;;;;;1122:25313:99;;;;2491:116:5;;1122:25313:99;;;2491:116:5;-1:-1:-1;;;1122:25313:99;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;1122:25313:99;;;;;-1:-1:-1;;1122:25313:99;;;;;;;;;18004:54;;1122:25313;;;;2262:370:5;;1122:25313:99;-1:-1:-1;;;1122:25313:99;;;;;;;;2266:66:5;-1:-1:-1;;;1122:25313:99;;;;;;;2277:26:5;1122:25313:99;2277:26:5;;;:::i;:::-;1122:25313:99;;;2320:12:5;2277:55;2266:66;;1122:25313:99;-1:-1:-1;;;1122:25313:99;;;;;;;;17597:61;17631:12;;;;:::o;17506:484::-;17755:28;;;;;;;:::i;:::-;17805:37;;;;;:::i;:::-;17860:10;;;17856:61;;18004:54;1122:25313;;;;;;17454:22;1122:25313;;17930:49;1122:25313;;;;17930:49;:::i;:::-;17506:484;;;;18366:403;;18572:30;18515:28;;:::i;:::-;18572:30;;;:::i;:::-;18657:40;-1:-1:-1;18515:19:99;1122:25313;2240:12:5;;18515:19:99;2240:12:5;:::i;:::-;2266:7;;;;:66;;;18366:403:99;2262:370:5;;;2384:36;;;:::i;:::-;1122:25313:99;-1:-1:-1;;1122:25313:99;;;;;;;2348:26:5;;;:72;:26;18515:19:99;2348:26:5;:::i;:72::-;2641:19;18712:50:99;1122:25313;;;;;;;;;;;18712:50;18366:403::o;2262:370:5:-;1122:25313:99;2546:12:5;15272:25:11;1122:25313:99;;2569:36:5;;;:::i;:::-;1122:25313:99;;;;;;;:::i;:::-;2546:12:5;1122:25313:99;;;;-1:-1:-1;;;;;1122:25313:99;;;2491:116:5;;;1122:25313:99;;;2491:116:5;-1:-1:-1;;;1122:25313:99;;;;;;;;;;18515:19;1122:25313;18515:19;1122:25313;:::i;:::-;;;;;;-1:-1:-1;1122:25313:99;;;;;-1:-1:-1;;1122:25313:99;;;;;;;;;2262:370:5;;2266:66;-1:-1:-1;;;1122:25313:99;;;;;;;2277:26:5;1122:25313:99;2277:26:5;18515:19:99;2277:26:5;:::i;:::-;1122:25313:99;;;2320:12:5;2277:55;2266:66;;2081:586;;;;1122:25313:99;;2240:12:5;;;:::i;:::-;2266:7;;;;:66;;;2081:586;2262:370;;;2384:36;;;:::i;:::-;1122:25313:99;;;;;;;;;;2348:72:5;:26;;;;:::i;:72::-;2641:19;2081:586;:::o;2262:370::-;1122:25313:99;2546:12:5;15272:25:11;1122:25313:99;;2569:36:5;;;:::i;:::-;1122:25313:99;;;;;;;:::i;:::-;2546:12:5;1122:25313:99;;;;-1:-1:-1;;;;;1122:25313:99;;;2491:116:5;;;1122:25313:99;;;2491:116:5;-1:-1:-1;;;1122:25313:99;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;1122:25313:99;;;;;;;;;;;;2641:19:5;2081:586;:::o;1122:25313:99:-;;;;2192:17:5;1122:25313:99;2192:17:5;1122:25313:99;;;2192:17:5;1122:25313:99;2266:66:5;-1:-1:-1;;;1122:25313:99;;;;;;;2277:26:5;1122:25313:99;2277:26:5;;;:::i;:::-;1122:25313:99;;;2320:12:5;2277:55;2266:66;;19208:671:99;19345:18;;1122:25313;;;19508:3;1122:25313;;19485:21;;;;;-1:-1:-1;;;;;19553:13:99;;;;:::i;:::-;;1122:25313;;;-1:-1:-1;;;;;1122:25313:99;19594:31;-1:-1:-1;19594:31:99;19590:55;;19703:43;1122:25313;19659:30;19722:13;-1:-1:-1;;;;;19722:24:99;:13;;;;:::i;:::-;;:24;1122:25313;;19703:43;;:::i;:::-;19508:3;1122:25313;19474:9;;;;19590:55;22325:11;;;1122:25313;19634:11;;1122:25313;19634:11;19485:21;-1:-1:-1;19485:21:99;;-1:-1:-1;729:6:100;19770:22:99;;-1:-1:-1;729:6:100;;1122:25313:99;19808:12;:::o;19766:107::-;1122:25313;19851:11;:::o;1083:688:9:-;;;;1294:44;;;;:::i;:::-;1122:25313:99;;;;;;1352:46:9;:69;;;;1083:688;1348:111;;;1122:25313:99;;;1538:86:9;1122:25313:99;;;;1538:86:9;;;;;;6250:45:99;;;;1538:86:9;;;;;1122:25313:99;;;;;;;;;;;:::i;:::-;1538:86:9;1122:25313:99;;1538:86:9;;;;;;:::i;:::-;1507:127;;;;1122:25313:99;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;1538:86:9;1122:25313:99;;;;1652:30:9;;;1122:25313:99;1652:111:9;;;1644:120;1083:688;:::o;1652:111::-;1122:25313:99;;1538:86:9;1122:25313:99;;;1686:28:9;;1122:25313:99;;;;1538:86:9;1686:28;1122:25313:99;-1:-1:-1;;;;;;1122:25313:99;;;;;;;;-1:-1:-1;;;1686:77:9;;1083:688::o;1652:30::-;1122:25313:99;;1538:86:9;1663:19;;-1:-1:-1;1652:30:9;;1122:25313:99;;;;1348:111:9;1437:11;;;1122:25313:99;1437:11:9;:::o;1352:69::-;-1:-1:-1;;;;;1122:25313:99;;;;;1402:19:9;;-1:-1:-1;1352:69:9;;;1122:25313:99;;;;;;;;;;;;2762:192:11;-1:-1:-1;;;;;2846:26:11;;1122:25313:99;;-1:-1:-1;;;;;1122:25313:99;;2762:192:11:o;1122:25313:99:-;;;-1:-1:-1;;;1122:25313:99;;;;;;;;;;;;;;;;;-1:-1:-1;;;1122:25313:99;;;;;;;2265:1373:8;1122:25313:99;;2596:2:8;2576:22;;2596:2;;2859:180;;3059:25;2859:180;;;;;;;;;;;;;;-1:-1:-1;2859:180:8;3059:25;;:::i;:::-;3052:32;;:::o;2572:1060::-;3125:2;3105:22;3125:2;;;3368:123;;;;;;;1122:25313:99;;;;;5189:2:8;1122:25313:99;;;;;;;5209:25:8;;-1:-1:-1;;;;;5060:80:8;;1122:25313:99;;;5209:25:8;:::i;3101:531::-;3565:56;;3581:1;3565:56;3585:35;3565:56;:::o;5832:1603::-;;6882:66;6869:79;;6865:161;;1122:25313:99;;7039:7:8;7044:2;7039:7;;;:18;;;5832:1603;7035:100;;1122:25313:99;;-1:-1:-1;1122:25313:99;;;;;;;;;;;;;;;;;;;;7246:24:8;;;;;;;;;-1:-1:-1;7246:24:8;-1:-1:-1;;;;;1122:25313:99;;7284:20:8;7280:101;;7391:37;-1:-1:-1;5832:1603:8;:::o;7280:101::-;7320:50;-1:-1:-1;7320:50:8;7246:24;7320:50;:::o;7035:100::-;7073:51;;;;7089:1;7073:51;7093:30;7073:51;:::o;7039:18::-;7050:7;7055:2;7050:7;;;7039:18;;6865:161;6964:51;;;;6980:1;6964:51;6984:30;6964:51;:::o","linkReferences":{},"immutableReferences":{"31701":[{"start":5083,"length":32}]}},"methodIdentifiers":{"deregisterOperator()":"857dc190","getLastCheckpointOperatorWeight(address)":"3b242e4a","getLastCheckpointThresholdWeight()":"b933fa74","getLastCheckpointThresholdWeightAtBlock(uint32)":"1e4cd85e","getLastCheckpointTotalWeight()":"314f3a49","getLastCheckpointTotalWeightAtBlock(uint32)":"0dba3394","getLastestOperatorSigningKey(address)":"cdcd3581","getOperatorSigningKeyAtBlock(address,uint256)":"5e1042e8","getOperatorWeight(address)":"98ec1ac9","getOperatorWeightAtBlock(address,uint32)":"955f2d90","initialize(address,uint256,((address,uint96)[]))":"ab118995","isValidSignature(bytes32,bytes)":"1626ba7e","minimumWeight()":"40bf2fb7","operatorRegistered(address)":"ec7fbb31","owner()":"8da5cb5b","quorum()":"1703a018","registerOperatorWithSignature((bytes,bytes32,uint256),address)":"3d5611f6","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","updateMinimumWeight(uint256,address[])":"696255be","updateOperatorSigningKey(address)":"743c31f4","updateOperators(address[])":"00cf2ab5","updateOperatorsForQuorum(address[][],bytes)":"5140a548","updateQuorumConfig(((address,uint96)[]),address[])":"dec5d1f6","updateStakeThreshold(uint256)":"5ef53329"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"_delegationManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientSignedStake\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientWeight\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQuorum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidReferenceBlock\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignedWeight\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidThreshold\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustUpdateAllOperators\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSorted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorNotRegistered\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_old\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_new\",\"type\":\"uint256\"}],\"name\":\"MinimumWeightUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_avs\",\"type\":\"address\"}],\"name\":\"OperatorDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_avs\",\"type\":\"address\"}],\"name\":\"OperatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldWeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newWeight\",\"type\":\"uint256\"}],\"name\":\"OperatorWeightUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct StrategyParams[]\",\"name\":\"strategies\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct Quorum\",\"name\":\"_old\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct StrategyParams[]\",\"name\":\"strategies\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct Quorum\",\"name\":\"_new\",\"type\":\"tuple\"}],\"name\":\"QuorumUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"updateBlock\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigningKey\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldSigningKey\",\"type\":\"address\"}],\"name\":\"SigningKeyUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_thresholdWeight\",\"type\":\"uint256\"}],\"name\":\"ThresholdWeightUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTotalWeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalWeight\",\"type\":\"uint256\"}],\"name\":\"TotalWeightUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMinimumWeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinimumWeight\",\"type\":\"uint256\"}],\"name\":\"UpdateMinimumWeight\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deregisterOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"getLastCheckpointOperatorWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastCheckpointThresholdWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_blockNumber\",\"type\":\"uint32\"}],\"name\":\"getLastCheckpointThresholdWeightAtBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastCheckpointTotalWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_blockNumber\",\"type\":\"uint32\"}],\"name\":\"getLastCheckpointTotalWeightAtBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"getLastestOperatorSigningKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"getOperatorSigningKeyAtBlock\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"getOperatorWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_blockNumber\",\"type\":\"uint32\"}],\"name\":\"getOperatorWeightAtBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_serviceManager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_thresholdWeight\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct StrategyParams[]\",\"name\":\"strategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Quorum\",\"name\":\"_quorum\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signatureData\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"operatorRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorum\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct StrategyParams[]\",\"name\":\"strategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Quorum\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithSaltAndExpiry\",\"name\":\"_operatorSignature\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_signingKey\",\"type\":\"address\"}],\"name\":\"registerOperatorWithSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMinimumWeight\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_operators\",\"type\":\"address[]\"}],\"name\":\"updateMinimumWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newSigningKey\",\"type\":\"address\"}],\"name\":\"updateOperatorSigningKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_operators\",\"type\":\"address[]\"}],\"name\":\"updateOperators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[][]\",\"name\":\"operatorsPerQuorum\",\"type\":\"address[][]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"updateOperatorsForQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct StrategyParams[]\",\"name\":\"strategies\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Quorum\",\"name\":\"_quorum\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"_operators\",\"type\":\"address[]\"}],\"name\":\"updateQuorumConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_thresholdWeight\",\"type\":\"uint256\"}],\"name\":\"updateStakeThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"THIS CONTRACT IS NOT AUDITED\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MinimumWeightUpdated(uint256,uint256)\":{\"params\":{\"_new\":\"The new minimumWeight\",\"_old\":\"The previous minimum weight\"}},\"OperatorDeregistered(address,address)\":{\"params\":{\"_avs\":\"The address of the associated AVS\",\"_operator\":\"The address of the deregistered operator\"}},\"OperatorRegistered(address,address)\":{\"params\":{\"_avs\":\"The address of the associated AVS\",\"_operator\":\"The address of the registered operator\"}},\"OperatorWeightUpdated(address,uint256,uint256)\":{\"params\":{\"_operator\":\"The address of the operator updated\",\"newWeight\":\"The operator's weight after the update\",\"oldWeight\":\"The operator's weight before the update\"}},\"QuorumUpdated(((address,uint96)[]),((address,uint96)[]))\":{\"params\":{\"_new\":\"The new quorum configuration\",\"_old\":\"The previous quorum configuration\"}},\"SigningKeyUpdate(address,uint256,address,address)\":{\"params\":{\"newSigningKey\":\"The operator's signing key after the update\",\"oldSigningKey\":\"The operator's signing key before the update\",\"operator\":\"The address of the operator whose signing key was updated\",\"updateBlock\":\"The block number at which the signing key was updated\"}},\"TotalWeightUpdated(uint256,uint256)\":{\"params\":{\"newTotalWeight\":\"The total weight after the update\",\"oldTotalWeight\":\"The total weight before the update\"}},\"UpdateMinimumWeight(uint256,uint256)\":{\"params\":{\"newMinimumWeight\":\"The updated weight\",\"oldMinimumWeight\":\"The previous weight\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor to create ECDSAStakeRegistry.\",\"params\":{\"_delegationManager\":\"Address of the DelegationManager contract that this registry interacts with.\"}},\"getLastCheckpointOperatorWeight(address)\":{\"params\":{\"_operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"uint256 - The latest weight of the operator.\"}},\"getLastCheckpointThresholdWeight()\":{\"returns\":{\"_0\":\"uint256 - The latest threshold weight.\"}},\"getLastCheckpointThresholdWeightAtBlock(uint32)\":{\"params\":{\"_blockNumber\":\"The block number to get the threshold weight for the quorum\"},\"returns\":{\"_0\":\"uint256 - The threshold weight the given block.\"}},\"getLastCheckpointTotalWeight()\":{\"returns\":{\"_0\":\"uint256 - The latest total weight.\"}},\"getLastCheckpointTotalWeightAtBlock(uint32)\":{\"params\":{\"_blockNumber\":\"The block number to get the total weight for the quorum\"},\"returns\":{\"_0\":\"uint256 - The total weight at the given block.\"}},\"getLastestOperatorSigningKey(address)\":{\"params\":{\"_operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"The latest signing key of the operator.\"}},\"getOperatorSigningKeyAtBlock(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number to get the operator's signing key.\",\"_operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"The signing key of the operator at the given block.\"}},\"getOperatorWeight(address)\":{\"params\":{\"_operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"uint256 - The current weight of the operator; returns 0 if below the threshold.\"}},\"getOperatorWeightAtBlock(address,uint32)\":{\"params\":{\"_blockNumber\":\"The block number to get the operator weight for the quorum\",\"_operator\":\"The address of the operator.\"},\"returns\":{\"_0\":\"uint256 - The weight of the operator at the given block.\"}},\"initialize(address,uint256,((address,uint96)[]))\":{\"params\":{\"_quorum\":\"The quorum struct containing the details of the quorum thresholds.\",\"_serviceManager\":\"The address of the service manager.\",\"_thresholdWeight\":\"The threshold weight in basis points.\"}},\"isValidSignature(bytes32,bytes)\":{\"params\":{\"_dataHash\":\"The hash of the data that was signed.\",\"_signatureData\":\"Encoded signature data consisting of an array of operators, an array of signatures, and a reference block number.\"},\"returns\":{\"_0\":\"The function selector that indicates the signature is valid according to ERC1271 standard.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"quorum()\":{\"returns\":{\"_0\":\"Quorum - The current quorum of strategies and weights\"}},\"registerOperatorWithSignature((bytes,bytes32,uint256),address)\":{\"params\":{\"_operatorSignature\":\"Contains the operator's signature, salt, and expiry\",\"_signingKey\":\"The signing key to add to the operator's history\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateMinimumWeight(uint256,address[])\":{\"details\":\"Access controlled to the contract owner\",\"params\":{\"_newMinimumWeight\":\"The new weight an operator must have to join the operator set\"}},\"updateOperatorSigningKey(address)\":{\"details\":\"Only callable by the operator themselves\",\"params\":{\"_newSigningKey\":\"The new signing key to set for the operator\"}},\"updateOperators(address[])\":{\"details\":\"Queries stakes from the Eigenlayer core DelegationManager contract\",\"params\":{\"_operators\":\"A list of operator addresses to update\"}},\"updateOperatorsForQuorum(address[][],bytes)\":{\"details\":\"This interface maintains compatibility with avs-sync which handles multiquorums while this registry has a single quorum\",\"params\":{\"operatorsPerQuorum\":\"An array of operator address arrays, one for each quorum.\"}},\"updateQuorumConfig(((address,uint96)[]),address[])\":{\"details\":\"Only callable by the contract owner. It first updates the quorum configuration and then updates the list of operators.\",\"params\":{\"_operators\":\"The list of operator addresses to update stakes for\",\"_quorum\":\"The new quorum configuration, including strategies and their new weights\"}},\"updateStakeThreshold(uint256)\":{\"details\":\"This function can only be invoked by the owner of the contract. It delegates the update to an internal function `_updateStakeThreshold`.\",\"params\":{\"_thresholdWeight\":\"The updated threshold weight required to validate a message. This is the cumulative weight that must be met or exceeded by the sum of the stakes of the signatories for a message to be deemed valid.\"}}},\"title\":\"ECDSA Stake Registry\",\"version\":1},\"userdoc\":{\"errors\":{\"InsufficientSignedStake()\":[{\"notice\":\"Indicates the total signed stake fails to meet the required threshold.\"}],\"InsufficientWeight()\":[{\"notice\":\"Indicates an individual signer's weight fails to meet the required threshold.\"}],\"InvalidLength()\":[{\"notice\":\"Indicates encountering an invalid length for the signers or signatures array.\"}],\"InvalidQuorum()\":[{\"notice\":\"Indicates the quorum is invalid\"}],\"InvalidReferenceBlock()\":[{\"notice\":\"Reference blocks must be for blocks that have already been confirmed\"}],\"InvalidSignature()\":[{\"notice\":\"Indicates encountering an invalid signature.\"}],\"InvalidSignedWeight()\":[{\"notice\":\"Indicates operator weights were out of sync and the signed weight exceed the total\"}],\"InvalidThreshold()\":[{\"notice\":\"Thrown when the threshold update is greater than BPS\"}],\"LengthMismatch()\":[{\"notice\":\"Indicates when the lengths of the signers array and signatures array do not match.\"}],\"MustUpdateAllOperators()\":[{\"notice\":\"Thrown when missing operators in an update\"}],\"NotSorted()\":[{\"notice\":\"Indicates the system finds a list of items unsorted\"}],\"OperatorAlreadyRegistered()\":[{\"notice\":\"Thrown when registering an already registered operator\"}],\"OperatorNotRegistered()\":[{\"notice\":\"Thrown when de-registering or updating the stake for an unregisted operator\"}]},\"events\":{\"MinimumWeightUpdated(uint256,uint256)\":{\"notice\":\"Emitted when the weight to join the operator set updates\"},\"OperatorDeregistered(address,address)\":{\"notice\":\"Emitted when the system deregisters an operator\"},\"OperatorRegistered(address,address)\":{\"notice\":\"Emitted when the system registers an operator\"},\"OperatorWeightUpdated(address,uint256,uint256)\":{\"notice\":\"Emitted when the system updates an operator's weight\"},\"QuorumUpdated(((address,uint96)[]),((address,uint96)[]))\":{\"notice\":\"Emitted when the system updates the quorum\"},\"SigningKeyUpdate(address,uint256,address,address)\":{\"notice\":\"Emitted when an operator's signing key is updated\"},\"ThresholdWeightUpdated(uint256)\":{\"notice\":\"Emits when setting a new threshold weight.\"},\"TotalWeightUpdated(uint256,uint256)\":{\"notice\":\"Emitted when the system updates the total weight\"},\"UpdateMinimumWeight(uint256,uint256)\":{\"notice\":\"Emitted when the weight required to be an operator changes\"}},\"kind\":\"user\",\"methods\":{\"deregisterOperator()\":{\"notice\":\"Deregisters an existing operator\"},\"getLastCheckpointOperatorWeight(address)\":{\"notice\":\"Retrieves the last recorded weight for a given operator.\"},\"getLastCheckpointThresholdWeight()\":{\"notice\":\"Retrieves the last recorded threshold weight\"},\"getLastCheckpointThresholdWeightAtBlock(uint32)\":{\"notice\":\"Retrieves the threshold weight at a specific block number.\"},\"getLastCheckpointTotalWeight()\":{\"notice\":\"Retrieves the last recorded total weight across all operators.\"},\"getLastCheckpointTotalWeightAtBlock(uint32)\":{\"notice\":\"Retrieves the total weight at a specific block number.\"},\"getLastestOperatorSigningKey(address)\":{\"notice\":\"Retrieves the latest signing key for a given operator.\"},\"getOperatorSigningKeyAtBlock(address,uint256)\":{\"notice\":\"Retrieves the latest signing key for a given operator at a specific block number.\"},\"getOperatorWeight(address)\":{\"notice\":\"Calculates the current weight of an operator based on their delegated stake in the strategies considered in the quorum\"},\"getOperatorWeightAtBlock(address,uint32)\":{\"notice\":\"Retrieves the operator's weight at a specific block number.\"},\"initialize(address,uint256,((address,uint96)[]))\":{\"notice\":\"Initializes the contract with the given parameters.\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies if the provided signature data is valid for the given data hash.\"},\"minimumWeight()\":{\"notice\":\"Returns the weight an operator must have to contribute to validating an AVS\"},\"quorum()\":{\"notice\":\"Retrieves the current stake quorum details.\"},\"registerOperatorWithSignature((bytes,bytes32,uint256),address)\":{\"notice\":\"Registers a new operator using a provided signature and signing key\"},\"updateMinimumWeight(uint256,address[])\":{\"notice\":\"Updates the weight an operator must have to join the operator set\"},\"updateOperatorSigningKey(address)\":{\"notice\":\"Updates the signing key for an operator\"},\"updateOperators(address[])\":{\"notice\":\"Updates the StakeRegistry's view of one or more operators' stakes adding a new entry in their history of stake checkpoints,\"},\"updateOperatorsForQuorum(address[][],bytes)\":{\"notice\":\"Updates the set of operators for the first quorum.\"},\"updateQuorumConfig(((address,uint96)[]),address[])\":{\"notice\":\"Updates the quorum configuration and the set of operators\"},\"updateStakeThreshold(uint256)\":{\"notice\":\"Sets a new cumulative threshold weight for message validation by operator set signatures.\"}},\"notice\":\"Manages operator registration and quorum updates for an AVS using ECDSA signatures.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-middleware/src/unaudited/ECDSAStakeRegistry.sol\":\"ECDSAStakeRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/\",\":@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/\",\":@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":@openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1271Upgradeable.sol\":{\"keccak256\":\"0x4473c09c087ee1a48c5547b23799c0474b2e08cde6fec5921c628171c4ebcdc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d92614db0b346b756af8ba9bd0098db81b031026361635fb4f55a420254637d\",\"dweb:/ipfs/QmVviVD57zX54ny1zvVsksfYF9RantBwVyJBTdHqPywFuP\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/CheckpointsUpgradeable.sol\":{\"keccak256\":\"0x7fb4716864bc9693785f07ce15f325a44413ad5d2d5685852a9e6112927abd60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2abe805bc615c15daea179f3ff3e3b890f9c0d5ec18d0bb8fad03ab128157ee3\",\"dweb:/ipfs/Qma4UizH7DhTeDfGfkhFFKLnU6p8U9cmodTbgTdRzeFoXX\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xe8c62ca00ed2d0a4d9b7e3c4bf7d62c821618b2cdb3c844da91a1193986851bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a459d8907c5fe73d70b4c522e48127b13b9aaa29a223670e928a2a5e5e4c8f8\",\"dweb:/ipfs/QmcwBnMVrajEBgj2i1saNXnQ6ytHQdnpQF978E86EuhvtX\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/SignatureCheckerUpgradeable.sol\":{\"keccak256\":\"0xb19a57535ad6c6d773f61c1e8f8cc190fa35e12bfadf3743092537c7695fd96a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79811c8c7aabd4fae5ff3021ae67688fc6f6a820f784676bf4b8e41c0c71577d\",\"dweb:/ipfs/QmSo7DdJSzx4U5xvLPnCLNn2SFBPin8dHxYnJrrwxEYQje\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x3b39e1a87bb94b9145d91007bbd2c964438e99a659b4accc6ec6df6a1c62589a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c983bca009e0c413b39f851ca4728c20c42bcf5359252131d48f612ee5757a70\",\"dweb:/ipfs/QmP1c7MV6FdzTBYTFdosLNijvGa1dKeaGXy5Ax5UV381GZ\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xd7ebe0f80affaa622b9efd95cc8db3e03e70d699176f7457b4a95e34a11f9834\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8cf00c5981b953e57af6f8d6dad38ff0c90c61f1f1b03042039a41797aa198b\",\"dweb:/ipfs/QmdngJRARxdVwxqG7vHDRf2QSBxK6294Ab16G6hsMoXqew\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x5a7dd74fb8a9334aa50c497a58875159aec17e905a7daaf3c276936d5b691bd1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a25b8d80233016a4634b9217a0899f43f18bfb21abb046bee4403e9408296009\",\"dweb:/ipfs/QmUA3bTzddiHnPxBqYtovxvcVvCkNrAxPJ7xcskocxEq5P\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IRewardsCoordinator.sol\":{\"keccak256\":\"0x88eb57f8d59aee48e836e5304a06c5de7e011b3deca0054d6047f756cfeea914\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fc105a7d72709f5c8b53e5cc5268f6bb28c538b0a816d481ff9f2841f7b61551\",\"dweb:/ipfs/Qmf6fNnEDoUQ4Ja3Quo5jeFJMePt3JAsC7a9FnYZWPsHNk\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b\",\"dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e\",\"dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE\"]},\"lib/eigenlayer-middleware/src/interfaces/IECDSAStakeRegistryEventsAndErrors.sol\":{\"keccak256\":\"0x87d62369932af21f32ea3c66d3238e6b65fd90a00bfb537a639189f4d8ceb7dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6951c38bc040fdb1f35e117390a1936543974e062fcc519300365a68c800c88d\",\"dweb:/ipfs/QmVPjxkL1bLaA6EtthcoerTaMjAmJx8Lv1hchALEkNMfDH\"]},\"lib/eigenlayer-middleware/src/interfaces/IServiceManager.sol\":{\"keccak256\":\"0x7602cfb4397a114a0ed60e70e8e1d729fdcf406b585838181b3cb3ffa6ac9a9a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b718fa016a13a2a5ce298bc5ea7495cc70cf9c358211c75595d5c9dde9a6cc0f\",\"dweb:/ipfs/QmQNrVmU7P7pRqGBJuTQDkjf3wMDY2kJm7zXdtQwsQTbzY\"]},\"lib/eigenlayer-middleware/src/interfaces/IServiceManagerUI.sol\":{\"keccak256\":\"0x6c66bc2b0b2f5aabd2b90ca02d5b6696fc02d75a53567b16d8d81dd956fd7b1b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://284f9cc3f8eade3b022ab8c527aaa35bdd5e0355607abf6d5ef66fb2c9ce90cd\",\"dweb:/ipfs/QmYi856BQNY6G2FTqAGY9qzWPp27QmiytwnfNtfwPN7Cqm\"]},\"lib/eigenlayer-middleware/src/unaudited/ECDSAStakeRegistry.sol\":{\"keccak256\":\"0x41a94f5a3e38c0907c9b47da511db1d9a545b0175e79a302c15723118db1db07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c875b9516f4dd56a74cb2808c04826769cdccb8e25e01a77227e4fdcc494500b\",\"dweb:/ipfs/QmdyQdsCYyHPxquAY5kcVGdm5AcfX483YSvyYdLGCfWfuq\"]},\"lib/eigenlayer-middleware/src/unaudited/ECDSAStakeRegistryStorage.sol\":{\"keccak256\":\"0xd78e86c73c9b5b588281ac78051e97b5c32f766383575750c9245f4fec1b547c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c917f123adc35cd48a60a768abea19c7c99487c82260429571ae093235e902a\",\"dweb:/ipfs/QmaiLzxQ1GxPk9oxcgVXPtBBviSW9dVEsmC4xZgvWLxko8\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IDelegationManager","name":"_delegationManager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"InsufficientSignedStake"},{"inputs":[],"type":"error","name":"InsufficientWeight"},{"inputs":[],"type":"error","name":"InvalidLength"},{"inputs":[],"type":"error","name":"InvalidQuorum"},{"inputs":[],"type":"error","name":"InvalidReferenceBlock"},{"inputs":[],"type":"error","name":"InvalidSignature"},{"inputs":[],"type":"error","name":"InvalidSignedWeight"},{"inputs":[],"type":"error","name":"InvalidThreshold"},{"inputs":[],"type":"error","name":"LengthMismatch"},{"inputs":[],"type":"error","name":"MustUpdateAllOperators"},{"inputs":[],"type":"error","name":"NotSorted"},{"inputs":[],"type":"error","name":"OperatorAlreadyRegistered"},{"inputs":[],"type":"error","name":"OperatorNotRegistered"},{"inputs":[{"internalType":"uint8","name":"version","type":"uint8","indexed":false}],"type":"event","name":"Initialized","anonymous":false},{"inputs":[{"internalType":"uint256","name":"_old","type":"uint256","indexed":false},{"internalType":"uint256","name":"_new","type":"uint256","indexed":false}],"type":"event","name":"MinimumWeightUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"_operator","type":"address","indexed":true},{"internalType":"address","name":"_avs","type":"address","indexed":true}],"type":"event","name":"OperatorDeregistered","anonymous":false},{"inputs":[{"internalType":"address","name":"_operator","type":"address","indexed":true},{"internalType":"address","name":"_avs","type":"address","indexed":true}],"type":"event","name":"OperatorRegistered","anonymous":false},{"inputs":[{"internalType":"address","name":"_operator","type":"address","indexed":true},{"internalType":"uint256","name":"oldWeight","type":"uint256","indexed":false},{"internalType":"uint256","name":"newWeight","type":"uint256","indexed":false}],"type":"event","name":"OperatorWeightUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"struct Quorum","name":"_old","type":"tuple","components":[{"internalType":"struct StrategyParams[]","name":"strategies","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}],"indexed":false},{"internalType":"struct Quorum","name":"_new","type":"tuple","components":[{"internalType":"struct StrategyParams[]","name":"strategies","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}],"indexed":false}],"type":"event","name":"QuorumUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"uint256","name":"updateBlock","type":"uint256","indexed":true},{"internalType":"address","name":"newSigningKey","type":"address","indexed":true},{"internalType":"address","name":"oldSigningKey","type":"address","indexed":false}],"type":"event","name":"SigningKeyUpdate","anonymous":false},{"inputs":[{"internalType":"uint256","name":"_thresholdWeight","type":"uint256","indexed":false}],"type":"event","name":"ThresholdWeightUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"oldTotalWeight","type":"uint256","indexed":false},{"internalType":"uint256","name":"newTotalWeight","type":"uint256","indexed":false}],"type":"event","name":"TotalWeightUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"oldMinimumWeight","type":"uint256","indexed":false},{"internalType":"uint256","name":"newMinimumWeight","type":"uint256","indexed":false}],"type":"event","name":"UpdateMinimumWeight","anonymous":false},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deregisterOperator"},{"inputs":[{"internalType":"address","name":"_operator","type":"address"}],"stateMutability":"view","type":"function","name":"getLastCheckpointOperatorWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getLastCheckpointThresholdWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint32","name":"_blockNumber","type":"uint32"}],"stateMutability":"view","type":"function","name":"getLastCheckpointThresholdWeightAtBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getLastCheckpointTotalWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint32","name":"_blockNumber","type":"uint32"}],"stateMutability":"view","type":"function","name":"getLastCheckpointTotalWeightAtBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_operator","type":"address"}],"stateMutability":"view","type":"function","name":"getLastestOperatorSigningKey","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_operator","type":"address"},{"internalType":"uint256","name":"_blockNumber","type":"uint256"}],"stateMutability":"view","type":"function","name":"getOperatorSigningKeyAtBlock","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_operator","type":"address"}],"stateMutability":"view","type":"function","name":"getOperatorWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_operator","type":"address"},{"internalType":"uint32","name":"_blockNumber","type":"uint32"}],"stateMutability":"view","type":"function","name":"getOperatorWeightAtBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_serviceManager","type":"address"},{"internalType":"uint256","name":"_thresholdWeight","type":"uint256"},{"internalType":"struct Quorum","name":"_quorum","type":"tuple","components":[{"internalType":"struct StrategyParams[]","name":"strategies","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}]}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[{"internalType":"bytes32","name":"_dataHash","type":"bytes32"},{"internalType":"bytes","name":"_signatureData","type":"bytes"}],"stateMutability":"view","type":"function","name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"minimumWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_operator","type":"address"}],"stateMutability":"view","type":"function","name":"operatorRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"quorum","outputs":[{"internalType":"struct Quorum","name":"","type":"tuple","components":[{"internalType":"struct StrategyParams[]","name":"strategies","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}]}]},{"inputs":[{"internalType":"struct ISignatureUtils.SignatureWithSaltAndExpiry","name":"_operatorSignature","type":"tuple","components":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256","name":"expiry","type":"uint256"}]},{"internalType":"address","name":"_signingKey","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"registerOperatorWithSignature"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"},{"inputs":[{"internalType":"uint256","name":"_newMinimumWeight","type":"uint256"},{"internalType":"address[]","name":"_operators","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"updateMinimumWeight"},{"inputs":[{"internalType":"address","name":"_newSigningKey","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"updateOperatorSigningKey"},{"inputs":[{"internalType":"address[]","name":"_operators","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"updateOperators"},{"inputs":[{"internalType":"address[][]","name":"operatorsPerQuorum","type":"address[][]"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"updateOperatorsForQuorum"},{"inputs":[{"internalType":"struct Quorum","name":"_quorum","type":"tuple","components":[{"internalType":"struct StrategyParams[]","name":"strategies","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}]},{"internalType":"address[]","name":"_operators","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"updateQuorumConfig"},{"inputs":[{"internalType":"uint256","name":"_thresholdWeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"updateStakeThreshold"}],"devdoc":{"kind":"dev","methods":{"constructor":{"details":"Constructor to create ECDSAStakeRegistry.","params":{"_delegationManager":"Address of the DelegationManager contract that this registry interacts with."}},"getLastCheckpointOperatorWeight(address)":{"params":{"_operator":"The address of the operator."},"returns":{"_0":"uint256 - The latest weight of the operator."}},"getLastCheckpointThresholdWeight()":{"returns":{"_0":"uint256 - The latest threshold weight."}},"getLastCheckpointThresholdWeightAtBlock(uint32)":{"params":{"_blockNumber":"The block number to get the threshold weight for the quorum"},"returns":{"_0":"uint256 - The threshold weight the given block."}},"getLastCheckpointTotalWeight()":{"returns":{"_0":"uint256 - The latest total weight."}},"getLastCheckpointTotalWeightAtBlock(uint32)":{"params":{"_blockNumber":"The block number to get the total weight for the quorum"},"returns":{"_0":"uint256 - The total weight at the given block."}},"getLastestOperatorSigningKey(address)":{"params":{"_operator":"The address of the operator."},"returns":{"_0":"The latest signing key of the operator."}},"getOperatorSigningKeyAtBlock(address,uint256)":{"params":{"_blockNumber":"The block number to get the operator's signing key.","_operator":"The address of the operator."},"returns":{"_0":"The signing key of the operator at the given block."}},"getOperatorWeight(address)":{"params":{"_operator":"The address of the operator."},"returns":{"_0":"uint256 - The current weight of the operator; returns 0 if below the threshold."}},"getOperatorWeightAtBlock(address,uint32)":{"params":{"_blockNumber":"The block number to get the operator weight for the quorum","_operator":"The address of the operator."},"returns":{"_0":"uint256 - The weight of the operator at the given block."}},"initialize(address,uint256,((address,uint96)[]))":{"params":{"_quorum":"The quorum struct containing the details of the quorum thresholds.","_serviceManager":"The address of the service manager.","_thresholdWeight":"The threshold weight in basis points."}},"isValidSignature(bytes32,bytes)":{"params":{"_dataHash":"The hash of the data that was signed.","_signatureData":"Encoded signature data consisting of an array of operators, an array of signatures, and a reference block number."},"returns":{"_0":"The function selector that indicates the signature is valid according to ERC1271 standard."}},"owner()":{"details":"Returns the address of the current owner."},"quorum()":{"returns":{"_0":"Quorum - The current quorum of strategies and weights"}},"registerOperatorWithSignature((bytes,bytes32,uint256),address)":{"params":{"_operatorSignature":"Contains the operator's signature, salt, and expiry","_signingKey":"The signing key to add to the operator's history"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateMinimumWeight(uint256,address[])":{"details":"Access controlled to the contract owner","params":{"_newMinimumWeight":"The new weight an operator must have to join the operator set"}},"updateOperatorSigningKey(address)":{"details":"Only callable by the operator themselves","params":{"_newSigningKey":"The new signing key to set for the operator"}},"updateOperators(address[])":{"details":"Queries stakes from the Eigenlayer core DelegationManager contract","params":{"_operators":"A list of operator addresses to update"}},"updateOperatorsForQuorum(address[][],bytes)":{"details":"This interface maintains compatibility with avs-sync which handles multiquorums while this registry has a single quorum","params":{"operatorsPerQuorum":"An array of operator address arrays, one for each quorum."}},"updateQuorumConfig(((address,uint96)[]),address[])":{"details":"Only callable by the contract owner. It first updates the quorum configuration and then updates the list of operators.","params":{"_operators":"The list of operator addresses to update stakes for","_quorum":"The new quorum configuration, including strategies and their new weights"}},"updateStakeThreshold(uint256)":{"details":"This function can only be invoked by the owner of the contract. It delegates the update to an internal function `_updateStakeThreshold`.","params":{"_thresholdWeight":"The updated threshold weight required to validate a message. This is the cumulative weight that must be met or exceeded by the sum of the stakes of the signatories for a message to be deemed valid."}}},"version":1},"userdoc":{"kind":"user","methods":{"deregisterOperator()":{"notice":"Deregisters an existing operator"},"getLastCheckpointOperatorWeight(address)":{"notice":"Retrieves the last recorded weight for a given operator."},"getLastCheckpointThresholdWeight()":{"notice":"Retrieves the last recorded threshold weight"},"getLastCheckpointThresholdWeightAtBlock(uint32)":{"notice":"Retrieves the threshold weight at a specific block number."},"getLastCheckpointTotalWeight()":{"notice":"Retrieves the last recorded total weight across all operators."},"getLastCheckpointTotalWeightAtBlock(uint32)":{"notice":"Retrieves the total weight at a specific block number."},"getLastestOperatorSigningKey(address)":{"notice":"Retrieves the latest signing key for a given operator."},"getOperatorSigningKeyAtBlock(address,uint256)":{"notice":"Retrieves the latest signing key for a given operator at a specific block number."},"getOperatorWeight(address)":{"notice":"Calculates the current weight of an operator based on their delegated stake in the strategies considered in the quorum"},"getOperatorWeightAtBlock(address,uint32)":{"notice":"Retrieves the operator's weight at a specific block number."},"initialize(address,uint256,((address,uint96)[]))":{"notice":"Initializes the contract with the given parameters."},"isValidSignature(bytes32,bytes)":{"notice":"Verifies if the provided signature data is valid for the given data hash."},"minimumWeight()":{"notice":"Returns the weight an operator must have to contribute to validating an AVS"},"quorum()":{"notice":"Retrieves the current stake quorum details."},"registerOperatorWithSignature((bytes,bytes32,uint256),address)":{"notice":"Registers a new operator using a provided signature and signing key"},"updateMinimumWeight(uint256,address[])":{"notice":"Updates the weight an operator must have to join the operator set"},"updateOperatorSigningKey(address)":{"notice":"Updates the signing key for an operator"},"updateOperators(address[])":{"notice":"Updates the StakeRegistry's view of one or more operators' stakes adding a new entry in their history of stake checkpoints,"},"updateOperatorsForQuorum(address[][],bytes)":{"notice":"Updates the set of operators for the first quorum."},"updateQuorumConfig(((address,uint96)[]),address[])":{"notice":"Updates the quorum configuration and the set of operators"},"updateStakeThreshold(uint256)":{"notice":"Sets a new cumulative threshold weight for message validation by operator set signatures."}},"version":1}},"settings":{"remappings":["@eigenlayer-middleware/=lib/eigenlayer-middleware/","@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/","@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/","@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/","@openzeppelin-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","@openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/","ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/eigenlayer-middleware/src/unaudited/ECDSAStakeRegistry.sol":"ECDSAStakeRegistry"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol":{"keccak256":"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888","urls":["bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a","dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1271Upgradeable.sol":{"keccak256":"0x4473c09c087ee1a48c5547b23799c0474b2e08cde6fec5921c628171c4ebcdc0","urls":["bzz-raw://6d92614db0b346b756af8ba9bd0098db81b031026361635fb4f55a420254637d","dweb:/ipfs/QmVviVD57zX54ny1zvVsksfYF9RantBwVyJBTdHqPywFuP"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol":{"keccak256":"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e","urls":["bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497","dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol":{"keccak256":"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3","urls":["bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4","dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/CheckpointsUpgradeable.sol":{"keccak256":"0x7fb4716864bc9693785f07ce15f325a44413ad5d2d5685852a9e6112927abd60","urls":["bzz-raw://2abe805bc615c15daea179f3ff3e3b890f9c0d5ec18d0bb8fad03ab128157ee3","dweb:/ipfs/Qma4UizH7DhTeDfGfkhFFKLnU6p8U9cmodTbgTdRzeFoXX"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol":{"keccak256":"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149","urls":["bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c","dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol":{"keccak256":"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863","urls":["bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c","dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol":{"keccak256":"0xe8c62ca00ed2d0a4d9b7e3c4bf7d62c821618b2cdb3c844da91a1193986851bf","urls":["bzz-raw://2a459d8907c5fe73d70b4c522e48127b13b9aaa29a223670e928a2a5e5e4c8f8","dweb:/ipfs/QmcwBnMVrajEBgj2i1saNXnQ6ytHQdnpQF978E86EuhvtX"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/SignatureCheckerUpgradeable.sol":{"keccak256":"0xb19a57535ad6c6d773f61c1e8f8cc190fa35e12bfadf3743092537c7695fd96a","urls":["bzz-raw://79811c8c7aabd4fae5ff3021ae67688fc6f6a820f784676bf4b8e41c0c71577d","dweb:/ipfs/QmSo7DdJSzx4U5xvLPnCLNn2SFBPin8dHxYnJrrwxEYQje"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol":{"keccak256":"0x3b39e1a87bb94b9145d91007bbd2c964438e99a659b4accc6ec6df6a1c62589a","urls":["bzz-raw://c983bca009e0c413b39f851ca4728c20c42bcf5359252131d48f612ee5757a70","dweb:/ipfs/QmP1c7MV6FdzTBYTFdosLNijvGa1dKeaGXy5Ax5UV381GZ"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol":{"keccak256":"0xd7ebe0f80affaa622b9efd95cc8db3e03e70d699176f7457b4a95e34a11f9834","urls":["bzz-raw://f8cf00c5981b953e57af6f8d6dad38ff0c90c61f1f1b03042039a41797aa198b","dweb:/ipfs/QmdngJRARxdVwxqG7vHDRf2QSBxK6294Ab16G6hsMoXqew"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b","urls":["bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34","dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol":{"keccak256":"0x5a7dd74fb8a9334aa50c497a58875159aec17e905a7daaf3c276936d5b691bd1","urls":["bzz-raw://a25b8d80233016a4634b9217a0899f43f18bfb21abb046bee4403e9408296009","dweb:/ipfs/QmUA3bTzddiHnPxBqYtovxvcVvCkNrAxPJ7xcskocxEq5P"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IRewardsCoordinator.sol":{"keccak256":"0x88eb57f8d59aee48e836e5304a06c5de7e011b3deca0054d6047f756cfeea914","urls":["bzz-raw://fc105a7d72709f5c8b53e5cc5268f6bb28c538b0a816d481ff9f2841f7b61551","dweb:/ipfs/Qmf6fNnEDoUQ4Ja3Quo5jeFJMePt3JAsC7a9FnYZWPsHNk"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol":{"keccak256":"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4","urls":["bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b","dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol":{"keccak256":"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9","urls":["bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e","dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/IECDSAStakeRegistryEventsAndErrors.sol":{"keccak256":"0x87d62369932af21f32ea3c66d3238e6b65fd90a00bfb537a639189f4d8ceb7dc","urls":["bzz-raw://6951c38bc040fdb1f35e117390a1936543974e062fcc519300365a68c800c88d","dweb:/ipfs/QmVPjxkL1bLaA6EtthcoerTaMjAmJx8Lv1hchALEkNMfDH"],"license":"MIT"},"lib/eigenlayer-middleware/src/interfaces/IServiceManager.sol":{"keccak256":"0x7602cfb4397a114a0ed60e70e8e1d729fdcf406b585838181b3cb3ffa6ac9a9a","urls":["bzz-raw://b718fa016a13a2a5ce298bc5ea7495cc70cf9c358211c75595d5c9dde9a6cc0f","dweb:/ipfs/QmQNrVmU7P7pRqGBJuTQDkjf3wMDY2kJm7zXdtQwsQTbzY"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/IServiceManagerUI.sol":{"keccak256":"0x6c66bc2b0b2f5aabd2b90ca02d5b6696fc02d75a53567b16d8d81dd956fd7b1b","urls":["bzz-raw://284f9cc3f8eade3b022ab8c527aaa35bdd5e0355607abf6d5ef66fb2c9ce90cd","dweb:/ipfs/QmYi856BQNY6G2FTqAGY9qzWPp27QmiytwnfNtfwPN7Cqm"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/unaudited/ECDSAStakeRegistry.sol":{"keccak256":"0x41a94f5a3e38c0907c9b47da511db1d9a545b0175e79a302c15723118db1db07","urls":["bzz-raw://c875b9516f4dd56a74cb2808c04826769cdccb8e25e01a77227e4fdcc494500b","dweb:/ipfs/QmdyQdsCYyHPxquAY5kcVGdm5AcfX483YSvyYdLGCfWfuq"],"license":"MIT"},"lib/eigenlayer-middleware/src/unaudited/ECDSAStakeRegistryStorage.sol":{"keccak256":"0xd78e86c73c9b5b588281ac78051e97b5c32f766383575750c9245f4fec1b547c","urls":["bzz-raw://6c917f123adc35cd48a60a768abea19c7c99487c82260429571ae093235e902a","dweb:/ipfs/QmaiLzxQ1GxPk9oxcgVXPtBBviSW9dVEsmC4xZgvWLxko8"],"license":"MIT"}},"version":1},"id":99}