{"abi":[{"type":"constructor","inputs":[{"name":"_strategyManager","type":"address","internalType":"contract IStrategyManager"},{"name":"_slasher","type":"address","internalType":"contract ISlasher"},{"name":"_eigenPodManager","type":"address","internalType":"contract IEigenPodManager"}],"stateMutability":"nonpayable"},{"type":"function","name":"DELEGATION_APPROVAL_TYPEHASH","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"DOMAIN_TYPEHASH","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"MAX_STAKER_OPT_OUT_WINDOW_BLOCKS","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"MAX_WITHDRAWAL_DELAY_BLOCKS","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"STAKER_DELEGATION_TYPEHASH","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"beaconChainETHStrategy","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IStrategy"}],"stateMutability":"view"},{"type":"function","name":"calculateCurrentStakerDelegationDigestHash","inputs":[{"name":"staker","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"},{"name":"expiry","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"calculateDelegationApprovalDigestHash","inputs":[{"name":"staker","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"},{"name":"_delegationApprover","type":"address","internalType":"address"},{"name":"approverSalt","type":"bytes32","internalType":"bytes32"},{"name":"expiry","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"calculateStakerDelegationDigestHash","inputs":[{"name":"staker","type":"address","internalType":"address"},{"name":"_stakerNonce","type":"uint256","internalType":"uint256"},{"name":"operator","type":"address","internalType":"address"},{"name":"expiry","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"calculateWithdrawalRoot","inputs":[{"name":"withdrawal","type":"tuple","internalType":"struct IDelegationManager.Withdrawal","components":[{"name":"staker","type":"address","internalType":"address"},{"name":"delegatedTo","type":"address","internalType":"address"},{"name":"withdrawer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"startBlock","type":"uint32","internalType":"uint32"},{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"},{"name":"shares","type":"uint256[]","internalType":"uint256[]"}]}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"completeQueuedWithdrawal","inputs":[{"name":"withdrawal","type":"tuple","internalType":"struct IDelegationManager.Withdrawal","components":[{"name":"staker","type":"address","internalType":"address"},{"name":"delegatedTo","type":"address","internalType":"address"},{"name":"withdrawer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"startBlock","type":"uint32","internalType":"uint32"},{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"},{"name":"shares","type":"uint256[]","internalType":"uint256[]"}]},{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"middlewareTimesIndex","type":"uint256","internalType":"uint256"},{"name":"receiveAsTokens","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"completeQueuedWithdrawals","inputs":[{"name":"withdrawals","type":"tuple[]","internalType":"struct IDelegationManager.Withdrawal[]","components":[{"name":"staker","type":"address","internalType":"address"},{"name":"delegatedTo","type":"address","internalType":"address"},{"name":"withdrawer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"startBlock","type":"uint32","internalType":"uint32"},{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"},{"name":"shares","type":"uint256[]","internalType":"uint256[]"}]},{"name":"tokens","type":"address[][]","internalType":"contract IERC20[][]"},{"name":"middlewareTimesIndexes","type":"uint256[]","internalType":"uint256[]"},{"name":"receiveAsTokens","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"cumulativeWithdrawalsQueued","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"decreaseDelegatedShares","inputs":[{"name":"staker","type":"address","internalType":"address"},{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"shares","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"delegateTo","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"approverSignatureAndExpiry","type":"tuple","internalType":"struct ISignatureUtils.SignatureWithExpiry","components":[{"name":"signature","type":"bytes","internalType":"bytes"},{"name":"expiry","type":"uint256","internalType":"uint256"}]},{"name":"approverSalt","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"delegateToBySignature","inputs":[{"name":"staker","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"},{"name":"stakerSignatureAndExpiry","type":"tuple","internalType":"struct ISignatureUtils.SignatureWithExpiry","components":[{"name":"signature","type":"bytes","internalType":"bytes"},{"name":"expiry","type":"uint256","internalType":"uint256"}]},{"name":"approverSignatureAndExpiry","type":"tuple","internalType":"struct ISignatureUtils.SignatureWithExpiry","components":[{"name":"signature","type":"bytes","internalType":"bytes"},{"name":"expiry","type":"uint256","internalType":"uint256"}]},{"name":"approverSalt","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"delegatedTo","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"delegationApprover","inputs":[{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"delegationApproverSaltIsSpent","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"domainSeparator","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"eigenPodManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IEigenPodManager"}],"stateMutability":"view"},{"type":"function","name":"getDelegatableShares","inputs":[{"name":"staker","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address[]","internalType":"contract IStrategy[]"},{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getOperatorShares","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getWithdrawalDelay","inputs":[{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"increaseDelegatedShares","inputs":[{"name":"staker","type":"address","internalType":"address"},{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"shares","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"initialize","inputs":[{"name":"initialOwner","type":"address","internalType":"address"},{"name":"_pauserRegistry","type":"address","internalType":"contract IPauserRegistry"},{"name":"initialPausedStatus","type":"uint256","internalType":"uint256"},{"name":"_minWithdrawalDelayBlocks","type":"uint256","internalType":"uint256"},{"name":"_strategies","type":"address[]","internalType":"contract IStrategy[]"},{"name":"_withdrawalDelayBlocks","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isDelegated","inputs":[{"name":"staker","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isOperator","inputs":[{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"minWithdrawalDelayBlocks","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"modifyOperatorDetails","inputs":[{"name":"newOperatorDetails","type":"tuple","internalType":"struct IDelegationManager.OperatorDetails","components":[{"name":"__deprecated_earningsReceiver","type":"address","internalType":"address"},{"name":"delegationApprover","type":"address","internalType":"address"},{"name":"stakerOptOutWindowBlocks","type":"uint32","internalType":"uint32"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"operatorDetails","inputs":[{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IDelegationManager.OperatorDetails","components":[{"name":"__deprecated_earningsReceiver","type":"address","internalType":"address"},{"name":"delegationApprover","type":"address","internalType":"address"},{"name":"stakerOptOutWindowBlocks","type":"uint32","internalType":"uint32"}]}],"stateMutability":"view"},{"type":"function","name":"operatorShares","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"contract IStrategy"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"pause","inputs":[{"name":"newPausedStatus","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"pauseAll","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"paused","inputs":[{"name":"index","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"paused","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"pauserRegistry","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IPauserRegistry"}],"stateMutability":"view"},{"type":"function","name":"pendingWithdrawals","inputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"queueWithdrawals","inputs":[{"name":"queuedWithdrawalParams","type":"tuple[]","internalType":"struct IDelegationManager.QueuedWithdrawalParams[]","components":[{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"},{"name":"shares","type":"uint256[]","internalType":"uint256[]"},{"name":"withdrawer","type":"address","internalType":"address"}]}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"registerAsOperator","inputs":[{"name":"registeringOperatorDetails","type":"tuple","internalType":"struct IDelegationManager.OperatorDetails","components":[{"name":"__deprecated_earningsReceiver","type":"address","internalType":"address"},{"name":"delegationApprover","type":"address","internalType":"address"},{"name":"stakerOptOutWindowBlocks","type":"uint32","internalType":"uint32"}]},{"name":"metadataURI","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setMinWithdrawalDelayBlocks","inputs":[{"name":"newMinWithdrawalDelayBlocks","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setPauserRegistry","inputs":[{"name":"newPauserRegistry","type":"address","internalType":"contract IPauserRegistry"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setStrategyWithdrawalDelayBlocks","inputs":[{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"},{"name":"withdrawalDelayBlocks","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"slasher","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract ISlasher"}],"stateMutability":"view"},{"type":"function","name":"stakerNonce","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"stakerOptOutWindowBlocks","inputs":[{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"strategyManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IStrategyManager"}],"stateMutability":"view"},{"type":"function","name":"strategyWithdrawalDelayBlocks","inputs":[{"name":"","type":"address","internalType":"contract IStrategy"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"undelegate","inputs":[{"name":"staker","type":"address","internalType":"address"}],"outputs":[{"name":"withdrawalRoots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"unpause","inputs":[{"name":"newPausedStatus","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateOperatorMetadataURI","inputs":[{"name":"metadataURI","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"MinWithdrawalDelayBlocksSet","inputs":[{"name":"previousValue","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newValue","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OperatorDetailsModified","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"newOperatorDetails","type":"tuple","indexed":false,"internalType":"struct IDelegationManager.OperatorDetails","components":[{"name":"__deprecated_earningsReceiver","type":"address","internalType":"address"},{"name":"delegationApprover","type":"address","internalType":"address"},{"name":"stakerOptOutWindowBlocks","type":"uint32","internalType":"uint32"}]}],"anonymous":false},{"type":"event","name":"OperatorMetadataURIUpdated","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"metadataURI","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"OperatorRegistered","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"operatorDetails","type":"tuple","indexed":false,"internalType":"struct IDelegationManager.OperatorDetails","components":[{"name":"__deprecated_earningsReceiver","type":"address","internalType":"address"},{"name":"delegationApprover","type":"address","internalType":"address"},{"name":"stakerOptOutWindowBlocks","type":"uint32","internalType":"uint32"}]}],"anonymous":false},{"type":"event","name":"OperatorSharesDecreased","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"staker","type":"address","indexed":false,"internalType":"address"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"},{"name":"shares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OperatorSharesIncreased","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"staker","type":"address","indexed":false,"internalType":"address"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"},{"name":"shares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Paused","inputs":[{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"newPausedStatus","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PauserRegistrySet","inputs":[{"name":"pauserRegistry","type":"address","indexed":false,"internalType":"contract IPauserRegistry"},{"name":"newPauserRegistry","type":"address","indexed":false,"internalType":"contract IPauserRegistry"}],"anonymous":false},{"type":"event","name":"StakerDelegated","inputs":[{"name":"staker","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"StakerForceUndelegated","inputs":[{"name":"staker","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"StakerUndelegated","inputs":[{"name":"staker","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"StrategyWithdrawalDelayBlocksSet","inputs":[{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"},{"name":"previousValue","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newValue","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Unpaused","inputs":[{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"newPausedStatus","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"WithdrawalCompleted","inputs":[{"name":"withdrawalRoot","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"WithdrawalQueued","inputs":[{"name":"withdrawalRoot","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"withdrawal","type":"tuple","indexed":false,"internalType":"struct IDelegationManager.Withdrawal","components":[{"name":"staker","type":"address","internalType":"address"},{"name":"delegatedTo","type":"address","internalType":"address"},{"name":"withdrawer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"startBlock","type":"uint32","internalType":"uint32"},{"name":"strategies","type":"address[]","internalType":"contract IStrategy[]"},{"name":"shares","type":"uint256[]","internalType":"uint256[]"}]}],"anonymous":false}],"bytecode":{"object":"0x610100346101e357601f61588c38819003918201601f19168301916001600160401b038311848410176101e8578084926060946040528339810103126101e35780516001600160a01b03811681036101e3576020820151916001600160a01b03831683036101e35760400151906001600160a01b03821682036101e35760805260c05260a05260005460ff8160081c1661018e5760ff80821610610153575b4660e05260405161568d90816101ff82396080518181816118e101528181611b52015281816120d80152818161249401528181612786015281816127f80152818161299601528181612f0a015281816140a2015281816144d9015261466d015260a05181610ecf015260c05181818161184c01528181611a7e01528181611fd5015281816123e90152818161267501528181612a1901528181612f8d015281816140530152614421015260e051816143870152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a13861009e565b60405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe610120604052600436101561001357600080fd5b60003560e01c80630449ca391461365857806304a4f9791461361d5780630b9f487a146135e15780630dd8dd02146133ce5780630f589e591461304557806310d67a2f14612fbb578063132d496714612ef8578063136439dd14612dde5780631522bf0214612d805780631692836514612d3a5780631bbce09114612cf357806320606b7014612cb857806322bf40e414612a4757806328a573ae1461298457806329c77d4f1461294a578063334043961461210757806339b70e38146120c25780633cdeb5e01461207d5780633e28391d1461203f57806343377382146120045780634665bcda14611fbf5780634fc40b6114611fa1578063595c6a6714611ee7578063597b36da14611eb25780635ac86ab714611e7f5780635c975abb14611e6157806360d7faed14611656578063635bbd101461163257806365da1264146115f05780636d70f7ae146115c3578063715018a614611566578063778e55f3146115155780637f54807114611163578063886f11951461113a5780638da5cb5b1461111157806390041347146110585780639104c3191461102957806399be81c814610f38578063a178848414610efe578063b134427114610eb9578063b7f06ebe14610e88578063bb45fef214610e3b578063c448feb814610e1d578063c488375a14610de3578063c5e480db14610d3d578063c94b511114610d0a578063ca661c0414610cec578063cf80873e14610c74578063da8be8641461089a578063eea9064b14610505578063f16172b014610466578063f2fde38b146103d7578063f698da25146103b45763fabc1cbc1461026f57600080fd5b346103af5760203660031901126103af5760655460405163755b36bd60e11b81526004803592602091839182906001600160a01b03165afa80156103a3576102ca91600091610374575b506001600160a01b03163314613cef565b60665419811981160361030957806066556040519081527f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c60203392a2005b60405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c69747900000000000000006064820152608490fd5b610396915060203d60201161039c575b61038e818361386e565b810190613cd0565b386102b9565b503d610384565b6040513d6000823e3d90fd5b600080fd5b346103af5760003660031901126103af5760206103cf614384565b604051908152f35b346103af5760203660031901126103af576103f0613710565b6103f8614c9b565b6001600160a01b038116156104125761041090614f36565b005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346103af5760603660031901126103af5761048033613f6e565b1561048e57610410336148de565b60405162461bcd60e51b815260206004820152604360248201527f44656c65676174696f6e4d616e616765722e6d6f646966794f70657261746f7260448201527f44657461696c733a2063616c6c6572206d75737420626520616e206f706572616064820152623a37b960e91b608482015260a490fd5b346103af5760603660031901126103af5761051e613710565b6024356001600160401b0381116103af5761053d903690600401613a33565b336000908152609a6020526040902054604435906001600160a01b03166108245761056783613f6e565b156107aa5761057d600180606654161415613bb2565b6001600160a01b038381166000818152609960205260409020600101549093911690811515806107a0575b80610796575b61064b575b50505033600052609a6020526040600020816bffffffffffffffffffffffff60a01b825416179055337fc3ee9f2e5fda98e8066a1f745b2df9285f416fe98cf2559cd21484b3d8743304600080a361060a33614026565b919060005b8151811015610410576001906106456001600160a01b036106308386613c94565b511661063c8388613c94565b5190338761506b565b0161060f565b602081018051421161072b5782600052609c60205260406000208460005260205260ff604060002054166106c0576106b8936106b09184600052609c6020526040600020826000526020526040600020600160ff198254161790555190848833613b2d565b905191615191565b8280806105b3565b60405162461bcd60e51b815260206004820152603760248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a2061707060448201527f726f76657253616c7420616c7265616479207370656e740000000000000000006064820152608490fd5b60405162461bcd60e51b815260206004820152603760248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a2061707060448201527f726f766572207369676e617475726520657870697265640000000000000000006064820152608490fd5b50833314156105ae565b50813314156105a8565b60405162461bcd60e51b815260206004820152604660248201527f44656c65676174696f6e4d616e616765722e64656c6567617465546f3a206f7060448201527f657261746f72206973206e6f74207265676973746572656420696e2045696765606482015265372630bcb2b960d11b608482015260a490fd5b60405162461bcd60e51b815260206004820152604260248201527f44656c65676174696f6e4d616e616765722e64656c6567617465546f3a20737460448201527f616b657220697320616c7265616479206163746976656c792064656c65676174606482015261195960f21b608482015260a490fd5b346103af5760203660031901126103af576108b3613710565b6108c4600280606654161415613bb2565b6001600160a01b038082166000908152609a602052604081205490911615610bfd576108ef82613f6e565b610b92576001600160a01b0382168015610b2757808252609a60205260408220546001600160a01b0316913382148015919082610b1e575b8015610afd575b15610a925760409061093f86614026565b949093610a67575b85817ffee30966a256b71e14bc0ebfc94315e28ef4a97a7131a9e2b7a310a73af446768480a38152609a6020522080546001600160a01b03191690558051806109ba5750505050506109b66040516109a060208261386e565b6000815260003681375b60405191829182613766565b0390f35b6109c690939193613bfe565b936040926020929060005b8651811015610a5757600190610a4687516109ec898261386e565b83815287366020830137885190610a038a8361386e565b84825288366020840137848060a01b03610a1d858d613c94565b5116610a2882613c87565b52610a338487613c94565b51610a3d83613c87565b528787816143b9565b610a50828b613c94565b52016109d1565b505050505050506109b6906109aa565b85817ff0eddf07e6ea14f388b47e1e94a0f464ecbd9eed4171130e0fc0e99fb4030a8a8480a3610947565b60405162461bcd60e51b815260206004820152603d60248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a20636160448201527f6c6c65722063616e6e6f7420756e64656c6567617465207374616b65720000006064820152608490fd5b50838152609960205260408120600101546001600160a01b0316331461092e565b50833314610927565b60405162461bcd60e51b815260206004820152603c60248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a20636160448201527f6e6e6f7420756e64656c6567617465207a65726f2061646472657373000000006064820152608490fd5b60405162461bcd60e51b815260206004820152603d60248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a206f7060448201527f657261746f72732063616e6e6f7420626520756e64656c6567617465640000006064820152608490fd5b60a460405162461bcd60e51b815260206004820152604460248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a20737460448201527f616b6572206d7573742062652064656c65676174656420746f20756e64656c656064820152636761746560e01b6084820152fd5b346103af5760203660031901126103af57610c95610c90613710565b614026565b604051906040820160408352835180915260206060840194019060005b818110610ccd5784806109b688878382036020850152613abf565b82516001600160a01b0316865260209586019590920191600101610cb2565b346103af5760003660031901126103af57602060405162034bc08152f35b346103af5760803660031901126103af5760206103cf610d28613710565b610d3061373c565b6064359160243590613fa2565b346103af5760203660031901126103af57610d56613710565b600060408051610d6581613838565b828152826020820152015260018060a01b031660005260996020526060604060002063ffffffff604051610d9881613838565b6001808060a01b0384541693848352015490826040602083019260018060a01b0385168452019260a01c16825260405193845260018060a01b03905116602084015251166040820152f35b346103af5760203660031901126103af576001600160a01b03610e04613710565b1660005260a16020526020604060002054604051908152f35b346103af5760003660031901126103af576020609d54604051908152f35b346103af5760403660031901126103af576001600160a01b03610e5c613710565b16600052609c6020526040600020602435600052602052602060ff604060002054166040519015158152f35b346103af5760203660031901126103af57600435600052609e602052602060ff604060002054166040519015158152f35b346103af5760003660031901126103af576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346103af5760203660031901126103af576001600160a01b03610f1f613710565b16600052609f6020526020604060002054604051908152f35b346103af5760203660031901126103af576004356001600160401b0381116103af57610f689036906004016137a0565b610f7133613f6e565b15610fae57610fa97f02a919ed0e2acad1dd90f17ef2fa4ae5462ee1339170034a8531cca4b670809091604051918291339583613ca8565b0390a2005b60405162461bcd60e51b815260206004820152604760248201527f44656c65676174696f6e4d616e616765722e7570646174654f70657261746f7260448201527f4d657461646174615552493a2063616c6c6572206d75737420626520616e206f6064820152663832b930ba37b960c91b608482015260a490fd5b346103af5760003660031901126103af57602060405173beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac08152f35b346103af5760403660031901126103af57611071613710565b6024356001600160401b0381116103af5761109090369060040161390b565b9061109b8251613bfe565b916001600160a01b039091169060005b81518110156110fb57600190836000526098602052604080600020838060a01b036110d68487613c94565b511690600091858060a01b0316825260205220546110f48287613c94565b52016110ab565b604051602080825281906109b690820187613abf565b346103af5760003660031901126103af576033546040516001600160a01b039091168152602090f35b346103af5760003660031901126103af576065546040516001600160a01b039091168152602090f35b346103af5760a03660031901126103af5761117c613710565b611184613726565b6044356001600160401b0381116103af576111a3903690600401613a33565b6064356001600160401b0381116103af576111c2903690600401613a33565b9060843560208201805142116114a0576001600160a01b038087166000908152609a60205260409020541661141f576111fa85613f6e565b1561139a576112449060018060a01b0387169384600052609b602052600161122b604060002054935189858c613fa2565b9286600052609b60205201604060002055519087615191565b611255600180606654161415613bb2565b6001600160a01b03848116600081815260996020526040902060010154909491169081151580611390575b80611386575b611319575b5050506000818152609a6020526040812080546001600160a01b031916841790557fc3ee9f2e5fda98e8066a1f745b2df9285f416fe98cf2559cd21484b3d87433049080a36112d982614026565b9160005b8251811015610410576001906113136001600160a01b036112fe8387613c94565b511661130a8388613c94565b5190888661506b565b016112dd565b602081014281511061072b5782600052609c60205260406000208460005260205260ff604060002054166106c05761137e936106b09184600052609c6020526040600020826000526020526040600020600160ff19825416179055519084898b613b2d565b84808061128b565b5084331415611286565b5081331415611280565b60405162461bcd60e51b815260206004820152605160248201527f44656c65676174696f6e4d616e616765722e64656c6567617465546f4279536960448201527f676e61747572653a206f70657261746f72206973206e6f7420726567697374656064820152703932b21034b71022b4b3b2b72630bcb2b960791b608482015260a490fd5b60405162461bcd60e51b815260206004820152604d60248201527f44656c65676174696f6e4d616e616765722e64656c6567617465546f4279536960448201527f676e61747572653a207374616b657220697320616c726561647920616374697660648201526c195b1e4819195b1959d85d1959609a1b608482015260a490fd5b60405162461bcd60e51b815260206004820152604160248201527f44656c65676174696f6e4d616e616765722e64656c6567617465546f4279536960448201527f676e61747572653a207374616b6572207369676e6174757265206578706972656064820152601960fa1b608482015260a490fd5b346103af5760403660031901126103af5761152e613710565b611536613726565b6001600160a01b039182166000908152609860209081526040808320949093168252928352819020549051908152f35b346103af5760003660031901126103af5761157f614c9b565b603380546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346103af5760203660031901126103af5760206115e66115e1613710565b613f6e565b6040519015158152f35b346103af5760203660031901126103af576001600160a01b03611611613710565b16600052609a602052602060018060a01b0360406000205416604051908152f35b346103af5760203660031901126103af5761164b614c9b565b610410600435614f7f565b346103af5760803660031901126103af576004356001600160401b0381116103af57806004019060e060031982360301126103af576024356001600160401b0381116103af576116aa9036906004016136e0565b9190926064359283151584036103af576116cb600480606654161415613bb2565b6116da600260c9541415613e35565b600260c9556116f16116ec3684613975565b613f51565b80600052609e60205260ff6040600020541615611dfc576084840194611728611719876148cd565b63ffffffff609d549116614003565b4310611d7d576001600160a01b0361174260448701613b19565b163303611d0b5780611c92575b6000828152609e60205260409020805460ff19169055156119a9579360a484019360c4019060005b6117818686613c52565b905081101561196e5787906117e4611798846148cd565b826117bd6117b86117a98c8c613c52565b6001600160a01b039491613af3565b613b19565b1660005260a16020526117dd439163ffffffff6040600020549116614003565b11156150f4565b86866118236117b8848961181c826118108c6118166117b8846118106118098d613b19565b9d8d613c52565b90613af3565b98613c52565b3597613af3565b906001600160a01b031673beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac081036118da5750507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692833b156103af5760405162387b1360e81b81526001600160a01b0390921660048301523360248301526044820152916000908390606490829084905af19182156103a3576001926118c9575b505b01611777565b60006118d49161386e565b896118c1565b90939091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156103af5760009283608492604051978895869463c608c7f360e01b86523360048701526024860152604485015260018060a01b031660648401525af19182156103a35760019261195d575b506118c3565b60006119689161386e565b89611957565b5050505050507fc97098c2f658800b4df29001527f7324bcdffcf6e8751a699ab920a1eced5b1d91506020905b604051908152a1600160c955005b9392919033600052609a60205260018060a01b03604060002054169060009460a48501955b6119d88786613c52565b9050811015611c60576119fe6119ed836148cd565b826117bd6117b86117a98c8b613c52565b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac081611a246117b86117a98b8a613c52565b1603611b5057611a78611a3686613b19565b6020611a498461181060c48c018b613c52565b6040516303a041cf60e21b81526001600160a01b03841660048201529035602482015292839081906044820190565b038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19182156103a357600092611b19575b506001600160a01b038082166000908152609a602052604090205460019493849390929190911690898c83611af4575b5050505050505b016119ce565b611b0e956118106117b892611b0894613c52565b9161506b565b808b8080898c611ae7565b90916020823d8211611b48575b81611b336020938361386e565b81010312611b45575051906001611ab7565b80fd5b3d9150611b26565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690611b896117b882868d613af3565b611b9a6117b8836118108c8b613c52565b9060c4890191611bae84611810858c613c52565b3594803b156103af5760405163c4623ea160e01b81523360048201526001600160a01b03938416602482015291909216604482015260648101949094526000908490608490829084905af19081156103a3576001938892611c4f575b50898388611c1c575b50505050611aee565b611810611c366117b883611810611c3d96611c4699613c52565b938b613c52565b3590338861506b565b858b8983611c13565b6000611c5a9161386e565b8c611c0a565b505050505050507fc97098c2f658800b4df29001527f7324bcdffcf6e8751a699ab920a1eced5b1d915060209061199b565b611c9f60a4860185613c52565b8414905061174f5760405162461bcd60e51b8152602060048201526042602482015260008051602061563883398151915260448201527f645769746864726177616c3a20696e707574206c656e677468206d69736d61746064820152610c6d60f31b608482015260a490fd5b60405162461bcd60e51b8152602060048201526050602482015260008051602061563883398151915260448201527f645769746864726177616c3a206f6e6c7920776974686472617765722063616e60648201526f1031b7b6b83632ba329030b1ba34b7b760811b608482015260a490fd5b60405162461bcd60e51b815260206004820152605f602482015260008051602061563883398151915260448201527f645769746864726177616c3a206d696e5769746864726177616c44656c61794260648201527f6c6f636b7320706572696f6420686173206e6f74207965742070617373656400608482015260a490fd5b60405162461bcd60e51b8152602060048201526043602482015260008051602061563883398151915260448201527f645769746864726177616c3a20616374696f6e206973206e6f7420696e20717560648201526265756560e81b608482015260a490fd5b346103af5760003660031901126103af576020606654604051908152f35b346103af5760203660031901126103af5760043560ff81168091036103af5760016020911b806066541614604051908152f35b346103af5760203660031901126103af576004356001600160401b0381116103af576103cf6116ec6020923690600401613975565b346103af5760003660031901126103af5760655460405163237dfb4760e11b815233600482015290602090829060249082906001600160a01b03165afa80156103a357611f3c91600091611f72575b50613dd8565b60001960665560405160001981527fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d60203392a2005b611f94915060203d602011611f9a575b611f8c818361386e565b810190613dc0565b82611f36565b503d611f82565b346103af5760003660031901126103af5760206040516213c6808152f35b346103af5760003660031901126103af576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346103af5760003660031901126103af5760206040517f39111bc4a4d688e1f685123d7497d4615370152a8ee4a0593e647bd06ad8bb0b8152f35b346103af5760203660031901126103af5760206115e661205d613710565b6001600160a01b039081166000908152609a602052604090205416151590565b346103af5760203660031901126103af576001600160a01b0361209e613710565b166000526099602052602060018060a01b0360016040600020015416604051908152f35b346103af5760003660031901126103af576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346103af5760803660031901126103af576004356001600160401b0381116103af576121379036906004016136e0565b9060c0526024356001600160401b0381116103af5761215a9036906004016136e0565b91906044356001600160401b0381116103af5761217b9036906004016136e0565b9390916064356001600160401b0381116103af5792856121a186939536906004016136e0565b9390926121b5600480606654161415613bb2565b6121c4600260c9541415613e35565b600260c9556000955b828710156101005261010051612943576000610100528660051b8060c051013560a05260de1960c05136030160a051121561248857818810156129295761221690890189613c52565b989096612224898786613af3565b50612230898289613af3565b3580151581036124885761224d6116ec3660a05160c05101613975565b60e05260e0516101005152609e60205260ff60406101005120541615611dfc5761227f608060a05160c05101016148cd565b612293439163ffffffff609d549116614003565b11611d7d5760a05160c0516001600160a01b03916122b49101604001613b19565b163303611d0b57806128a5575b60e0516101005152609e6020526040610100512060ff19815416905560001461257357610100515b61230160a0805160c051010160a05160c05101613c52565b905081101561252a5761236261231f608060a05160c05101016148cd565b8261233e6117b86117a960a0805160c051010160a05160c05101613c52565b16610100515260a16020526117dd439163ffffffff60406101005120549116614003565b61237160a05160c05101613b19565b90898c6123be6117b88461239a6117b88261181060a0805160c051010160a05160c05101613c52565b936123b78261181060c060a0518151010160a05160c05101613c52565b3595613af3565b6001600160a01b039091169073beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0820361248f5750507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156124885760405162387b1360e81b81526001600160a01b039094166004850152336024850152604484015261010051908390606490829084905af191821561247a57600192612467575b505b016122e9565b610100516124749161386e565b8c61245f565b6040513d61010051823e3d90fd5b6101005180fd5b9093507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b156124885760405163c608c7f360e01b8152336004820152602481019590955260448501526001600160a01b0316606484015261010051908390608490829084905af191821561247a57600192612517575b50612461565b610100516125249161386e565b8c612511565b50939790949850600191959296505b7fc97098c2f658800b4df29001527f7324bcdffcf6e8751a699ab920a1eced5b1d602060405160e0518152a10195919490939692966121cd565b6101008051339052609a6020525160408120546001600160a01b03166080529899985b6125ae60a0805160c051010160a05160c05101613c52565b9050811015612893576125cc61231f608060a05160c05101016148cd565b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0816126006117b86117a960a0805160c051010160a05160c05101613c52565b1603612738576126669061261960a05160c05101613b19565b60206126378361181060c060a0518151010160a05160c05101613c52565b6040516303a041cf60e21b81526001600160a01b03841660048201529035602482015293849081906044820190565b03816101005160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1801561247a576101005190612706575b61010080516001600160a01b03848116909152609a602052905160409020546001955016806126db575b5050505b01612596565b6126fe92611b086117b88661181060a0805160c051010160a05160c05101613c52565b8c80806126d1565b506020833d8211612730575b8161271f6020938361386e565b8101031261248857600192516126a7565b3d9150612712565b6127466117b8828c8c613af3565b906127666117b88261181060a0805160c051010160a05160c05101613c52565b6127828261181060c060a0518151010160a05160c05101613c52565b35907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b156124885760405163c4623ea160e01b81523360048201526001600160a01b039485166024820152908416604482015260648101919091526101005190928390608490829084907f0000000000000000000000000000000000000000000000000000000000000000165af191821561247a57600192612880575b50608051156126d55761287b6128546117b88361181060a0805160c051010160a05160c05101613c52565b6128708361181060c060a0518151010160a05160c05101613c52565b35903360805161506b565b6126d5565b6101005161288d9161386e565b8c612829565b50939750939760019195929650612539565b6128bd60a0805160c051010160a05160c05101613c52565b8c1490506122c15760405162461bcd60e51b8152602060048201526042602482015260008051602061563883398151915260448201527f645769746864726177616c3a20696e707574206c656e677468206d69736d61746064820152610c6d60f31b608482015260a490fd5b634e487b7160e01b61010051526032600452602461010051fd5b600160c955005b346103af5760203660031901126103af576001600160a01b0361296b613710565b16600052609b6020526020604060002054604051908152f35b346103af57612992366137cd565b90337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316148015612a15575b6129cf90613d4e565b6001600160a01b038084166000908152609a6020526040902054166129f057005b6001600160a01b038084166000908152609a602052604090205461041094911661506b565b50337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316146129c6565b346103af5760c03660031901126103af57612a60613710565b612a68613726565b604435906084356001600160401b0381116103af57612a8b9036906004016136e0565b60a4929192356001600160401b0381116103af57612aad9036906004016136e0565b9390926000549660ff8860081c161597888099612cab575b8015612c94575b15612c385760ff19811660011760005588612c26575b506065546001600160a01b03161580612c14575b15612b9957612b3b612b4b9288612b5b996066556040519081527fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d60203392a2614b39565b612b43614ec6565b609755614f36565b612b56606435614f7f565b614cf3565b612b6157005b61ff0019600054166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b60405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a490fd5b506001600160a01b0382161515612af6565b61ffff19166101011760005588612ae2565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015612acc5750600160ff821614612acc565b50600160ff821610612ac5565b346103af5760003660031901126103af5760206040517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8668152f35b346103af5760603660031901126103af5760206103cf612d11613710565b612d19613726565b6001600160a01b0382166000908152609b8552604090205460443592613fa2565b346103af5760203660031901126103af576001600160a01b03612d5b613710565b166000526099602052602063ffffffff60016040600020015460a01c16604051908152f35b346103af5760403660031901126103af576004356001600160401b0381116103af57612db09036906004016136e0565b602435916001600160401b0383116103af57612dd36104109336906004016136e0565b929091612b56614c9b565b346103af5760203660031901126103af576004356024602060018060a01b03606554166040519283809263237dfb4760e11b82523360048301525afa80156103a357612e3191600091612ed95750613dd8565b60665481811603612e6e57806066556040519081527fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d60203392a2005b60405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c69747900000000000000006064820152608490fd5b612ef2915060203d602011611f9a57611f8c818361386e565b83611f36565b346103af57612f06366137cd565b90337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316148015612f89575b612f4390613d4e565b6001600160a01b038084166000908152609a602052604090205416612f6457005b6001600160a01b038084166000908152609a6020526040902054610410949116614c13565b50337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614612f3a565b346103af5760203660031901126103af576004612fd6613710565b60655460405163755b36bd60e11b81529260209184919082906001600160a01b03165afa9182156103a357610410926130219160009161302657506001600160a01b03163314613cef565b614b39565b61303f915060203d60201161039c5761038e818361386e565b846102b9565b346103af573660031901608081126103af576060136103af576064356001600160401b0381116103af5761307d9036906004016137a0565b336000908152609a60205260409020546001600160a01b0316613350576130a3336148de565b6040516130af81613807565b606081526020810190600082526130cd600180606654161415613bb2565b336000908152609960205260409020600101546001600160a01b03169081151580613346575b8061333e575b613238575b5050336000818152609a6020526040812080546001600160a01b0319168317905590915081907fc3ee9f2e5fda98e8066a1f745b2df9285f416fe98cf2559cd21484b3d87433049080a361315133614026565b9260005b82518110156131915760019061318b6001600160a01b036131768387613c94565b51166131828389613c94565b5190333361506b565b01613155565b50604051836004356001600160a01b038116908190036103af5782526024356001600160a01b038116908190036103af5760208301526044359063ffffffff82168092036103af5782610fa99260407f02a919ed0e2acad1dd90f17ef2fa4ae5462ee1339170034a8531cca4b67080909501527f8e8485583a2310d41f7c82b9427d0bd49bad74bb9cff9d3402a29d8f9b28a0e260603392a2604051918291339583613ca8565b8251421161072b5781600052609c60205260406000206000805260205260ff604060002054166106c0576133369282600052609c6020526040600020600080526020526040600020600160ff198254161790555160405160208101917f14bde674c9f64b2ad00eaaee4a8bed1fabef35c7507e3c5b9cfc9436909a2dad8352846040830152336060830152336080830152600060a083015260c082015260c081526132e460e08261386e565b51902061331d61332b6132f5614384565b92604051928391602083019586909160429261190160f01b8352600283015260228201520190565b03601f19810183528261386e565b519020905191615191565b8280806130fe565b5060006130f9565b50813314156130f3565b60405162461bcd60e51b815260206004820152604a60248201527f44656c65676174696f6e4d616e616765722e726567697374657241734f70657260448201527f61746f723a2063616c6c657220697320616c7265616479206163746976656c796064820152690819195b1959d85d195960b21b608482015260a490fd5b346103af5760203660031901126103af576004356001600160401b0381116103af576133fe9036906004016136e0565b90613410600280606654161415613bb2565b61341982613bfe565b9033600052609a60205260018060a01b036040600020541660005b84811061344957604051806109b68682613766565b61345d613457828786613c30565b80613c52565b905061347761346d838887613c30565b6020810190613c52565b9190500361357657336001600160a01b0361349e6040613498858a89613c30565b01613b19565b160361350b576001906134fa84876134f2846134ea6134e061346d6134d761345785886134d1604061349884848f613c30565b9a613c30565b9490968d613c30565b94909236916138b7565b923691613929565b9186336143b9565b6135048287613c94565b5201613434565b60405162461bcd60e51b815260206004820152603c60248201527f44656c65676174696f6e4d616e616765722e717565756557697468647261776160448201527f6c3a2077697468647261776572206d757374206265207374616b6572000000006064820152608490fd5b60405162461bcd60e51b815260206004820152603860248201527f44656c65676174696f6e4d616e616765722e717565756557697468647261776160448201527f6c3a20696e707574206c656e677468206d69736d6174636800000000000000006064820152608490fd5b346103af5760a03660031901126103af5760206103cf6135ff613710565b613607613726565b9061361061373c565b6084359260643592613b2d565b346103af5760003660031901126103af5760206040517f14bde674c9f64b2ad00eaaee4a8bed1fabef35c7507e3c5b9cfc9436909a2dad8152f35b346103af5760203660031901126103af576004356001600160401b0381116103af576136889036906004016136e0565b609d549160005b8281106136a157602084604051908152f35b6001600160a01b036136b76117b8838686613af3565b1660005260a16020526040600020548481116136d7575b5060010161368f565b935060016136ce565b9181601f840112156103af578235916001600160401b0383116103af576020808501948460051b0101116103af57565b600435906001600160a01b03821682036103af57565b602435906001600160a01b03821682036103af57565b604435906001600160a01b03821682036103af57565b35906001600160a01b03821682036103af57565b602060408183019282815284518094520192019060005b81811061378a5750505090565b825184526020938401939092019160010161377d565b9181601f840112156103af578235916001600160401b0383116103af57602083818601950101116103af57565b60609060031901126103af576004356001600160a01b03811681036103af57906024356001600160a01b03811681036103af579060443590565b604081019081106001600160401b0382111761382257604052565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111761382257604052565b60e081019081106001600160401b0382111761382257604052565b90601f801991011681019081106001600160401b0382111761382257604052565b359063ffffffff821682036103af57565b6001600160401b0381116138225760051b60200190565b9291906138c3816138a0565b936138d1604051958661386e565b602085838152019160051b81019283116103af57905b8282106138f357505050565b6020809161390084613752565b8152019101906138e7565b9080601f830112156103af57816020613926933591016138b7565b90565b929190613935816138a0565b93613943604051958661386e565b602085838152019160051b81019283116103af57905b82821061396557505050565b8135815260209182019101613959565b919060e0838203126103af576040519061398e82613853565b819361399981613752565b83526139a760208201613752565b60208401526139b860408201613752565b6040840152606081013560608401526139d36080820161388f565b608084015260a08101356001600160401b0381116103af57826139f791830161390b565b60a084015260c0810135906001600160401b0382116103af570181601f820112156103af5760c091816020613a2e93359101613929565b910152565b91906040838203126103af5760405190613a4c82613807565b819380356001600160401b0381116103af5781019082601f830112156103af578135926001600160401b0384116138225760405190613a95601f8601601f19166020018361386e565b848252602085850101116103af576000602085819682809701838601378301015284520135910152565b906020808351928381520192019060005b818110613add5750505090565b8251845260209384019390920191600101613ad0565b9190811015613b035760051b0190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b03811681036103af5790565b604080517f14bde674c9f64b2ad00eaaee4a8bed1fabef35c7507e3c5b9cfc9436909a2dad602082019081526001600160a01b0395861692820192909252918416606083015292909116608082015260a081019290925260c080830193909352918152613b9b60e08261386e565b51902061331d613bac6132f5614384565b51902090565b15613bb957565b60405162461bcd60e51b815260206004820152601960248201527f5061757361626c653a20696e64657820697320706175736564000000000000006044820152606490fd5b90613c08826138a0565b613c15604051918261386e565b8281528092613c26601f19916138a0565b0190602036910137565b9190811015613b035760051b81013590605e19813603018212156103af570190565b903590601e19813603018212156103af57018035906001600160401b0382116103af57602001918160051b360383136103af57565b805115613b035760200190565b8051821015613b035760209160051b010190565b90918060409360208452816020850152848401376000828201840152601f01601f1916010190565b908160209103126103af57516001600160a01b03811681036103af5790565b15613cf657565b60405162461bcd60e51b815260206004820152602a60248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526939903ab73830bab9b2b960b11b6064820152608490fd5b15613d5557565b60405162461bcd60e51b815260206004820152603760248201527f44656c65676174696f6e4d616e616765723a206f6e6c7953747261746567794d60448201527f616e616765724f72456967656e506f644d616e616765720000000000000000006064820152608490fd5b908160209103126103af575180151581036103af5790565b15613ddf57565b60405162461bcd60e51b815260206004820152602860248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526739903830bab9b2b960c11b6064820152608490fd5b15613e3c57565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b80516001600160a01b039081168352602080830151821681850152604080840151909216918401919091526060808301519084015260808083015163ffffffff169084015260a08083015160e0918501829052805191850182905261010085019392019060005b818110613f325750505060c001519160c08183039101526020808351928381520192019060005b818110613f1c5750505090565b8251845260209384019390920191600101613f0f565b82516001600160a01b0316855260209485019490920191600101613ee8565b604051613bac8161331d6020820194602086526040830190613e81565b6001600160a01b03168015159081613f84575090565b6000818152609a60205260409020546001600160a01b031614919050565b92906040519260208401947f39111bc4a4d688e1f685123d7497d4615370152a8ee4a0593e647bd06ad8bb0b865260018060a01b0316604085015260018060a01b03166060840152608083015260a082015260a08152613b9b60c08261386e565b9190820180921161401057565b634e487b7160e01b600052601160045260246000fd5b6040516360f4062b60e01b81526001600160a01b03918216600482018190529091602090839060249082907f0000000000000000000000000000000000000000000000000000000000000000165afa9182156103a357600092614350575b506040516394f649dd60e01b815260048101919091526000816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156103a357600090819261422b575b50600083131561422557805160008161415a5750505050906040805192614104828561386e565b60018452614155601f198301928336602088013785936141268251928361386e565b6001825236602083013773beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac061414f8297613c87565b52613c87565b529190565b60018201809211614211575061416f90613bfe565b9061417a8251613bfe565b9460005b82518110156141c5576001906001600160a01b0361419c8286613c94565b51166141a88287613c94565b526141b38187613c94565b516141be828a613c94565b520161417e565b50939192505081516000198101908111614010576141f873beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac09184613c94565b5281516000198101908111614010576141559085613c94565b634e487b7160e01b81526011600452602490fd5b92909150565b9091503d8083833e61423d818361386e565b810160408282031261434c5781516001600160401b03811161431c5782019181601f8401121561431c578251614272816138a0565b93614280604051958661386e565b81855260208086019260051b8201019084821161434857602001915b818310614324575050506020810151906001600160401b038211614320570181601f8201121561431c578051906142d2826138a0565b946142e0604051968761386e565b82865260208087019360051b830101938411611b455750602001905b82821061430c57505050386140dd565b81518152602091820191016142fc565b8380fd5b8480fd5b82516001600160a01b03811681036143445781526020928301920161429c565b8780fd5b8680fd5b8280fd5b90916020823d60201161437c575b8161436b6020938361386e565b81010312611b455750519038614084565b3d915061435e565b467f0000000000000000000000000000000000000000000000000000000000000000036143b15760975490565b613926614ec6565b93949392916001600160a01b038416918215614849578351156147c85760005b84518110156146fa576001600160a01b0382166146cb575b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac06001600160a01b036144188388613c94565b5116036144b7577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690614454818a613c94565b5191803b156103af5760405163beffbb8960e01b81526001600160a01b038916600482015260248101939093526000908390604490829084905af19182156103a3576001926144a6575b505b016143d9565b60006144b19161386e565b3861449e565b6001600160a01b0383168414801561463d575b1561457a576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691906145068288613c94565b5116614512828b613c94565b51833b156103af57604051638c80d4e560e01b81526001600160a01b038a811660048301529290921660248301526044820152916000908390606490829084905af19182156103a357600192614569575b506144a0565b60006145749161386e565b38614563565b60e460405162461bcd60e51b815260206004820152608460248201527f44656c65676174696f6e4d616e616765722e5f72656d6f76655368617265734160448201527f6e6451756575655769746864726177616c3a2077697468647261776572206d7560648201527f73742062652073616d652061646472657373206173207374616b65722069662060848201527f746869726450617274795472616e7366657273466f7262696464656e2061726560a482015263081cd95d60e21b60c4820152fd5b506001600160a01b036146508287613c94565b51604051639b4da03d60e01b8152911660048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156103a3576000916146ad575b50156144ca565b6146c5915060203d8111611f9a57611f8c818361386e565b386146a6565b6146f56001600160a01b036146e08388613c94565b51166146ec838b613c94565b51908885614c13565b6143f1565b506000838152609f602052604090208054969793969395508360001981146140105760010190556040519561472e87613853565b86526001600160a01b03908116602087015216604085015260608401524363ffffffff16608084015260a083015260c08201527f9009ab153e8014fbfb02f2217f5cde7aa7f9ad734ae85ca3ee3f4ca2fdd499f96147c261478e83613f51565b9283600052609e6020526040600020600160ff19825416179055604051918291858352604060208401526040830190613e81565b0390a190565b60405162461bcd60e51b815260206004820152604d60248201527f44656c65676174696f6e4d616e616765722e5f72656d6f76655368617265734160448201527f6e6451756575655769746864726177616c3a207374726174656769657320636160648201526c6e6e6f7420626520656d70747960981b608482015260a490fd5b60405162461bcd60e51b815260206004820152605060248201527f44656c65676174696f6e4d616e616765722e5f72656d6f76655368617265734160448201527f6e6451756575655769746864726177616c3a207374616b65722063616e6e6f7460648201526f206265207a65726f206164647265737360801b608482015260a490fd5b3563ffffffff811681036103af5790565b6044359063ffffffff8216908183036103af576213c6808211614a935760018060a01b03169081600052609960205263ffffffff60016040600020015460a01c1611614a0c576000908152609960205260409020600435906001600160a01b03821682036103af5780546001600160a01b0319166001600160a01b03928316178155600101919060243590811681036103af5782546001600160c01b0319166001600160a01b039182161760a09290921b63ffffffff60a01b169190911790915560405160608101917ffebe5cd24b2cbc7b065b9d0fdeb904461e4afcff57dd57acda1e7832031ba7ac91906149d46004613752565b1681526001600160a01b036149e96024613752565b16602082015263ffffffff6149fe604461388f565b1660408201528033930390a2565b60405162461bcd60e51b815260206004820152605360248201527f44656c65676174696f6e4d616e616765722e5f7365744f70657261746f72446560448201527f7461696c733a207374616b65724f70744f757457696e646f77426c6f636b732060648201527218d85b9b9bdd08189948191958dc99585cd959606a1b608482015260a490fd5b60405162461bcd60e51b815260206004820152606c60248201527f44656c65676174696f6e4d616e616765722e5f7365744f70657261746f72446560448201527f7461696c733a207374616b65724f70744f757457696e646f77426c6f636b732060648201527f63616e6e6f74206265203e204d41585f5354414b45525f4f50545f4f55545f5760848201526b494e444f575f424c4f434b5360a01b60a482015260c490fd5b6001600160a01b03168015614b9657606554604080516001600160a01b0383168152602081018490527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb69190a16001600160a01b03191617606555565b60405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a490fd5b6001600160a01b03908116600081815260986020908152604080832094871683529390529190912080549194808303949392851161401057939055604080516001600160a01b0392831681529290911660208301528101919091527f6909600037b75d7b4733aedd815442b5ec018a827751c832aaff64eba5d6d2dd9080606081015b0390a2565b6033546001600160a01b03163303614caf57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b919091838303614e485760005b838110614d0e575050505050565b6001600160a01b03614d246117b8838786613af3565b16908160005260a1602052604060002054614d40828887613af3565b359062034bc08211614d9b57837f0e7efa738e8b0ce6376a0c1af471655540d2e9a81647d7b09ed823018426576d9260609260019660005260a16020528160406000205560405192835260208301526040820152a101614d00565b60405162461bcd60e51b815260206004820152607360248201527f44656c65676174696f6e4d616e616765722e5f7365745374726174656779576960448201527f746864726177616c44656c6179426c6f636b733a205f7769746864726177616c60648201527f44656c6179426c6f636b732063616e6e6f74206265203e204d41585f5749544860848201527244524157414c5f44454c41595f424c4f434b5360681b60a482015260c490fd5b60405162461bcd60e51b815260206004820152604a60248201527f44656c65676174696f6e4d616e616765722e5f7365745374726174656779576960448201527f746864726177616c44656c6179426c6f636b733a20696e707574206c656e67746064820152690d040dad2e6dac2e8c6d60b31b608482015260a490fd5b6040600a60208251614ed8848261386e565b828152016922b4b3b2b72630bcb2b960b11b81522081519060208201927f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866845282015246606082015230608082015260808152613bac60a08261386e565b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b62034bc08111614fc0577fafa003cd76f87ff9d62b35beea889920f33c0c42b8d45b74954d61d50f4b6b696040609d548151908152836020820152a1609d55565b60405162461bcd60e51b815260206004820152607160248201527f44656c65676174696f6e4d616e616765722e5f7365744d696e5769746864726160448201527f77616c44656c6179426c6f636b733a205f6d696e5769746864726177616c446560648201527f6c6179426c6f636b732063616e6e6f74206265203e204d41585f5749544844526084820152704157414c5f44454c41595f424c4f434b5360781b60a482015260c490fd5b90614c967f1ec042c965e2edd7107b51188ee0f383e22e76179041ab3a9d18ff151405166c939260018060a01b031694856000526098602052604060002060018060a01b03851660005260205260406000206150c8828254614003565b9055604080516001600160a01b0394851681529490931660208501529183019190915281906060820190565b156150fb57565b60405162461bcd60e51b815260206004820152606e602482015260008051602061563883398151915260448201527f645769746864726177616c3a207769746864726177616c44656c6179426c6f6360648201527f6b7320706572696f6420686173206e6f74207965742070617373656420666f7260848201526d207468697320737472617465677960901b60a482015260c490fd5b9091813b156153015760408051630b135d3f60e11b815260048101949094526024840152805160448401819052839160005b8281106152e957505091816064818560008360209884010152601f8019910116810103019160018060a01b03165afa9081156103a3576000916152a2575b506001600160e01b0319166374eca2c160e11b0161521b57565b60405162461bcd60e51b815260206004820152605360248201527f454950313237315369676e61747572655574696c732e636865636b5369676e6160448201527f747572655f454950313237313a2045524331323731207369676e6174757265206064820152721d995c9a599a58d85d1a5bdb8819985a5b1959606a1b608482015260a490fd5b6020813d6020116152e1575b816152bb6020938361386e565b810103126152dd5751906001600160e01b031982168203611b45575038615201565b5080fd5b3d91506152ae565b602082820181015160648884010152869450016151c3565b61530e90615316936153a5565b929092615415565b6001600160a01b0390811691160361532a57565b60405162461bcd60e51b815260206004820152604760248201527f454950313237315369676e61747572655574696c732e636865636b5369676e6160448201527f747572655f454950313237313a207369676e6174757265206e6f742066726f6d6064820152661039b4b3b732b960c91b608482015260a490fd5b8151604181036153d25750906153ce916020820151906060604084015193015160001a9061558f565b9091565b60400361540b5760406020830151920151918260ff1c91601b8301809311614010576153ce936001600160ff1b03169260ff169061558f565b5050600090600290565b600581101561557957806154265750565b6000600182036154755760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b50600281036154c35760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b6000906003810361551e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b600491501461552957565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161562b5760ff1690601b82141580615620575b61561457602093600093608093604051938452868401526040830152606082015282805260015afa156103a3576000516001600160a01b0381161561560b5790600090565b50600090600190565b50505050600090600490565b50601c8214156155c6565b5050505060009060039056fe44656c65676174696f6e4d616e616765722e5f636f6d706c6574655175657565a26469706673582212200a038fb896550a25722d6b4c44e80efedbeb7ab9b7a67801c1c6d6bfc45342a964736f6c634300081a0033","sourceMap":"1137:46236:37:-:0;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;5656:34:38;;5700;;5744:18;;-1:-1:-1;1137:46236:37;;;;;;;;;;;;5527:30:2;5523:138;;-1:-1:-1;3009:13:37;2989:33;;1137:46236;;;;;;;;5656:34:38;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5744:18:38;1137:46236:37;;;;;5700:34:38;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2989:33;1137:46236;;;;;;5523:138:2;1137:46236:37;;;;;;-1:-1:-1;1137:46236:37;5622:28:2;1137:46236:37;;;;;;5622:28:2;5523:138;;;1137:46236:37;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;-1:-1:-1;1137:46236:37;;;;;;-1:-1:-1;1137:46236:37;;;;;-1:-1:-1;1137:46236:37","linkReferences":{}},"deployedBytecode":{"object":"0x610120604052600436101561001357600080fd5b60003560e01c80630449ca391461365857806304a4f9791461361d5780630b9f487a146135e15780630dd8dd02146133ce5780630f589e591461304557806310d67a2f14612fbb578063132d496714612ef8578063136439dd14612dde5780631522bf0214612d805780631692836514612d3a5780631bbce09114612cf357806320606b7014612cb857806322bf40e414612a4757806328a573ae1461298457806329c77d4f1461294a578063334043961461210757806339b70e38146120c25780633cdeb5e01461207d5780633e28391d1461203f57806343377382146120045780634665bcda14611fbf5780634fc40b6114611fa1578063595c6a6714611ee7578063597b36da14611eb25780635ac86ab714611e7f5780635c975abb14611e6157806360d7faed14611656578063635bbd101461163257806365da1264146115f05780636d70f7ae146115c3578063715018a614611566578063778e55f3146115155780637f54807114611163578063886f11951461113a5780638da5cb5b1461111157806390041347146110585780639104c3191461102957806399be81c814610f38578063a178848414610efe578063b134427114610eb9578063b7f06ebe14610e88578063bb45fef214610e3b578063c448feb814610e1d578063c488375a14610de3578063c5e480db14610d3d578063c94b511114610d0a578063ca661c0414610cec578063cf80873e14610c74578063da8be8641461089a578063eea9064b14610505578063f16172b014610466578063f2fde38b146103d7578063f698da25146103b45763fabc1cbc1461026f57600080fd5b346103af5760203660031901126103af5760655460405163755b36bd60e11b81526004803592602091839182906001600160a01b03165afa80156103a3576102ca91600091610374575b506001600160a01b03163314613cef565b60665419811981160361030957806066556040519081527f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c60203392a2005b60405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c69747900000000000000006064820152608490fd5b610396915060203d60201161039c575b61038e818361386e565b810190613cd0565b386102b9565b503d610384565b6040513d6000823e3d90fd5b600080fd5b346103af5760003660031901126103af5760206103cf614384565b604051908152f35b346103af5760203660031901126103af576103f0613710565b6103f8614c9b565b6001600160a01b038116156104125761041090614f36565b005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346103af5760603660031901126103af5761048033613f6e565b1561048e57610410336148de565b60405162461bcd60e51b815260206004820152604360248201527f44656c65676174696f6e4d616e616765722e6d6f646966794f70657261746f7260448201527f44657461696c733a2063616c6c6572206d75737420626520616e206f706572616064820152623a37b960e91b608482015260a490fd5b346103af5760603660031901126103af5761051e613710565b6024356001600160401b0381116103af5761053d903690600401613a33565b336000908152609a6020526040902054604435906001600160a01b03166108245761056783613f6e565b156107aa5761057d600180606654161415613bb2565b6001600160a01b038381166000818152609960205260409020600101549093911690811515806107a0575b80610796575b61064b575b50505033600052609a6020526040600020816bffffffffffffffffffffffff60a01b825416179055337fc3ee9f2e5fda98e8066a1f745b2df9285f416fe98cf2559cd21484b3d8743304600080a361060a33614026565b919060005b8151811015610410576001906106456001600160a01b036106308386613c94565b511661063c8388613c94565b5190338761506b565b0161060f565b602081018051421161072b5782600052609c60205260406000208460005260205260ff604060002054166106c0576106b8936106b09184600052609c6020526040600020826000526020526040600020600160ff198254161790555190848833613b2d565b905191615191565b8280806105b3565b60405162461bcd60e51b815260206004820152603760248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a2061707060448201527f726f76657253616c7420616c7265616479207370656e740000000000000000006064820152608490fd5b60405162461bcd60e51b815260206004820152603760248201527f44656c65676174696f6e4d616e616765722e5f64656c65676174653a2061707060448201527f726f766572207369676e617475726520657870697265640000000000000000006064820152608490fd5b50833314156105ae565b50813314156105a8565b60405162461bcd60e51b815260206004820152604660248201527f44656c65676174696f6e4d616e616765722e64656c6567617465546f3a206f7060448201527f657261746f72206973206e6f74207265676973746572656420696e2045696765606482015265372630bcb2b960d11b608482015260a490fd5b60405162461bcd60e51b815260206004820152604260248201527f44656c65676174696f6e4d616e616765722e64656c6567617465546f3a20737460448201527f616b657220697320616c7265616479206163746976656c792064656c65676174606482015261195960f21b608482015260a490fd5b346103af5760203660031901126103af576108b3613710565b6108c4600280606654161415613bb2565b6001600160a01b038082166000908152609a602052604081205490911615610bfd576108ef82613f6e565b610b92576001600160a01b0382168015610b2757808252609a60205260408220546001600160a01b0316913382148015919082610b1e575b8015610afd575b15610a925760409061093f86614026565b949093610a67575b85817ffee30966a256b71e14bc0ebfc94315e28ef4a97a7131a9e2b7a310a73af446768480a38152609a6020522080546001600160a01b03191690558051806109ba5750505050506109b66040516109a060208261386e565b6000815260003681375b60405191829182613766565b0390f35b6109c690939193613bfe565b936040926020929060005b8651811015610a5757600190610a4687516109ec898261386e565b83815287366020830137885190610a038a8361386e565b84825288366020840137848060a01b03610a1d858d613c94565b5116610a2882613c87565b52610a338487613c94565b51610a3d83613c87565b528787816143b9565b610a50828b613c94565b52016109d1565b505050505050506109b6906109aa565b85817ff0eddf07e6ea14f388b47e1e94a0f464ecbd9eed4171130e0fc0e99fb4030a8a8480a3610947565b60405162461bcd60e51b815260206004820152603d60248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a20636160448201527f6c6c65722063616e6e6f7420756e64656c6567617465207374616b65720000006064820152608490fd5b50838152609960205260408120600101546001600160a01b0316331461092e565b50833314610927565b60405162461bcd60e51b815260206004820152603c60248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a20636160448201527f6e6e6f7420756e64656c6567617465207a65726f2061646472657373000000006064820152608490fd5b60405162461bcd60e51b815260206004820152603d60248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a206f7060448201527f657261746f72732063616e6e6f7420626520756e64656c6567617465640000006064820152608490fd5b60a460405162461bcd60e51b815260206004820152604460248201527f44656c65676174696f6e4d616e616765722e756e64656c65676174653a20737460448201527f616b6572206d7573742062652064656c65676174656420746f20756e64656c656064820152636761746560e01b6084820152fd5b346103af5760203660031901126103af57610c95610c90613710565b614026565b604051906040820160408352835180915260206060840194019060005b818110610ccd5784806109b688878382036020850152613abf565b82516001600160a01b0316865260209586019590920191600101610cb2565b346103af5760003660031901126103af57602060405162034bc08152f35b346103af5760803660031901126103af5760206103cf610d28613710565b610d3061373c565b6064359160243590613fa2565b346103af5760203660031901126103af57610d56613710565b600060408051610d6581613838565b828152826020820152015260018060a01b031660005260996020526060604060002063ffffffff604051610d9881613838565b6001808060a01b0384541693848352015490826040602083019260018060a01b0385168452019260a01c16825260405193845260018060a01b03905116602084015251166040820152f35b346103af5760203660031901126103af576001600160a01b03610e04613710565b1660005260a16020526020604060002054604051908152f35b346103af5760003660031901126103af576020609d54604051908152f35b346103af5760403660031901126103af576001600160a01b03610e5c613710565b16600052609c6020526040600020602435600052602052602060ff604060002054166040519015158152f35b346103af5760203660031901126103af57600435600052609e602052602060ff604060002054166040519015158152f35b346103af5760003660031901126103af576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346103af5760203660031901126103af576001600160a01b03610f1f613710565b16600052609f6020526020604060002054604051908152f35b346103af5760203660031901126103af576004356001600160401b0381116103af57610f689036906004016137a0565b610f7133613f6e565b15610fae57610fa97f02a919ed0e2acad1dd90f17ef2fa4ae5462ee1339170034a8531cca4b670809091604051918291339583613ca8565b0390a2005b60405162461bcd60e51b815260206004820152604760248201527f44656c65676174696f6e4d616e616765722e7570646174654f70657261746f7260448201527f4d657461646174615552493a2063616c6c6572206d75737420626520616e206f6064820152663832b930ba37b960c91b608482015260a490fd5b346103af5760003660031901126103af57602060405173beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac08152f35b346103af5760403660031901126103af57611071613710565b6024356001600160401b0381116103af5761109090369060040161390b565b9061109b8251613bfe565b916001600160a01b039091169060005b81518110156110fb57600190836000526098602052604080600020838060a01b036110d68487613c94565b511690600091858060a01b0316825260205220546110f48287613c94565b52016110ab565b604051602080825281906109b690820187613abf565b346103af5760003660031901126103af576033546040516001600160a01b039091168152602090f35b346103af5760003660031901126103af576065546040516001600160a01b039091168152602090f35b346103af5760a03660031901126103af5761117c613710565b611184613726565b6044356001600160401b0381116103af576111a3903690600401613a33565b6064356001600160401b0381116103af576111c2903690600401613a33565b9060843560208201805142116114a0576001600160a01b038087166000908152609a60205260409020541661141f576111fa85613f6e565b1561139a576112449060018060a01b0387169384600052609b602052600161122b604060002054935189858c613fa2565b9286600052609b60205201604060002055519087615191565b611255600180606654161415613bb2565b6001600160a01b03848116600081815260996020526040902060010154909491169081151580611390575b80611386575b611319575b5050506000818152609a6020526040812080546001600160a01b031916841790557fc3ee9f2e5fda98e8066a1f745b2df9285f416fe98cf2559cd21484b3d87433049080a36112d982614026565b9160005b8251811015610410576001906113136001600160a01b036112fe8387613c94565b511661130a8388613c94565b5190888661506b565b016112dd565b602081014281511061072b5782600052609c60205260406000208460005260205260ff604060002054166106c05761137e936106b09184600052609c6020526040600020826000526020526040600020600160ff19825416179055519084898b613b2d565b84808061128b565b5084331415611286565b5081331415611280565b60405162461bcd60e51b815260206004820152605160248201527f44656c65676174696f6e4d616e616765722e64656c6567617465546f4279536960448201527f676e61747572653a206f70657261746f72206973206e6f7420726567697374656064820152703932b21034b71022b4b3b2b72630bcb2b960791b608482015260a490fd5b60405162461bcd60e51b815260206004820152604d60248201527f44656c65676174696f6e4d616e616765722e64656c6567617465546f4279536960448201527f676e61747572653a207374616b657220697320616c726561647920616374697660648201526c195b1e4819195b1959d85d1959609a1b608482015260a490fd5b60405162461bcd60e51b815260206004820152604160248201527f44656c65676174696f6e4d616e616765722e64656c6567617465546f4279536960448201527f676e61747572653a207374616b6572207369676e6174757265206578706972656064820152601960fa1b608482015260a490fd5b346103af5760403660031901126103af5761152e613710565b611536613726565b6001600160a01b039182166000908152609860209081526040808320949093168252928352819020549051908152f35b346103af5760003660031901126103af5761157f614c9b565b603380546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346103af5760203660031901126103af5760206115e66115e1613710565b613f6e565b6040519015158152f35b346103af5760203660031901126103af576001600160a01b03611611613710565b16600052609a602052602060018060a01b0360406000205416604051908152f35b346103af5760203660031901126103af5761164b614c9b565b610410600435614f7f565b346103af5760803660031901126103af576004356001600160401b0381116103af57806004019060e060031982360301126103af576024356001600160401b0381116103af576116aa9036906004016136e0565b9190926064359283151584036103af576116cb600480606654161415613bb2565b6116da600260c9541415613e35565b600260c9556116f16116ec3684613975565b613f51565b80600052609e60205260ff6040600020541615611dfc576084840194611728611719876148cd565b63ffffffff609d549116614003565b4310611d7d576001600160a01b0361174260448701613b19565b163303611d0b5780611c92575b6000828152609e60205260409020805460ff19169055156119a9579360a484019360c4019060005b6117818686613c52565b905081101561196e5787906117e4611798846148cd565b826117bd6117b86117a98c8c613c52565b6001600160a01b039491613af3565b613b19565b1660005260a16020526117dd439163ffffffff6040600020549116614003565b11156150f4565b86866118236117b8848961181c826118108c6118166117b8846118106118098d613b19565b9d8d613c52565b90613af3565b98613c52565b3597613af3565b906001600160a01b031673beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac081036118da5750507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692833b156103af5760405162387b1360e81b81526001600160a01b0390921660048301523360248301526044820152916000908390606490829084905af19182156103a3576001926118c9575b505b01611777565b60006118d49161386e565b896118c1565b90939091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156103af5760009283608492604051978895869463c608c7f360e01b86523360048701526024860152604485015260018060a01b031660648401525af19182156103a35760019261195d575b506118c3565b60006119689161386e565b89611957565b5050505050507fc97098c2f658800b4df29001527f7324bcdffcf6e8751a699ab920a1eced5b1d91506020905b604051908152a1600160c955005b9392919033600052609a60205260018060a01b03604060002054169060009460a48501955b6119d88786613c52565b9050811015611c60576119fe6119ed836148cd565b826117bd6117b86117a98c8b613c52565b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac081611a246117b86117a98b8a613c52565b1603611b5057611a78611a3686613b19565b6020611a498461181060c48c018b613c52565b6040516303a041cf60e21b81526001600160a01b03841660048201529035602482015292839081906044820190565b038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19182156103a357600092611b19575b506001600160a01b038082166000908152609a602052604090205460019493849390929190911690898c83611af4575b5050505050505b016119ce565b611b0e956118106117b892611b0894613c52565b9161506b565b808b8080898c611ae7565b90916020823d8211611b48575b81611b336020938361386e565b81010312611b45575051906001611ab7565b80fd5b3d9150611b26565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690611b896117b882868d613af3565b611b9a6117b8836118108c8b613c52565b9060c4890191611bae84611810858c613c52565b3594803b156103af5760405163c4623ea160e01b81523360048201526001600160a01b03938416602482015291909216604482015260648101949094526000908490608490829084905af19081156103a3576001938892611c4f575b50898388611c1c575b50505050611aee565b611810611c366117b883611810611c3d96611c4699613c52565b938b613c52565b3590338861506b565b858b8983611c13565b6000611c5a9161386e565b8c611c0a565b505050505050507fc97098c2f658800b4df29001527f7324bcdffcf6e8751a699ab920a1eced5b1d915060209061199b565b611c9f60a4860185613c52565b8414905061174f5760405162461bcd60e51b8152602060048201526042602482015260008051602061563883398151915260448201527f645769746864726177616c3a20696e707574206c656e677468206d69736d61746064820152610c6d60f31b608482015260a490fd5b60405162461bcd60e51b8152602060048201526050602482015260008051602061563883398151915260448201527f645769746864726177616c3a206f6e6c7920776974686472617765722063616e60648201526f1031b7b6b83632ba329030b1ba34b7b760811b608482015260a490fd5b60405162461bcd60e51b815260206004820152605f602482015260008051602061563883398151915260448201527f645769746864726177616c3a206d696e5769746864726177616c44656c61794260648201527f6c6f636b7320706572696f6420686173206e6f74207965742070617373656400608482015260a490fd5b60405162461bcd60e51b8152602060048201526043602482015260008051602061563883398151915260448201527f645769746864726177616c3a20616374696f6e206973206e6f7420696e20717560648201526265756560e81b608482015260a490fd5b346103af5760003660031901126103af576020606654604051908152f35b346103af5760203660031901126103af5760043560ff81168091036103af5760016020911b806066541614604051908152f35b346103af5760203660031901126103af576004356001600160401b0381116103af576103cf6116ec6020923690600401613975565b346103af5760003660031901126103af5760655460405163237dfb4760e11b815233600482015290602090829060249082906001600160a01b03165afa80156103a357611f3c91600091611f72575b50613dd8565b60001960665560405160001981527fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d60203392a2005b611f94915060203d602011611f9a575b611f8c818361386e565b810190613dc0565b82611f36565b503d611f82565b346103af5760003660031901126103af5760206040516213c6808152f35b346103af5760003660031901126103af576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346103af5760003660031901126103af5760206040517f39111bc4a4d688e1f685123d7497d4615370152a8ee4a0593e647bd06ad8bb0b8152f35b346103af5760203660031901126103af5760206115e661205d613710565b6001600160a01b039081166000908152609a602052604090205416151590565b346103af5760203660031901126103af576001600160a01b0361209e613710565b166000526099602052602060018060a01b0360016040600020015416604051908152f35b346103af5760003660031901126103af576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346103af5760803660031901126103af576004356001600160401b0381116103af576121379036906004016136e0565b9060c0526024356001600160401b0381116103af5761215a9036906004016136e0565b91906044356001600160401b0381116103af5761217b9036906004016136e0565b9390916064356001600160401b0381116103af5792856121a186939536906004016136e0565b9390926121b5600480606654161415613bb2565b6121c4600260c9541415613e35565b600260c9556000955b828710156101005261010051612943576000610100528660051b8060c051013560a05260de1960c05136030160a051121561248857818810156129295761221690890189613c52565b989096612224898786613af3565b50612230898289613af3565b3580151581036124885761224d6116ec3660a05160c05101613975565b60e05260e0516101005152609e60205260ff60406101005120541615611dfc5761227f608060a05160c05101016148cd565b612293439163ffffffff609d549116614003565b11611d7d5760a05160c0516001600160a01b03916122b49101604001613b19565b163303611d0b57806128a5575b60e0516101005152609e6020526040610100512060ff19815416905560001461257357610100515b61230160a0805160c051010160a05160c05101613c52565b905081101561252a5761236261231f608060a05160c05101016148cd565b8261233e6117b86117a960a0805160c051010160a05160c05101613c52565b16610100515260a16020526117dd439163ffffffff60406101005120549116614003565b61237160a05160c05101613b19565b90898c6123be6117b88461239a6117b88261181060a0805160c051010160a05160c05101613c52565b936123b78261181060c060a0518151010160a05160c05101613c52565b3595613af3565b6001600160a01b039091169073beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0820361248f5750507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156124885760405162387b1360e81b81526001600160a01b039094166004850152336024850152604484015261010051908390606490829084905af191821561247a57600192612467575b505b016122e9565b610100516124749161386e565b8c61245f565b6040513d61010051823e3d90fd5b6101005180fd5b9093507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b156124885760405163c608c7f360e01b8152336004820152602481019590955260448501526001600160a01b0316606484015261010051908390608490829084905af191821561247a57600192612517575b50612461565b610100516125249161386e565b8c612511565b50939790949850600191959296505b7fc97098c2f658800b4df29001527f7324bcdffcf6e8751a699ab920a1eced5b1d602060405160e0518152a10195919490939692966121cd565b6101008051339052609a6020525160408120546001600160a01b03166080529899985b6125ae60a0805160c051010160a05160c05101613c52565b9050811015612893576125cc61231f608060a05160c05101016148cd565b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0816126006117b86117a960a0805160c051010160a05160c05101613c52565b1603612738576126669061261960a05160c05101613b19565b60206126378361181060c060a0518151010160a05160c05101613c52565b6040516303a041cf60e21b81526001600160a01b03841660048201529035602482015293849081906044820190565b03816101005160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1801561247a576101005190612706575b61010080516001600160a01b03848116909152609a602052905160409020546001955016806126db575b5050505b01612596565b6126fe92611b086117b88661181060a0805160c051010160a05160c05101613c52565b8c80806126d1565b506020833d8211612730575b8161271f6020938361386e565b8101031261248857600192516126a7565b3d9150612712565b6127466117b8828c8c613af3565b906127666117b88261181060a0805160c051010160a05160c05101613c52565b6127828261181060c060a0518151010160a05160c05101613c52565b35907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b156124885760405163c4623ea160e01b81523360048201526001600160a01b039485166024820152908416604482015260648101919091526101005190928390608490829084907f0000000000000000000000000000000000000000000000000000000000000000165af191821561247a57600192612880575b50608051156126d55761287b6128546117b88361181060a0805160c051010160a05160c05101613c52565b6128708361181060c060a0518151010160a05160c05101613c52565b35903360805161506b565b6126d5565b6101005161288d9161386e565b8c612829565b50939750939760019195929650612539565b6128bd60a0805160c051010160a05160c05101613c52565b8c1490506122c15760405162461bcd60e51b8152602060048201526042602482015260008051602061563883398151915260448201527f645769746864726177616c3a20696e707574206c656e677468206d69736d61746064820152610c6d60f31b608482015260a490fd5b634e487b7160e01b61010051526032600452602461010051fd5b600160c955005b346103af5760203660031901126103af576001600160a01b0361296b613710565b16600052609b6020526020604060002054604051908152f35b346103af57612992366137cd565b90337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316148015612a15575b6129cf90613d4e565b6001600160a01b038084166000908152609a6020526040902054166129f057005b6001600160a01b038084166000908152609a602052604090205461041094911661506b565b50337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316146129c6565b346103af5760c03660031901126103af57612a60613710565b612a68613726565b604435906084356001600160401b0381116103af57612a8b9036906004016136e0565b60a4929192356001600160401b0381116103af57612aad9036906004016136e0565b9390926000549660ff8860081c161597888099612cab575b8015612c94575b15612c385760ff19811660011760005588612c26575b506065546001600160a01b03161580612c14575b15612b9957612b3b612b4b9288612b5b996066556040519081527fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d60203392a2614b39565b612b43614ec6565b609755614f36565b612b56606435614f7f565b614cf3565b612b6157005b61ff0019600054166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b60405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a490fd5b506001600160a01b0382161515612af6565b61ffff19166101011760005588612ae2565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015612acc5750600160ff821614612acc565b50600160ff821610612ac5565b346103af5760003660031901126103af5760206040517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8668152f35b346103af5760603660031901126103af5760206103cf612d11613710565b612d19613726565b6001600160a01b0382166000908152609b8552604090205460443592613fa2565b346103af5760203660031901126103af576001600160a01b03612d5b613710565b166000526099602052602063ffffffff60016040600020015460a01c16604051908152f35b346103af5760403660031901126103af576004356001600160401b0381116103af57612db09036906004016136e0565b602435916001600160401b0383116103af57612dd36104109336906004016136e0565b929091612b56614c9b565b346103af5760203660031901126103af576004356024602060018060a01b03606554166040519283809263237dfb4760e11b82523360048301525afa80156103a357612e3191600091612ed95750613dd8565b60665481811603612e6e57806066556040519081527fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d60203392a2005b60405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c69747900000000000000006064820152608490fd5b612ef2915060203d602011611f9a57611f8c818361386e565b83611f36565b346103af57612f06366137cd565b90337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316148015612f89575b612f4390613d4e565b6001600160a01b038084166000908152609a602052604090205416612f6457005b6001600160a01b038084166000908152609a6020526040902054610410949116614c13565b50337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614612f3a565b346103af5760203660031901126103af576004612fd6613710565b60655460405163755b36bd60e11b81529260209184919082906001600160a01b03165afa9182156103a357610410926130219160009161302657506001600160a01b03163314613cef565b614b39565b61303f915060203d60201161039c5761038e818361386e565b846102b9565b346103af573660031901608081126103af576060136103af576064356001600160401b0381116103af5761307d9036906004016137a0565b336000908152609a60205260409020546001600160a01b0316613350576130a3336148de565b6040516130af81613807565b606081526020810190600082526130cd600180606654161415613bb2565b336000908152609960205260409020600101546001600160a01b03169081151580613346575b8061333e575b613238575b5050336000818152609a6020526040812080546001600160a01b0319168317905590915081907fc3ee9f2e5fda98e8066a1f745b2df9285f416fe98cf2559cd21484b3d87433049080a361315133614026565b9260005b82518110156131915760019061318b6001600160a01b036131768387613c94565b51166131828389613c94565b5190333361506b565b01613155565b50604051836004356001600160a01b038116908190036103af5782526024356001600160a01b038116908190036103af5760208301526044359063ffffffff82168092036103af5782610fa99260407f02a919ed0e2acad1dd90f17ef2fa4ae5462ee1339170034a8531cca4b67080909501527f8e8485583a2310d41f7c82b9427d0bd49bad74bb9cff9d3402a29d8f9b28a0e260603392a2604051918291339583613ca8565b8251421161072b5781600052609c60205260406000206000805260205260ff604060002054166106c0576133369282600052609c6020526040600020600080526020526040600020600160ff198254161790555160405160208101917f14bde674c9f64b2ad00eaaee4a8bed1fabef35c7507e3c5b9cfc9436909a2dad8352846040830152336060830152336080830152600060a083015260c082015260c081526132e460e08261386e565b51902061331d61332b6132f5614384565b92604051928391602083019586909160429261190160f01b8352600283015260228201520190565b03601f19810183528261386e565b519020905191615191565b8280806130fe565b5060006130f9565b50813314156130f3565b60405162461bcd60e51b815260206004820152604a60248201527f44656c65676174696f6e4d616e616765722e726567697374657241734f70657260448201527f61746f723a2063616c6c657220697320616c7265616479206163746976656c796064820152690819195b1959d85d195960b21b608482015260a490fd5b346103af5760203660031901126103af576004356001600160401b0381116103af576133fe9036906004016136e0565b90613410600280606654161415613bb2565b61341982613bfe565b9033600052609a60205260018060a01b036040600020541660005b84811061344957604051806109b68682613766565b61345d613457828786613c30565b80613c52565b905061347761346d838887613c30565b6020810190613c52565b9190500361357657336001600160a01b0361349e6040613498858a89613c30565b01613b19565b160361350b576001906134fa84876134f2846134ea6134e061346d6134d761345785886134d1604061349884848f613c30565b9a613c30565b9490968d613c30565b94909236916138b7565b923691613929565b9186336143b9565b6135048287613c94565b5201613434565b60405162461bcd60e51b815260206004820152603c60248201527f44656c65676174696f6e4d616e616765722e717565756557697468647261776160448201527f6c3a2077697468647261776572206d757374206265207374616b6572000000006064820152608490fd5b60405162461bcd60e51b815260206004820152603860248201527f44656c65676174696f6e4d616e616765722e717565756557697468647261776160448201527f6c3a20696e707574206c656e677468206d69736d6174636800000000000000006064820152608490fd5b346103af5760a03660031901126103af5760206103cf6135ff613710565b613607613726565b9061361061373c565b6084359260643592613b2d565b346103af5760003660031901126103af5760206040517f14bde674c9f64b2ad00eaaee4a8bed1fabef35c7507e3c5b9cfc9436909a2dad8152f35b346103af5760203660031901126103af576004356001600160401b0381116103af576136889036906004016136e0565b609d549160005b8281106136a157602084604051908152f35b6001600160a01b036136b76117b8838686613af3565b1660005260a16020526040600020548481116136d7575b5060010161368f565b935060016136ce565b9181601f840112156103af578235916001600160401b0383116103af576020808501948460051b0101116103af57565b600435906001600160a01b03821682036103af57565b602435906001600160a01b03821682036103af57565b604435906001600160a01b03821682036103af57565b35906001600160a01b03821682036103af57565b602060408183019282815284518094520192019060005b81811061378a5750505090565b825184526020938401939092019160010161377d565b9181601f840112156103af578235916001600160401b0383116103af57602083818601950101116103af57565b60609060031901126103af576004356001600160a01b03811681036103af57906024356001600160a01b03811681036103af579060443590565b604081019081106001600160401b0382111761382257604052565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111761382257604052565b60e081019081106001600160401b0382111761382257604052565b90601f801991011681019081106001600160401b0382111761382257604052565b359063ffffffff821682036103af57565b6001600160401b0381116138225760051b60200190565b9291906138c3816138a0565b936138d1604051958661386e565b602085838152019160051b81019283116103af57905b8282106138f357505050565b6020809161390084613752565b8152019101906138e7565b9080601f830112156103af57816020613926933591016138b7565b90565b929190613935816138a0565b93613943604051958661386e565b602085838152019160051b81019283116103af57905b82821061396557505050565b8135815260209182019101613959565b919060e0838203126103af576040519061398e82613853565b819361399981613752565b83526139a760208201613752565b60208401526139b860408201613752565b6040840152606081013560608401526139d36080820161388f565b608084015260a08101356001600160401b0381116103af57826139f791830161390b565b60a084015260c0810135906001600160401b0382116103af570181601f820112156103af5760c091816020613a2e93359101613929565b910152565b91906040838203126103af5760405190613a4c82613807565b819380356001600160401b0381116103af5781019082601f830112156103af578135926001600160401b0384116138225760405190613a95601f8601601f19166020018361386e565b848252602085850101116103af576000602085819682809701838601378301015284520135910152565b906020808351928381520192019060005b818110613add5750505090565b8251845260209384019390920191600101613ad0565b9190811015613b035760051b0190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b03811681036103af5790565b604080517f14bde674c9f64b2ad00eaaee4a8bed1fabef35c7507e3c5b9cfc9436909a2dad602082019081526001600160a01b0395861692820192909252918416606083015292909116608082015260a081019290925260c080830193909352918152613b9b60e08261386e565b51902061331d613bac6132f5614384565b51902090565b15613bb957565b60405162461bcd60e51b815260206004820152601960248201527f5061757361626c653a20696e64657820697320706175736564000000000000006044820152606490fd5b90613c08826138a0565b613c15604051918261386e565b8281528092613c26601f19916138a0565b0190602036910137565b9190811015613b035760051b81013590605e19813603018212156103af570190565b903590601e19813603018212156103af57018035906001600160401b0382116103af57602001918160051b360383136103af57565b805115613b035760200190565b8051821015613b035760209160051b010190565b90918060409360208452816020850152848401376000828201840152601f01601f1916010190565b908160209103126103af57516001600160a01b03811681036103af5790565b15613cf657565b60405162461bcd60e51b815260206004820152602a60248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526939903ab73830bab9b2b960b11b6064820152608490fd5b15613d5557565b60405162461bcd60e51b815260206004820152603760248201527f44656c65676174696f6e4d616e616765723a206f6e6c7953747261746567794d60448201527f616e616765724f72456967656e506f644d616e616765720000000000000000006064820152608490fd5b908160209103126103af575180151581036103af5790565b15613ddf57565b60405162461bcd60e51b815260206004820152602860248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526739903830bab9b2b960c11b6064820152608490fd5b15613e3c57565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b80516001600160a01b039081168352602080830151821681850152604080840151909216918401919091526060808301519084015260808083015163ffffffff169084015260a08083015160e0918501829052805191850182905261010085019392019060005b818110613f325750505060c001519160c08183039101526020808351928381520192019060005b818110613f1c5750505090565b8251845260209384019390920191600101613f0f565b82516001600160a01b0316855260209485019490920191600101613ee8565b604051613bac8161331d6020820194602086526040830190613e81565b6001600160a01b03168015159081613f84575090565b6000818152609a60205260409020546001600160a01b031614919050565b92906040519260208401947f39111bc4a4d688e1f685123d7497d4615370152a8ee4a0593e647bd06ad8bb0b865260018060a01b0316604085015260018060a01b03166060840152608083015260a082015260a08152613b9b60c08261386e565b9190820180921161401057565b634e487b7160e01b600052601160045260246000fd5b6040516360f4062b60e01b81526001600160a01b03918216600482018190529091602090839060249082907f0000000000000000000000000000000000000000000000000000000000000000165afa9182156103a357600092614350575b506040516394f649dd60e01b815260048101919091526000816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156103a357600090819261422b575b50600083131561422557805160008161415a5750505050906040805192614104828561386e565b60018452614155601f198301928336602088013785936141268251928361386e565b6001825236602083013773beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac061414f8297613c87565b52613c87565b529190565b60018201809211614211575061416f90613bfe565b9061417a8251613bfe565b9460005b82518110156141c5576001906001600160a01b0361419c8286613c94565b51166141a88287613c94565b526141b38187613c94565b516141be828a613c94565b520161417e565b50939192505081516000198101908111614010576141f873beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac09184613c94565b5281516000198101908111614010576141559085613c94565b634e487b7160e01b81526011600452602490fd5b92909150565b9091503d8083833e61423d818361386e565b810160408282031261434c5781516001600160401b03811161431c5782019181601f8401121561431c578251614272816138a0565b93614280604051958661386e565b81855260208086019260051b8201019084821161434857602001915b818310614324575050506020810151906001600160401b038211614320570181601f8201121561431c578051906142d2826138a0565b946142e0604051968761386e565b82865260208087019360051b830101938411611b455750602001905b82821061430c57505050386140dd565b81518152602091820191016142fc565b8380fd5b8480fd5b82516001600160a01b03811681036143445781526020928301920161429c565b8780fd5b8680fd5b8280fd5b90916020823d60201161437c575b8161436b6020938361386e565b81010312611b455750519038614084565b3d915061435e565b467f0000000000000000000000000000000000000000000000000000000000000000036143b15760975490565b613926614ec6565b93949392916001600160a01b038416918215614849578351156147c85760005b84518110156146fa576001600160a01b0382166146cb575b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac06001600160a01b036144188388613c94565b5116036144b7577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690614454818a613c94565b5191803b156103af5760405163beffbb8960e01b81526001600160a01b038916600482015260248101939093526000908390604490829084905af19182156103a3576001926144a6575b505b016143d9565b60006144b19161386e565b3861449e565b6001600160a01b0383168414801561463d575b1561457a576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691906145068288613c94565b5116614512828b613c94565b51833b156103af57604051638c80d4e560e01b81526001600160a01b038a811660048301529290921660248301526044820152916000908390606490829084905af19182156103a357600192614569575b506144a0565b60006145749161386e565b38614563565b60e460405162461bcd60e51b815260206004820152608460248201527f44656c65676174696f6e4d616e616765722e5f72656d6f76655368617265734160448201527f6e6451756575655769746864726177616c3a2077697468647261776572206d7560648201527f73742062652073616d652061646472657373206173207374616b65722069662060848201527f746869726450617274795472616e7366657273466f7262696464656e2061726560a482015263081cd95d60e21b60c4820152fd5b506001600160a01b036146508287613c94565b51604051639b4da03d60e01b8152911660048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156103a3576000916146ad575b50156144ca565b6146c5915060203d8111611f9a57611f8c818361386e565b386146a6565b6146f56001600160a01b036146e08388613c94565b51166146ec838b613c94565b51908885614c13565b6143f1565b506000838152609f602052604090208054969793969395508360001981146140105760010190556040519561472e87613853565b86526001600160a01b03908116602087015216604085015260608401524363ffffffff16608084015260a083015260c08201527f9009ab153e8014fbfb02f2217f5cde7aa7f9ad734ae85ca3ee3f4ca2fdd499f96147c261478e83613f51565b9283600052609e6020526040600020600160ff19825416179055604051918291858352604060208401526040830190613e81565b0390a190565b60405162461bcd60e51b815260206004820152604d60248201527f44656c65676174696f6e4d616e616765722e5f72656d6f76655368617265734160448201527f6e6451756575655769746864726177616c3a207374726174656769657320636160648201526c6e6e6f7420626520656d70747960981b608482015260a490fd5b60405162461bcd60e51b815260206004820152605060248201527f44656c65676174696f6e4d616e616765722e5f72656d6f76655368617265734160448201527f6e6451756575655769746864726177616c3a207374616b65722063616e6e6f7460648201526f206265207a65726f206164647265737360801b608482015260a490fd5b3563ffffffff811681036103af5790565b6044359063ffffffff8216908183036103af576213c6808211614a935760018060a01b03169081600052609960205263ffffffff60016040600020015460a01c1611614a0c576000908152609960205260409020600435906001600160a01b03821682036103af5780546001600160a01b0319166001600160a01b03928316178155600101919060243590811681036103af5782546001600160c01b0319166001600160a01b039182161760a09290921b63ffffffff60a01b169190911790915560405160608101917ffebe5cd24b2cbc7b065b9d0fdeb904461e4afcff57dd57acda1e7832031ba7ac91906149d46004613752565b1681526001600160a01b036149e96024613752565b16602082015263ffffffff6149fe604461388f565b1660408201528033930390a2565b60405162461bcd60e51b815260206004820152605360248201527f44656c65676174696f6e4d616e616765722e5f7365744f70657261746f72446560448201527f7461696c733a207374616b65724f70744f757457696e646f77426c6f636b732060648201527218d85b9b9bdd08189948191958dc99585cd959606a1b608482015260a490fd5b60405162461bcd60e51b815260206004820152606c60248201527f44656c65676174696f6e4d616e616765722e5f7365744f70657261746f72446560448201527f7461696c733a207374616b65724f70744f757457696e646f77426c6f636b732060648201527f63616e6e6f74206265203e204d41585f5354414b45525f4f50545f4f55545f5760848201526b494e444f575f424c4f434b5360a01b60a482015260c490fd5b6001600160a01b03168015614b9657606554604080516001600160a01b0383168152602081018490527f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb69190a16001600160a01b03191617606555565b60405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a490fd5b6001600160a01b03908116600081815260986020908152604080832094871683529390529190912080549194808303949392851161401057939055604080516001600160a01b0392831681529290911660208301528101919091527f6909600037b75d7b4733aedd815442b5ec018a827751c832aaff64eba5d6d2dd9080606081015b0390a2565b6033546001600160a01b03163303614caf57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b919091838303614e485760005b838110614d0e575050505050565b6001600160a01b03614d246117b8838786613af3565b16908160005260a1602052604060002054614d40828887613af3565b359062034bc08211614d9b57837f0e7efa738e8b0ce6376a0c1af471655540d2e9a81647d7b09ed823018426576d9260609260019660005260a16020528160406000205560405192835260208301526040820152a101614d00565b60405162461bcd60e51b815260206004820152607360248201527f44656c65676174696f6e4d616e616765722e5f7365745374726174656779576960448201527f746864726177616c44656c6179426c6f636b733a205f7769746864726177616c60648201527f44656c6179426c6f636b732063616e6e6f74206265203e204d41585f5749544860848201527244524157414c5f44454c41595f424c4f434b5360681b60a482015260c490fd5b60405162461bcd60e51b815260206004820152604a60248201527f44656c65676174696f6e4d616e616765722e5f7365745374726174656779576960448201527f746864726177616c44656c6179426c6f636b733a20696e707574206c656e67746064820152690d040dad2e6dac2e8c6d60b31b608482015260a490fd5b6040600a60208251614ed8848261386e565b828152016922b4b3b2b72630bcb2b960b11b81522081519060208201927f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866845282015246606082015230608082015260808152613bac60a08261386e565b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b62034bc08111614fc0577fafa003cd76f87ff9d62b35beea889920f33c0c42b8d45b74954d61d50f4b6b696040609d548151908152836020820152a1609d55565b60405162461bcd60e51b815260206004820152607160248201527f44656c65676174696f6e4d616e616765722e5f7365744d696e5769746864726160448201527f77616c44656c6179426c6f636b733a205f6d696e5769746864726177616c446560648201527f6c6179426c6f636b732063616e6e6f74206265203e204d41585f5749544844526084820152704157414c5f44454c41595f424c4f434b5360781b60a482015260c490fd5b90614c967f1ec042c965e2edd7107b51188ee0f383e22e76179041ab3a9d18ff151405166c939260018060a01b031694856000526098602052604060002060018060a01b03851660005260205260406000206150c8828254614003565b9055604080516001600160a01b0394851681529490931660208501529183019190915281906060820190565b156150fb57565b60405162461bcd60e51b815260206004820152606e602482015260008051602061563883398151915260448201527f645769746864726177616c3a207769746864726177616c44656c6179426c6f6360648201527f6b7320706572696f6420686173206e6f74207965742070617373656420666f7260848201526d207468697320737472617465677960901b60a482015260c490fd5b9091813b156153015760408051630b135d3f60e11b815260048101949094526024840152805160448401819052839160005b8281106152e957505091816064818560008360209884010152601f8019910116810103019160018060a01b03165afa9081156103a3576000916152a2575b506001600160e01b0319166374eca2c160e11b0161521b57565b60405162461bcd60e51b815260206004820152605360248201527f454950313237315369676e61747572655574696c732e636865636b5369676e6160448201527f747572655f454950313237313a2045524331323731207369676e6174757265206064820152721d995c9a599a58d85d1a5bdb8819985a5b1959606a1b608482015260a490fd5b6020813d6020116152e1575b816152bb6020938361386e565b810103126152dd5751906001600160e01b031982168203611b45575038615201565b5080fd5b3d91506152ae565b602082820181015160648884010152869450016151c3565b61530e90615316936153a5565b929092615415565b6001600160a01b0390811691160361532a57565b60405162461bcd60e51b815260206004820152604760248201527f454950313237315369676e61747572655574696c732e636865636b5369676e6160448201527f747572655f454950313237313a207369676e6174757265206e6f742066726f6d6064820152661039b4b3b732b960c91b608482015260a490fd5b8151604181036153d25750906153ce916020820151906060604084015193015160001a9061558f565b9091565b60400361540b5760406020830151920151918260ff1c91601b8301809311614010576153ce936001600160ff1b03169260ff169061558f565b5050600090600290565b600581101561557957806154265750565b6000600182036154755760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b50600281036154c35760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b6000906003810361551e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b600491501461552957565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161562b5760ff1690601b82141580615620575b61561457602093600093608093604051938452868401526040830152606082015282805260015afa156103a3576000516001600160a01b0381161561560b5790600090565b50600090600190565b50505050600090600490565b50601c8214156155c6565b5050505060009060039056fe44656c65676174696f6e4d616e616765722e5f636f6d706c6574655175657565a26469706673582212200a038fb896550a25722d6b4c44e80efedbeb7ab9b7a67801c1c6d6bfc45342a964736f6c634300081a0033","sourceMap":"1137:46236:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;2285:14:62;1137:46236:37;;;-1:-1:-1;;;2285:25:62;;1137:46236:37;;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;2285:25:62;;;;;;2263:94;2285:25;1137:46236:37;2285:25:62;;;1137:46236:37;-1:-1:-1;;;;;;1137:46236:37;2271:10:62;:39;2263:94;:::i;:::-;5128:7;1137:46236:37;5127:8:62;5140:16;;5126:31;;5125:47;1137:46236:37;;;5128:7:62;1137:46236:37;;;;;;5292:37:62;1137:46236:37;2271:10:62;5292:37;;1137:46236:37;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;2285:25:62;;;;1137:46236:37;2285:25:62;1137:46236:37;2285:25:62;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1137:46236:37;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;-1:-1:-1;;;;;1137:46236:37;;2409:22:0;1137:46236:37;;2503:8:0;;;:::i;:::-;1137:46236:37;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;5639:22;5650:10;5639:22;:::i;:::-;1137:46236;;;5775:18;5650:10;5775:18;:::i;1137:46236::-;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;:::i;:::-;7471:10;-1:-1:-1;1137:46236:37;;;39667:11;1137:46236;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;7571:20;;;:::i;:::-;1137:46236;;;2759:52:62;5683:1;1137:46236:37;5712:7:62;1137:46236:37;5712:14:62;5711:24;2767:14;2759:52;:::i;:::-;-1:-1:-1;;;;;1137:46236:37;;;;;;;24067:16;1137:46236;;;;;;24067:45;1137:46236;;;;;;24529:33;;;;:70;;1137:46236;24529:96;;;1137:46236;24525:1359;;1137:46236;7471:10;;;;1137:46236;;25987:11;1137:46236;;;;;;;;;;;;;;;7471:10;26032:33;1137:46236;26032:33;;26135:28;7471:10;26135:28;:::i;:::-;26179:13;;1137:46236;26179:13;1137:46236;;26194:21;;;;;1137:46236;;26437:9;-1:-1:-1;;;;;26397:13:37;1137:46236;26397:13;;:::i;:::-;1137:46236;;26437:9;;;;:::i;:::-;1137:46236;7471:10;;26437:9;;:::i;:::-;1137:46236;26179:13;;24525:1359;1137:46236;24708:33;;1137:46236;;24745:15;-1:-1:-1;1137:46236:37;;;;;24981:29;1137:46236;;;;;;;;;;;;;;;;;;25823:36;1137:46236;25347:223;1137:46236;;;;24981:29;1137:46236;;;;;;;;;;;;;;;;;;;;;;;7471:10;;;;25347:223;:::i;:::-;25823:36;;;;:::i;:::-;24525:1359;;;;;1137:46236;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;24529:96;7471:10;;;24603:22;;24529:96;;:70;7471:10;;;24566:33;;24529:70;;1137:46236;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;:::i;:::-;2759:52:62;1137:46236:37;;5712:7:62;1137:46236:37;5712:14:62;5711:24;2767:14;2759:52;:::i;:::-;-1:-1:-1;;;;;1137:46236:37;;;;;;;39667:11;1137:46236;;;;;;;;;39667:33;1137:46236;;11548:18;;;:::i;:::-;1137:46236;;-1:-1:-1;;;;;1137:46236:37;;11650:20;;1137:46236;;;;;11764:11;1137:46236;;;;;;-1:-1:-1;;;;;1137:46236:37;;11814:10;:20;;:46;;;1137:46236;11814:46;;;1137:46236;11814:125;;;;1137:46236;;;;;12262:28;;;;:::i;:::-;12384:96;;;;;1137:46236;12528:35;;;;;;1137:46236;;11764:11;1137:46236;;;;;-1:-1:-1;;;;;;1137:46236:37;;;;;12709:22;;;1137:46236;;;;;;;;;;;;:::i;:::-;;;;;;;;12705:772;1137:46236;;;;;;;:::i;:::-;;;;12705:772;12830:32;;;;;;:::i;:::-;12881:13;1137:46236;;;;;;12919:3;1137:46236;;12896:21;;;;;1540:1;1137:46236;13196:256;1137:46236;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;13099:13;;;;:::i;:::-;1137:46236;;13079:33;;;:::i;:::-;1137:46236;13147:9;;;;:::i;:::-;1137:46236;13130:26;;;:::i;:::-;1137:46236;13196:256;;;;:::i;:::-;13175:277;;;;:::i;:::-;1137:46236;;12881:13;;12896:21;;;;;;;;1137:46236;12896:21;12705:772;;12384:96;12429:40;;;;;;12384:96;;1137:46236;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;11814:125;-1:-1:-1;1137:46236:37;;;11894:16;1137:46236;;;;;;11894:45;1137:46236;-1:-1:-1;;;;;1137:46236:37;11814:10;11880:59;11814:125;;:46;:10;;;11838:22;11814:46;;1137:46236;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;;2111:7:38;1137:46236:37;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1137:46236:37;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;40173:16;1137:46236;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;-1:-1:-1;;;;;1137:46236:37;;:::i;:::-;;;;5472:66:38;1137:46236:37;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;4457:39:38;1137:46236:37;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;-1:-1:-1;;;;;1137:46236:37;;:::i;:::-;;;;3859:81:38;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;;;4613:50:38;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;1817:33:38;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;-1:-1:-1;;;;;1137:46236:37;;:::i;:::-;;;;4910:62:38;1137:46236:37;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;:::i;:::-;6112:22;6123:10;6112:22;:::i;:::-;1137:46236;;;6225:51;;1137:46236;;;6123:10;;;;6225:51;;;:::i;:::-;;;;1137:46236;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;;2108:42;1137:46236;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;:::i;:::-;;40957:32;1137:46236;;40957:32;:::i;:::-;41004:13;-1:-1:-1;;;;;1137:46236:37;;;;;41042:3;1137:46236;;41019:21;;;;;1137:46236;;;;;41073:14;1137:46236;;;;;;;;;;;41098:13;;;;:::i;:::-;1137:46236;;41073:39;-1:-1:-1;1137:46236:37;;;;;;;;;;;;;41061:51;;;;:::i;:::-;1137:46236;;41004:13;;41019:21;1137:46236;;;;;;;;;;;;41019:21;1137:46236;:::i;:::-;;;;;;-1:-1:-1;;1137:46236:37;;;;1513:6:0;1137:46236:37;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;1825:37:62;1137:46236:37;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;:::i;:::-;;;;;9784:31;;1137:46236;;9819:15;-1:-1:-1;1137:46236:37;;-1:-1:-1;;;;;1137:46236:37;;;-1:-1:-1;1137:46236:37;;;39667:11;1137:46236;;;;;;;;;10076:20;;;:::i;:::-;1137:46236;;;10699:34;1137:46236;;;;;;;;;;;;10301:11;1137:46236;;;10369:106;1137:46236;;;;;;10369:106;;;;:::i;:::-;1137:46236;;;;10301:11;1137:46236;;;;;;;10699:34;;;;:::i;:::-;2759:52:62;5683:1;1137:46236:37;5712:7:62;1137:46236:37;5712:14:62;5711:24;2767:14;2759:52;:::i;:::-;-1:-1:-1;;;;;1137:46236:37;;;;;;;24067:16;1137:46236;;;;;;24067:45;1137:46236;;;;;;24529:33;;;;:70;;1137:46236;24529:96;;;1137:46236;24525:1359;;1137:46236;-1:-1:-1;;;1137:46236:37;;;;25987:11;1137:46236;;;;;;;-1:-1:-1;;;;;;1137:46236:37;;;;;26032:33;;1137:46236;26032:33;26135:28;;;:::i;:::-;26179:13;1137:46236;26179:13;1137:46236;;26194:21;;;;;1137:46236;;26437:9;-1:-1:-1;;;;;26397:13:37;1137:46236;26397:13;;:::i;:::-;1137:46236;;26437:9;;;;:::i;:::-;1137:46236;26437:9;;;;:::i;:::-;1137:46236;26179:13;;24525:1359;1137:46236;24708:33;;9819:15;1137:46236;;24708:52;1137:46236;;;;;24981:29;1137:46236;;;;;;;;;;;;;;;;;;25823:36;1137:46236;25347:223;1137:46236;;;;24981:29;1137:46236;;;;;;;;;;;;;;;;;;;;;;;25347:223;;;;;:::i;25823:36::-;24525:1359;;;;;24529:96;24603:10;;;:22;;24529:96;;:70;24566:10;;;:33;;24529:70;;1137:46236;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1137:46236:37;;;;;;;2619:71:38;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;1303:62:0;;:::i;:::-;2765:6;1137:46236:37;;-1:-1:-1;;;;;;1137:46236:37;;;;;;;-1:-1:-1;;;;;1137:46236:37;2813:40:0;1137:46236:37;;2813:40:0;1137:46236:37;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;-1:-1:-1;;;;;1137:46236:37;;:::i;:::-;;;;3166:46:38;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;1303:62:0;;:::i;:::-;20906:27:37;1137:46236;;20906:27;:::i;1137:46236::-;;;;;;-1:-1:-1;;1137:46236:37;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;2759:52:62;1137:46236:37;;5712:7:62;1137:46236:37;5712:14:62;5711:24;2767:14;2759:52;:::i;:::-;2561:63:3;1684:1:37;2569:7:3;1137:46236:37;2569:19:3;;2561:63;:::i;:::-;1684:1:37;2569:7:3;1137:46236:37;27112:35;1137:46236;;;;:::i;:::-;27112:35;:::i;:::-;1137:46236;;;27179:18;1137:46236;;;;;;;;;;;27326:21;;;;:48;:21;;;:::i;:::-;1137:46236;27350:24;1137:46236;;;27326:48;:::i;:::-;27378:12;-1:-1:-1;1137:46236:37;;-1:-1:-1;;;;;27557:21:37;1137:46236;27557:21;;;:::i;:::-;1137:46236;27543:10;:35;1137:46236;;27695:216;;;1137:46236;;;;;27179:18;1137:46236;;;;;;;-1:-1:-1;;1137:46236:37;;;28027:3688;;;28206:13;28225:21;;;;28770:17;;;1137:46236;28206:13;28225:21;;;;:::i;:::-;28221:32;;;;;;;28303:21;;28274:276;28303:21;;;:::i;:::-;28357;:24;;:21;;;;:::i;:::-;-1:-1:-1;;;;;1137:46236:37;;28357:24;:::i;:::-;;:::i;:::-;1137:46236;;;28327:29;1137:46236;;28303:79;27378:12;1137:46236;;;;;;;;28303:79;:::i;:::-;:95;;28274:276;:::i;:::-;28623:17;;28819:9;;28623:17;;28770:20;28623:17;28770;28623;28716:24;;28623:17;28716:21;28623:17;;;:::i;:::-;28716:21;;;:::i;:::-;:24;;:::i;:::-;28770:17;;:::i;:20::-;1137:46236;28819:9;;:::i;:::-;1137:46236;-1:-1:-1;;;;;1137:46236:37;2108:42;36568:34;;2108:42;;-1:-1:-1;;36618:15:37;-1:-1:-1;;;;;1137:46236:37;;36618:99;;;;;1137:46236;;-1:-1:-1;;;36618:99:37;;-1:-1:-1;;;;;1137:46236:37;;;;36618:99;;1137:46236;27543:10;1137:46236;;;;;;;;;;;;;;;;;;;36618:99;;;;;;;1137:46236;36618:99;;;36564:270;;;1137:46236;28206:13;;36618:99;1137:46236;36618:99;;;:::i;:::-;;;;36564:270;1137:46236;;;;-1:-1:-1;36748:15:37;-1:-1:-1;;;;;1137:46236:37;36748:75;;;;;1137:46236;;;27326:21;1137:46236;;;;;;;;;;;36748:75;;27543:10;1137:46236;36748:75;;1137:46236;;;;;;;;;;;;;;;;;;;36748:75;;;;;;;1137:46236;36748:75;;;36564:270;;;;36748:75;1137:46236;36748:75;;;:::i;:::-;;;;28221:32;;;;;;;31730:35;28221:32;;1137:46236;28221:32;28027:3688;1137:46236;;;;;31730:35;1137:46236;2569:7:3;1137:46236:37;;28027:3688;27543:10;;;;;1137:46236;;29148:11;1137:46236;;;;;;;;;;;;29190:13;1137:46236;29209:21;;;;29185:2520;29190:13;29209:21;;;;:::i;:::-;29205:32;;;;;;;29258:276;29287:21;;;:::i;:::-;29341;:24;;:21;;;;:::i;29258:276::-;2108:42;29815:21;:24;;:21;;;;:::i;:24::-;1137:46236;29815:50;2108:42;;30269:75;29906:17;;;:::i;:::-;1137:46236;30322:20;:17;;;;;;;:::i;:20::-;1137:46236;;-1:-1:-1;;;30269:75:37;;-1:-1:-1;;;;;1137:46236:37;;;30269:75;;1137:46236;;;;;;;;;;;;;;;;;30269:75;;1137:46236;;30269:15;-1:-1:-1;;;;;1137:46236:37;30269:75;;;;;;;1137:46236;30269:75;;;29811:1809;-1:-1:-1;;;;;;1137:46236:37;;;;;;;29148:11;1137:46236;;;;;;;;;;;;;;;;;;30492:30;;1137:46236;30488:451;;29811:1809;;;;;;;;1137:46236;29190:13;;30488:451;30861:28;30799:21;;:24;:21;:24;:21;;:::i;:24::-;30861:28;;:::i;:::-;30488:451;;;;;;;;30269:75;;;1137:46236;30269:75;;;;;;;;;1137:46236;30269:75;;;:::i;:::-;;;1137:46236;;;;-1:-1:-1;1137:46236:37;;;30269:75;;1137:46236;;;30269:75;;;-1:-1:-1;30269:75:37;;29811:1809;30985:15;-1:-1:-1;;;;;1137:46236:37;;31023:9;;;;;;:::i;:::-;31034:24;;:21;;;;;:::i;:24::-;31060:17;;;;;:20;:17;;;;;:::i;:20::-;1137:46236;30985:96;;;;;;1137:46236;;-1:-1:-1;;;30985:96:37;;27543:10;1137:46236;30985:96;;1137:46236;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;27326:21;;1137:46236;;-1:-1:-1;;30985:96:37;;;;;;;1137:46236;30985:96;;;;;29811:1809;31161:29;;;;31157:445;;29811:1809;;;;;;;31157:445;31532:17;31470:24;;:21;;31532:20;31470:21;31532:20;31470:21;;:::i;:24::-;31532:17;;;:::i;:20::-;1137:46236;27543:10;;31532:20;;:::i;:::-;31157:445;;;;;;30985:96;1137:46236;30985:96;;;:::i;:::-;;;;29205:32;;;;;;;;31730:35;29205:32;;1137:46236;29205:32;28027:3688;;27695:216;27772:21;;;;;;:::i;:::-;1137:46236;;;-1:-1:-1;27695:216:37;1137:46236;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1137:46236:37;;;;;;;;;-1:-1:-1;;;27326:21:37;1137:46236;;;27772:21;;1137:46236;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1137:46236:37;;;;;;;;;-1:-1:-1;;;27326:21:37;1137:46236;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1137:46236:37;;;;;;;;;;27326:21;1137:46236;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1137:46236:37;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;5479:7:62;1137:46236:37;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;;;;;;;;;5683:1:62;1137:46236:37;;;;5712:7:62;1137:46236:37;5712:14:62;5711:24;1137:46236:37;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1137:46236:37;;;;2125:14:62;1137:46236:37;;;-1:-1:-1;;;2125:35:62;;2149:10;1137:46236:37;2125:35:62;;1137:46236:37;;;;;;2125:35:62;;1137:46236:37;;-1:-1:-1;;;;;1137:46236:37;2125:35:62;;;;;;2117:88;2125:35;1137:46236:37;2125:35:62;;;1137:46236:37;2117:88:62;;:::i;:::-;4359:17;;4349:27;1137:46236:37;;;4359:17:62;;1137:46236:37;;4391:37:62;1137:46236:37;2149:10:62;4391:37;;1137:46236:37;2125:35:62;;;;1137:46236:37;2125:35:62;1137:46236:37;2125:35:62;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;1137:46236:37;;;;;;-1:-1:-1;;1137:46236:37;;;;;;;1964:15;1137:46236;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;1917:49:38;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;;939:91:38;1137:46236:37;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1137:46236:37;;;-1:-1:-1;1137:46236:37;;;39667:11;1137:46236;;;;;;;39667:33;;;39585:123;1137:46236;;;;;;-1:-1:-1;;1137:46236:37;;;;-1:-1:-1;;;;;1137:46236:37;;:::i;:::-;;;;40393:16;1137:46236;;;;;;;;40393:45;1137:46236;;;40393:45;1137:46236;;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;1709:49:38;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;;:::i;:::-;2768:13:62;;;2759:52;1137:46236:37;;5712:7:62;1137:46236:37;5712:14:62;5711:24;2767:14;2759:52;:::i;:::-;2561:63:3;1684:1:37;2569:7:3;1137:46236:37;2569:19:3;;2561:63;:::i;:::-;1684:1:37;2569:7:3;1137:46236:37;;18200:173;18244:3;18220:22;;;;;;;;;;1137:46236;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18316:25;;;;;;;;:::i;:::-;;18343:18;;;;;:::i;:::-;1137:46236;;;;;;;;27112:35;1137:46236;;;;;;;;:::i;27112:35::-;;;1137:46236;;;;;27179:18;1137:46236;;;;;;;;;;;;27326:21;1137:46236;;;;;;27326:21;;:::i;:::-;:48;27378:12;1137:46236;;27350:24;1137:46236;;;27326:48;:::i;:::-;:64;1137:46236;;;;;;-1:-1:-1;;;;;1137:46236:37;27557:21;;1137:46236;;27557:21;;:::i;:::-;1137:46236;27543:10;:35;1137:46236;;27695:216;;;18244:3;1137:46236;;;;;27179:18;1137:46236;;;;;;;;;;;;;28027:3688;;;;1137:46236;;28206:13;28225:21;;1137:46236;;;;;28225:21;1137:46236;;;;;28225:21;:::i;:::-;28221:32;;;;;;;28274:276;28303:21;1137:46236;;;;;;27326:21;28303;:::i;:::-;1137:46236;28357:24;;:21;28225;1137:46236;;;;;28225:21;1137:46236;;;;;28357:21;:::i;:24::-;1137:46236;;;;28327:29;1137:46236;;28303:79;27378:12;1137:46236;;;;;;;;;28303:79;:::i;28274:276::-;28623:17;1137:46236;;;;;28623:17;:::i;:::-;1137:46236;;;28819:9;;1137:46236;28716:24;;1137:46236;28716:21;28225;1137:46236;;;;;28225:21;1137:46236;;;;;28716:21;:::i;:24::-;1137:46236;28770:20;1137:46236;28770:17;;1137:46236;;;;;28770:17;1137:46236;;;;;28770:17;:::i;:20::-;1137:46236;28819:9;;:::i;:::-;-1:-1:-1;;;;;1137:46236:37;;;;2108:42;36568:34;;2108:42;;-1:-1:-1;;36618:15:37;-1:-1:-1;;;;;1137:46236:37;;36618:99;;;;;1137:46236;;-1:-1:-1;;;36618:99:37;;-1:-1:-1;;;;;1137:46236:37;;;;36618:99;;1137:46236;27543:10;1137:46236;;;;;;;;;;;;;;;;;;;36618:99;;;;;;;1137:46236;36618:99;;;36564:270;;;1137:46236;28206:13;;36618:99;1137:46236;;36618:99;;;:::i;:::-;;;;;1137:46236;;;;;;;;;;36618:99;1137:46236;;;;36564:270;1137:46236;;-1:-1:-1;36748:15:37;-1:-1:-1;;;;;1137:46236:37;;36748:75;;;;;1137:46236;;-1:-1:-1;;;36748:75:37;;27543:10;1137:46236;36748:75;;1137:46236;;;;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;36748:75;;1137:46236;;;;36748:75;;;;;;;1137:46236;36748:75;;;36564:270;;;;36748:75;1137:46236;;36748:75;;;:::i;:::-;;;;28221:32;;;;;;;;1137:46236;28221:32;;;;;28027:3688;31730:35;1137:46236;;;;;;;31730:35;1137:46236;18205:13;;;;;;;;;;28027:3688;1137:46236;;;27543:10;1137:46236;;29148:11;1137:46236;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;27543:10;;;29190:13;29209:21;;1137:46236;;;;;29209:21;1137:46236;;;;;29209:21;:::i;:::-;29205:32;;;;;;;29258:276;29287:21;1137:46236;;;;;;27326:21;29287;:::i;29258:276::-;2108:42;1137:46236;29815:24;;:21;29209;1137:46236;;;;;29209:21;1137:46236;;;;;29815:21;:::i;:24::-;1137:46236;29815:50;2108:42;;30269:75;1137:46236;29906:17;1137:46236;;;;;29906:17;:::i;:::-;1137:46236;30322:20;1137:46236;30322:17;;1137:46236;;;;;30322:17;1137:46236;;;;;30322:17;:::i;:20::-;1137:46236;;-1:-1:-1;;;30269:75:37;;-1:-1:-1;;;;;1137:46236:37;;;30269:75;;1137:46236;;;;;;;;;;;;;;;;;30269:75;;1137:46236;;;;;;;;30269:15;1137:46236;30269:75;;;;;;1137:46236;;30269:75;;;29811:1809;1137:46236;;;-1:-1:-1;;;;;1137:46236:37;;;;;;29148:11;1137:46236;;;;;;;;;;-1:-1:-1;1137:46236:37;;30488:451;;29811:1809;;;;;1137:46236;29190:13;;30488:451;30861:28;1137:46236;30799:24;;1137:46236;30799:21;29209;1137:46236;;;;;29209:21;1137:46236;;;;;30799:21;:::i;30861:28::-;30488:451;;;;;30269:75;;1137:46236;30269:75;;;;;;;;;1137:46236;30269:75;;;:::i;:::-;;;1137:46236;;;;;;;30269:75;;;;;-1:-1:-1;30269:75:37;;29811:1809;31023:9;;;;;;:::i;:::-;1137:46236;31034:24;;1137:46236;31034:21;29209;1137:46236;;;;;29209:21;1137:46236;;;;;31034:21;:::i;:24::-;31060:20;1137:46236;31060:17;;1137:46236;;;;;31060:17;1137:46236;;;;;31060:17;:::i;:20::-;1137:46236;;30985:15;-1:-1:-1;;;;;1137:46236:37;30985:96;;;;1137:46236;;-1:-1:-1;;;30985:96:37;;27543:10;1137:46236;30985:96;;1137:46236;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;;;30985:96;;1137:46236;;;;30985:15;1137:46236;30985:96;;;;;;;1137:46236;30985:96;;;29811:1809;1137:46236;;;31157:445;29811:1809;31157:445;31532:20;31470:24;;1137:46236;31470:21;29209;1137:46236;;;;;29209:21;1137:46236;;;;;31470:21;:::i;:24::-;31532:20;1137:46236;31532:17;31060;1137:46236;;;;;31060:17;1137:46236;;;;;31532:17;:::i;:20::-;1137:46236;27543:10;;31532:20;;;:::i;:::-;29811:1809;;30985:96;1137:46236;;30985:96;;;:::i;:::-;;;;29205:32;;;;;;;1137:46236;29205:32;;;;;28027:3688;;27695:216;27772:21;;1137:46236;;;;;27772:21;1137:46236;;;;;27772:21;:::i;:::-;1137:46236;;;-1:-1:-1;27695:216:37;1137:46236;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1137:46236:37;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;18220:22;1137:46236;2569:7:3;1137:46236:37;;;;;;;;-1:-1:-1;;1137:46236:37;;;;-1:-1:-1;;;;;1137:46236:37;;:::i;:::-;;;;3370:46:38;1137:46236:37;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2373:10;2395:15;-1:-1:-1;;;;;1137:46236:37;2373:38;:80;;;;1137:46236;2352:182;;;:::i;:::-;-1:-1:-1;;;;;1137:46236:37;;;-1:-1:-1;1137:46236:37;;;39667:11;1137:46236;;;;;;;19145:256;;1137:46236;19145:256;-1:-1:-1;;;;;1137:46236:37;;;;;;;19203:11;1137:46236;;;;;;19382:6;;1137:46236;;19382:6;:::i;2373:80::-;-1:-1:-1;2373:10:37;2437:15;-1:-1:-1;;;;;1137:46236:37;2415:38;2373:80;;1137:46236;;;;;;-1:-1:-1;;1137:46236:37;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;3133:14:2;;;;3179:34;;;1137:46236:37;3178:108:2;;;;1137:46236:37;;;;-1:-1:-1;;1137:46236:37;;;;;;;3394:65:2;;1137:46236:37;-1:-1:-1;3077:14:62;1137:46236:37;-1:-1:-1;;;;;1137:46236:37;3069:37:62;;:79;;1137:46236:37;;;;3361:15:62;3643:12:37;1137:46236;;3778:22;1137:46236;3255:26:62;1137:46236:37;;;;;;3296:36:62;1137:46236:37;3303:10:62;3296:36;;3361:15;:::i;:::-;3587:27:37;;:::i;:::-;3567:47;1137:46236;3643:12;:::i;:::-;3695:25;1137:46236;;3695:25;:::i;:::-;3778:22;:::i;:::-;3479:99:2;;1137:46236:37;3479:99:2;1137:46236:37;;;;;;;3553:14:2;1137:46236:37;;;;;;3553:14:2;1137:46236:37;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;3069:79:62;-1:-1:-1;;;;;;1137:46236:37;;3110:38:62;;3069:79;;3394:65:2;-1:-1:-1;;1137:46236:37;;;;;3394:65:2;;;1137:46236:37;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;3178:108:2;3258:4;;1476:19:4;:23;3219:66:2;;3178:108;3219:66;1137:46236:37;;;;;3268:17:2;3178:108;;3179:34;1137:46236:37;;;;;3197:16:2;3179:34;;1137:46236:37;;;;;;-1:-1:-1;;1137:46236:37;;;;;;;699:80:38;1137:46236:37;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;44776:81;1137:46236;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1137:46236:37;;;;;;44703:11;1137:46236;;;;;;;;;44776:81;:::i;1137:46236::-;;;;;;-1:-1:-1;;1137:46236:37;;;;-1:-1:-1;;;;;1137:46236:37;;:::i;:::-;;;;40636:16;1137:46236;;;;40636:51;1137:46236;;;40636:51;1137:46236;;;;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1137:46236:37;;;;;21625:21;1137:46236;;;;;;:::i;:::-;1303:62:0;;;;;:::i;1137:46236:37:-;;;;;;-1:-1:-1;;1137:46236:37;;;;;;2125:35:62;1137:46236:37;;;;;;2125:14:62;1137:46236:37;;;;;;;;;;;2125:35:62;;2149:10;1137:46236:37;2125:35:62;;1137:46236:37;2125:35:62;;;;;;2117:88;2125:35;1137:46236:37;2125:35:62;;;2117:88;;:::i;:::-;4034:7;1137:46236:37;4034:25:62;;;4033:38;1137:46236:37;;;4034:7:62;1137:46236:37;;;;;;4182:35:62;1137:46236:37;2149:10:62;4182:35;;1137:46236:37;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;2125:35:62;1137:46236:37;;;;;;;;;;;;;;;;2125:35:62;;;;1137:46236:37;2125:35:62;1137:46236:37;2125:35:62;;;;;;;:::i;:::-;;;;1137:46236:37;;;;;;;:::i;:::-;;2373:10;2395:15;-1:-1:-1;;;;;1137:46236:37;2373:38;:80;;;;1137:46236;2352:182;;;:::i;:::-;-1:-1:-1;;;;;1137:46236:37;;;-1:-1:-1;1137:46236:37;;;39667:11;1137:46236;;;;;;;20173:387;;1137:46236;20173:387;-1:-1:-1;;;;;1137:46236:37;;;;;;;20231:11;1137:46236;;;;;;20528:6;;1137:46236;;20528:6;:::i;2373:80::-;-1:-1:-1;2373:10:37;2437:15;-1:-1:-1;;;;;1137:46236:37;2415:38;2373:80;;1137:46236;;;;;;-1:-1:-1;;1137:46236:37;;;;;;;:::i;:::-;2285:14:62;1137:46236:37;;;-1:-1:-1;;;2285:25:62;;1137:46236:37;;;;;;;;-1:-1:-1;;;;;1137:46236:37;2285:25:62;;;;;;;5927:17;2285:25;2263:94;2285:25;1137:46236:37;2285:25:62;;;-1:-1:-1;;;;;;1137:46236:37;2271:10:62;:39;2263:94;:::i;:::-;5927:17;:::i;2285:25::-;;;;1137:46236:37;2285:25:62;1137:46236:37;2285:25:62;;;;;;;:::i;:::-;;;;1137:46236:37;;;;;-1:-1:-1;;1137:46236:37;;;;;;;-1:-1:-1;1137:46236:37;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;:::i;:::-;4712:10;-1:-1:-1;1137:46236:37;;;39667:11;1137:46236;;;;;;-1:-1:-1;;;;;1137:46236:37;;;4844:26;4712:10;4844:26;:::i;:::-;1137:46236;;;;;:::i;:::-;;;;;;;;;;;2759:52:62;5683:1;1137:46236:37;5712:7:62;1137:46236:37;5712:14:62;5711:24;2767:14;2759:52;:::i;:::-;4712:10:37;1137:46236;;;;24067:16;1137:46236;;;;;;24067:45;1137:46236;-1:-1:-1;;;;;1137:46236:37;;24529:33;;;;:70;;1137:46236;24529:96;;;1137:46236;24525:1359;;1137:46236;-1:-1:-1;;4712:10:37;1137:46236;;;;25987:11;1137:46236;;;;;;;-1:-1:-1;;;;;;1137:46236:37;;;;;4712:10;;-1:-1:-1;4712:10:37;;26032:33;;1137:46236;26032:33;26135:28;4712:10;26135:28;:::i;:::-;26179:13;1137:46236;26179:13;1137:46236;;26194:21;;;;;24067:45;;26437:9;-1:-1:-1;;;;;26397:13:37;1137:46236;26397:13;;:::i;:::-;1137:46236;;26437:9;;;;:::i;:::-;1137:46236;4712:10;;;26437:9;:::i;:::-;1137:46236;26179:13;;26194:21;-1:-1:-1;1137:46236:37;;26194:21;1137:46236;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;5174:51;1137:46236;;5174:51;1137:46236;;;5101:58;1137:46236;4712:10;5101:58;;1137:46236;;4712:10;;;;5174:51;;;:::i;24525:1359::-;1137:46236;;24745:15;-1:-1:-1;1137:46236:37;;;;;24981:29;1137:46236;;;;;;;;;;;;;;;;;;25823:36;1137:46236;;;;24981:29;1137:46236;;;;;;;;;;;;;24067:45;1137:46236;;;;;;;;;;;;46763:101;;1137:46236;1186:133:38;1137:46236:37;;;;;;;4712:10;1137:46236;;;;4712:10;1137:46236;;;;;;;;;;;;;;46763:101;;;1137:46236;46763:101;;:::i;:::-;1137:46236;46740:134;;46960:67;;46989:17;;:::i;:::-;1137:46236;;;46960:67;;;1137:46236;46960:67;;;;1137:46236;;;;;;;;;;;;;;;;;;;;46960:67;;46763:101;;46960:67;;;;;;:::i;:::-;1137:46236;46950:78;;25823:36;;;;:::i;:::-;24525:1359;;;;;24529:96;;1137:46236;24529:96;;:70;4712:10;;;24566:33;;24529:70;;1137:46236;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;:::i;:::-;2768:13:62;2759:52;1137:46236:37;;5712:7:62;1137:46236:37;5712:14:62;5711:24;2767:14;2759:52;:::i;:::-;14115:44:37;;;:::i;:::-;14200:10;;1137:46236;;14188:11;1137:46236;;;;;;;;;;;;;14242:33;;;;;;1137:46236;;;;;;;:::i;14277:3::-;14321:36;:25;;;;;:::i;:::-;:36;;:::i;:::-;14368:25;;:32;:25;;;;;:::i;:::-;1137:46236;14368:32;;;;:::i;:::-;14321:86;;;;1137:46236;;14200:10;-1:-1:-1;;;;;14536:36:37;1137:46236;14536:25;;;;;:::i;:::-;:36;;:::i;:::-;1137:46236;14536:50;1137:46236;;1540:1;;15021:309;15155:25;;1137:46236;15155:25;1137:46236;15283:32;:25;15221:36;:25;15155;;:36;1137:46236;15155:25;;;;;:::i;:36::-;15221:25;;:::i;:36::-;15283:25;;;;;:::i;:32::-;1137:46236;;;;;;:::i;:::-;;;;;:::i;:::-;14200:10;;;15021:309;:::i;:::-;15000:330;;;;:::i;:::-;1137:46236;;14227:13;;1137:46236;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1137:46236:37;;;;;;;1186:133:38;1137:46236:37;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;:::i;:::-;43607:24;1137:46236;43646:13;1137:46236;43661:21;;;;;;1137:46236;;;;;;;;43684:3;-1:-1:-1;;;;;43763:13:37;;;;;;:::i;:::-;1137:46236;;;43733:29;1137:46236;;;;;;43795:37;;;43791:113;;43684:3;;1137:46236;;43646:13;;43791:113;;-1:-1:-1;1137:46236:37;43791:113;;1137:46236;;;;;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1137:46236:37;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;:::o;:::-;;;;-1:-1:-1;1137:46236:37;;;;;-1:-1:-1;1137:46236:37;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;:::o;:::-;;;46763:101;;1137:46236;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;46763:101;1137:46236;;-1:-1:-1;;1137:46236:37;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;1137:46236:37;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;:::o;46440:630::-;1137:46236;;;1186:133:38;46763:101:37;;;1137:46236;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46763:101;;;;;1137:46236;46763:101;:::i;:::-;1137:46236;46740:134;;46960:67;;46989:17;;:::i;46960:67::-;1137:46236;46950:78;;46440:630;:::o;1540:1::-;;;;:::o;:::-;1137:46236;;-1:-1:-1;;;1540:1:37;;;;;;;;;;;1137:46236;1540:1;1137:46236;;;1540:1;;;;1137:46236;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;46763:101;1137:46236;46763:101;;1137:46236;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;1815:1:3;;;;:::o;:::-;1137:46236:37;;-1:-1:-1;;;1815:1:3;;;;;;;;;;;1137:46236:37;1815:1:3;1137:46236:37;;;1815:1:3;;;;1137:46236:37;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;;;44018:150;1137:46236;;44138:22;;1137:46236;44138:22;;;1137:46236;44138:22;1137:46236;;;;;;;:::i;39815:148::-;-1:-1:-1;;;;;1137:46236:37;39897:22;;;;;:59;;39890:66;39815:148;:::o;39897:59::-;39917:1;1137:46236;;;39923:11;1137:46236;;;;;;-1:-1:-1;;;;;1137:46236:37;39923:33;;39815:148;-1:-1:-1;39815:148:37:o;45294:550::-;;;1137:46236;;45575:78;;;;1137:46236;939:91:38;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45575:78;;;;;;:::i;1137:46236::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;41377:1775;1137:46236;;-1:-1:-1;;;41578:38:37;;-1:-1:-1;;;;;1137:46236:37;;;41578:38;;;1137:46236;;;;;;;;;41578:38;;1137:46236;;41578:15;1137:46236;41578:38;;;;;;;-1:-1:-1;41578:38:37;;;41377:1775;-1:-1:-1;1137:46236:37;;-1:-1:-1;;;41723:35:37;;41578:38;41723:35;;1137:46236;;;;-1:-1:-1;1137:46236:37;41578:38;1137:46236;41723:15;-1:-1:-1;;;;;1137:46236:37;41723:35;;;;;;;-1:-1:-1;;;41723:35:37;;;41377:1775;41858:14;-1:-1:-1;41858:14:37;;;41854:98;;1137:46236;;-1:-1:-1;42039:33:37;;;1137:46236;;;;;;;;;;;;;:::i;:::-;42190:1;1137:46236;;42297:30;46763:101;;1137:46236;;;;;;;;;42161:31;1137:46236;;;;;;;:::i;:::-;42190:1;1137:46236;;;;;;;2108:42;42245:38;42206:25;42245:38;;:::i;:::-;1137:46236;42297:30;:::i;:::-;1137:46236;43118:27;41377:1775;:::o;42035:1073::-;42494:1;1137:46236;;;;;;;42447:49;;;;:::i;:::-;1137:46236;42519:32;1137:46236;;42519:32;:::i;:::-;42642:13;-1:-1:-1;42642:13:37;1137:46236;;42657:32;;;;;42494:1;;-1:-1:-1;;;;;42726:24:37;1137:46236;42726:24;;:::i;:::-;1137:46236;;42710:40;;;;:::i;:::-;1137:46236;42780:24;;;;:::i;:::-;1137:46236;42768:36;;;;:::i;:::-;1137:46236;;42642:13;;42657:32;;;;;;;1137:46236;;4359:17:62;;1137:46236:37;;;;;;;42975:58;2108:42;42975:58;;;:::i;:::-;1137:46236;;;-1:-1:-1;;1137:46236:37;;;;;;;43047:50;;;;:::i;1137:46236::-;-1:-1:-1;;;1137:46236:37;;;41578:38;1137:46236;41578:38;;1137:46236;41854:98;41888:53;;;-1:-1:-1;41888:53:37:o;41723:35::-;;;;;;;;;;;;;:::i;:::-;;;1137:46236;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41723:35;;;;;;1137:46236;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;41578:38;;;1137:46236;41578:38;;1137:46236;41578:38;;;;;;1137:46236;41578:38;;;:::i;:::-;;;1137:46236;;;;;;41578:38;;;;;;;-1:-1:-1;41578:38:37;;39246:227;39317:13;39334:17;39317:34;39334:17;;39374;1137:46236;39367:24;:::o;39313:154::-;39429:27;;:::i;33057:3032::-;;;;;;-1:-1:-1;;;;;1137:46236:37;;;33312:20;;1137:46236;;;;33444:22;1137:46236;;33330:1;33702:13;1137:46236;;33717:21;;;;;-1:-1:-1;;;;;1137:46236:37;;33801:314;;33702:13;2108:42;-1:-1:-1;;;;;34206:13:37;;;;:::i;:::-;1137:46236;;34206:39;2108:42;;34714:15;-1:-1:-1;;;;;1137:46236:37;;34751:9;;;;:::i;:::-;1137:46236;34714:47;;;;;;1137:46236;;-1:-1:-1;;;34714:47:37;;-1:-1:-1;;;;;1137:46236:37;;34714:47;;;1137:46236;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;-1:-1:-1;;34714:47:37;;;;;;;1137:46236;34714:47;;;34202:1091;;;1137:46236;33702:13;;34714:47;33330:1;34714:47;;;:::i;:::-;;;;34202:1091;-1:-1:-1;;;;;1137:46236:37;;34829:20;;:84;;;;34202:1091;1137:46236;;;-1:-1:-1;;;;;35216:15:37;1137:46236;;;;35253:13;1137:46236;35253:13;;:::i;:::-;1137:46236;;35268:9;;;;:::i;:::-;1137:46236;35216:62;;;;;1137:46236;;-1:-1:-1;;;35216:62:37;;-1:-1:-1;;;;;1137:46236:37;;;35216:62;;;1137:46236;;;;;;;;;;;;;;-1:-1:-1;;1137:46236:37;;;;;;-1:-1:-1;;35216:62:37;;;;;;;1137:46236;35216:62;;;34202:1091;;;;35216:62;33330:1;35216:62;;;:::i;:::-;;;;1137:46236;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;34829:84;-1:-1:-1;;;;;;34899:13:37;;;;:::i;:::-;1137:46236;;;-1:-1:-1;;;34854:59:37;;1137:46236;;34854:59;;;1137:46236;;;34854:59;1137:46236;34854:15;-1:-1:-1;;;;;1137:46236:37;34854:59;;;;;;;33330:1;34854:59;;;34829:84;34853:60;;34829:84;;34854:59;;;;1137:46236;34854:59;;;;;;;;;:::i;:::-;;;;33801:314;34072:9;-1:-1:-1;;;;;34028:13:37;;;;:::i;:::-;1137:46236;;34072:9;;;;:::i;:::-;1137:46236;34072:9;;;;:::i;:::-;33801:314;;33717:21;-1:-1:-1;33330:1:37;1137:46236;;;35450:27;1137:46236;;;;;;;33717:21;;;;;;-1:-1:-1;1137:46236:37;-1:-1:-1;;1137:46236:37;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1137:46236:37;;;;35574:257;;1137:46236;;;35574:257;;1137:46236;35574:257;;;1137:46236;35743:12;1137:46236;;35574:257;;;1137:46236;;35574:257;;1137:46236;35574:257;;;1137:46236;36007:44;1137:46236;35867:35;1137:46236;35867:35;:::i;:::-;1137:46236;;33330:1;1137:46236;35950:18;1137:46236;;;33330:1;1137:46236;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;36007:44;;;33057:3032;:::o;1137:46236::-;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;:::o;21993:717::-;22125:43;1137:46236;;;;;;;;;;;1964:15;22125:79;;1137:46236;;;;;;;;;;-1:-1:-1;1137:46236:37;22416:16;1137:46236;;;22416:51;22125:43;-1:-1:-1;1137:46236:37;22416:51;1137:46236;;;;-1:-1:-1;1137:46236:37;;-1:-1:-1;1137:46236:37;;;22416:16;1137:46236;;22125:43;1137:46236;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;-1:-1:-1;;;;;;1137:46236:37;-1:-1:-1;;;;;1137:46236:37;;;;;;22416:51;1137:46236;;;;;;;;;;;;;;-1:-1:-1;;;;;;1137:46236:37;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;22125:43;1137:46236;;;;;22648:55;;1137:46236;;;;:::i;:::-;;;;-1:-1:-1;;;;;1137:46236:37;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;22672:10;;22648:55;;;;21993:717::o;1137:46236::-;22125:43;1137:46236;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;22125:43;1137:46236;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;22125:43;1137:46236;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;22125:43;1137:46236;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;6012:360:62;-1:-1:-1;;;;;1137:46236:37;6115:40:62;;1137:46236:37;;6287:14:62;1137:46236:37;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;6269:52:62;;1137:46236:37;6269:52:62;-1:-1:-1;;;;;;1137:46236:37;;6287:14:62;1137:46236:37;6012:360:62:o;1137:46236:37:-;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;32281:308;-1:-1:-1;;;;;1137:46236:37;;;-1:-1:-1;1137:46236:37;;;32464:14;1137:46236;;;;;;;;;;;;;;;;;;;;;;;;;;;;32281:308;;1137:46236;;;;;;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;;;;;;32523:59;;1137:46236;;;;32523:59;;;;32281:308::o;1599:130:0:-;1513:6;1137:46236:37;-1:-1:-1;;;;;1137:46236:37;929:10:6;1662:23:0;1137:46236:37;;1599:130:0:o;1137:46236:37:-;;;;;;;;;;;;;;;;;;;;;;;;;37547:1227;;;;37729:51;;;1137:46236;;37955:1;37958:13;;;;;;37547:1227;;;;;:::o;37973:3::-;-1:-1:-1;;;;;38013:14:37;;;;;;:::i;:::-;1137:46236;;;37955:1;1137:46236;38085:29;1137:46236;;;37955:1;1137:46236;;38181:25;;;;;:::i;:::-;1137:46236;38245:63;2111:7:38;38245:63:37;;1137:46236;;;38616:141;1137:46236;;;;;37955:1;1137:46236;38085:29;1137:46236;;;;37955:1;1137:46236;;;;;;;;;;;;;;;38616:141;1137:46236;37943:13;;1137:46236;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;47178:193;1137:46236;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;1137:46236:37;;47302:30;1137:46236;;47274:89;1137:46236;47274:89;;1137:46236;699:80:38;1137:46236:37;;;;;47334:13;1137:46236;;;;47357:4;1137:46236;;;;;47274:89;;;;;;:::i;2673:187:0:-;2765:6;1137:46236:37;;-1:-1:-1;;;;;1137:46236:37;;;-1:-1:-1;;;;;;1137:46236:37;;;;;;;;;;2813:40:0;-1:-1:-1;;2813:40:0;2673:187::o;36846:472:37:-;2111:7:38;36959:56:37;;1137:46236;;37169:80;1137:46236;37197:24;1137:46236;;;;;;;;;;;37169:80;37197:24;1137:46236;36846:472::o;1137:46236::-;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;31903:247;;32084:59;;31903:247;;1137:46236;;;;;;;;-1:-1:-1;1137:46236:37;32025:14;1137:46236;;;-1:-1:-1;1137:46236:37;;;;;;;;-1:-1:-1;1137:46236:37;;;;-1:-1:-1;1137:46236:37;32025:44;1137:46236;;;32025:44;:::i;:::-;1137:46236;;;;;-1:-1:-1;;;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1137:46236:37;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;974:926:59;;;1476:19:4;;:23;:19;;1137:46236:37;;;-1:-1:-1;;;1481:56:59;;;;;1137:46236:37;;;;;;;;;;;;;;;;;;-1:-1:-1;1137:46236:37;;;;;;;;;;;;;-1:-1:-1;1137:46236:37;;;;;;;;46763:101;;1137:46236;;;;;1481:56:59;;1137:46236:37;;;;;;;1481:56:59;;;;;;;-1:-1:-1;1481:56:59;;;1137:46236:37;-1:-1:-1;;;;;;;1137:46236:37;-1:-1:-1;;;1481:78:59;574:10;;974:926::o;574:10::-;1137:46236:37;;-1:-1:-1;;;574:10:59;;1137:46236:37;1481:56:59;574:10;;;;1137:46236:37;574:10:59;;1137:46236:37;574:10:59;1137:46236:37;;;574:10:59;;1137:46236:37;574:10:59;;;-1:-1:-1;;;574:10:59;;;;;;;1481:56;1137:46236:37;1481:56:59;;1137:46236:37;1481:56:59;;;;;;1137:46236:37;1481:56:59;;;:::i;:::-;;;1137:46236:37;;;;;;-1:-1:-1;;;;;;1137:46236:37;;;;;;1481:56:59;;;;1137:46236:37;;;;1481:56:59;;;-1:-1:-1;1481:56:59;;1137:46236:37;;;;;;;;;;;;;;;;-1:-1:-1;1137:46236:37;;;1410:484:59;4541:27:33;;4590:5;4541:27;;:::i;:::-;4590:5;;;;:::i;:::-;-1:-1:-1;;;;;1137:46236:37;;;;;1732:46:59;1137:46236:37;;974:926:59:o;1137:46236:37:-;;;-1:-1:-1;;;1137:46236:37;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;;;;2243:1373:33;1137:46236:37;;2574:2:33;2554:22;;2574:2;;2837:180;;3037:25;2837:180;;;;;;;;;;;;;;-1:-1:-1;2837:180:33;3037:25;;:::i;:::-;3030:32;;:::o;2550:1060::-;3103:2;3083:22;3103:2;;;3346:123;;;;;;;1137:46236:37;;;;;5167:2:33;1137:46236:37;;;;;;;5187:25:33;;-1:-1:-1;;;;;5038:80:33;;1137:46236:37;;;5187:25:33;:::i;3079:531::-;3543:56;;3559:1;3543:56;3563:35;3543:56;:::o;548:631::-;1137:46236:37;;;;;;616:29:33;;;661:7;:::o;612:561::-;625:20;1137:46236:37;712:38:33;;1137:46236:37;;;;-1:-1:-1;;;766:34:33;;1137:46236:37;766:34:33;;;1137:46236:37;;;;;;;;;;;766:34:33;;;708:465;-1:-1:-1;830:35:33;821:44;;830:35;;1137:46236:37;;-1:-1:-1;;;881:41:33;;1137:46236:37;881:41:33;;;1137:46236:37;;;;;;;;;;;881:41:33;;;817:356;625:20;;952:30;943:39;;952:30;;1137:46236:37;;-1:-1:-1;;;998:44:33;;1137:46236:37;998:44:33;;;1137:46236:37;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;998:44:33;;;939:234;1072:30;1137:46236:37;1063:39:33;;1059:114;;548:631::o;1059:114::-;1137:46236:37;;-1:-1:-1;;;1118:44:33;;1137:46236:37;1072:30:33;1118:44;;1137:46236:37;;;;;;;;;;;-1:-1:-1;;;1137:46236:37;;;;1118:44:33;;;1137:46236:37;;;;625:20:33;1137:46236:37;;;;;625:20:33;1137:46236:37;5810:1603:33;;6860:66;6847:79;;6843:161;;1137:46236:37;;7017:7:33;7022:2;7017:7;;;:18;;;5810:1603;7013:100;;1137:46236:37;;-1:-1:-1;1137:46236:37;;;;;;;;;;;;;;;;;;;;7224:24:33;;;;;;;;;-1:-1:-1;7224:24:33;-1:-1:-1;;;;;1137:46236:37;;7262:20:33;7258:101;;7369:37;-1:-1:-1;5810:1603:33;:::o;7258:101::-;7298:50;-1:-1:-1;7298:50:33;7224:24;7298:50;:::o;7013:100::-;7051:51;;;;7067:1;7051:51;7071:30;7051:51;:::o;7017:18::-;7028:7;7033:2;7028:7;;;7017:18;;6843:161;6942:51;;;;6958:1;6942:51;6962:30;6942:51;:::o","linkReferences":{},"immutableReferences":{"7629":[{"start":17287,"length":32}],"9767":[{"start":6369,"length":32},{"start":6994,"length":32},{"start":8408,"length":32},{"start":9364,"length":32},{"start":10118,"length":32},{"start":10232,"length":32},{"start":10646,"length":32},{"start":12042,"length":32},{"start":16546,"length":32},{"start":17625,"length":32},{"start":18029,"length":32}],"9771":[{"start":3791,"length":32}],"9775":[{"start":6220,"length":32},{"start":6782,"length":32},{"start":8149,"length":32},{"start":9193,"length":32},{"start":9845,"length":32},{"start":10777,"length":32},{"start":12173,"length":32},{"start":16467,"length":32},{"start":17441,"length":32}]}},"methodIdentifiers":{"DELEGATION_APPROVAL_TYPEHASH()":"04a4f979","DOMAIN_TYPEHASH()":"20606b70","MAX_STAKER_OPT_OUT_WINDOW_BLOCKS()":"4fc40b61","MAX_WITHDRAWAL_DELAY_BLOCKS()":"ca661c04","STAKER_DELEGATION_TYPEHASH()":"43377382","beaconChainETHStrategy()":"9104c319","calculateCurrentStakerDelegationDigestHash(address,address,uint256)":"1bbce091","calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)":"0b9f487a","calculateStakerDelegationDigestHash(address,uint256,address,uint256)":"c94b5111","calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))":"597b36da","completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)":"60d7faed","completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])":"33404396","cumulativeWithdrawalsQueued(address)":"a1788484","decreaseDelegatedShares(address,address,uint256)":"132d4967","delegateTo(address,(bytes,uint256),bytes32)":"eea9064b","delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)":"7f548071","delegatedTo(address)":"65da1264","delegationApprover(address)":"3cdeb5e0","delegationApproverSaltIsSpent(address,bytes32)":"bb45fef2","domainSeparator()":"f698da25","eigenPodManager()":"4665bcda","getDelegatableShares(address)":"cf80873e","getOperatorShares(address,address[])":"90041347","getWithdrawalDelay(address[])":"0449ca39","increaseDelegatedShares(address,address,uint256)":"28a573ae","initialize(address,address,uint256,uint256,address[],uint256[])":"22bf40e4","isDelegated(address)":"3e28391d","isOperator(address)":"6d70f7ae","minWithdrawalDelayBlocks()":"c448feb8","modifyOperatorDetails((address,address,uint32))":"f16172b0","operatorDetails(address)":"c5e480db","operatorShares(address,address)":"778e55f3","owner()":"8da5cb5b","pause(uint256)":"136439dd","pauseAll()":"595c6a67","paused()":"5c975abb","paused(uint8)":"5ac86ab7","pauserRegistry()":"886f1195","pendingWithdrawals(bytes32)":"b7f06ebe","queueWithdrawals((address[],uint256[],address)[])":"0dd8dd02","registerAsOperator((address,address,uint32),string)":"0f589e59","renounceOwnership()":"715018a6","setMinWithdrawalDelayBlocks(uint256)":"635bbd10","setPauserRegistry(address)":"10d67a2f","setStrategyWithdrawalDelayBlocks(address[],uint256[])":"1522bf02","slasher()":"b1344271","stakerNonce(address)":"29c77d4f","stakerOptOutWindowBlocks(address)":"16928365","strategyManager()":"39b70e38","strategyWithdrawalDelayBlocks(address)":"c488375a","transferOwnership(address)":"f2fde38b","undelegate(address)":"da8be864","unpause(uint256)":"fabc1cbc","updateOperatorMetadataURI(string)":"99be81c8"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"_strategyManager\",\"type\":\"address\"},{\"internalType\":\"contract ISlasher\",\"name\":\"_slasher\",\"type\":\"address\"},{\"internalType\":\"contract IEigenPodManager\",\"name\":\"_eigenPodManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"MinWithdrawalDelayBlocksSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"__deprecated_earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"newOperatorDetails\",\"type\":\"tuple\"}],\"name\":\"OperatorDetailsModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"OperatorMetadataURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"__deprecated_earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"operatorDetails\",\"type\":\"tuple\"}],\"name\":\"OperatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"OperatorSharesDecreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"OperatorSharesIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"pauserRegistry\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"PauserRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerDelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerForceUndelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"StakerUndelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"StrategyWithdrawalDelayBlocksSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"WithdrawalCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"indexed\":false,\"internalType\":\"struct IDelegationManager.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"WithdrawalQueued\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_APPROVAL_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_STAKER_OPT_OUT_WINDOW_BLOCKS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WITHDRAWAL_DELAY_BLOCKS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKER_DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beaconChainETHStrategy\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateCurrentStakerDelegationDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_delegationApprover\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateDelegationApprovalDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stakerNonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateStakerDelegationDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManager.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"}],\"name\":\"calculateWithdrawalRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManager.Withdrawal\",\"name\":\"withdrawal\",\"type\":\"tuple\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"middlewareTimesIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAsTokens\",\"type\":\"bool\"}],\"name\":\"completeQueuedWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IDelegationManager.Withdrawal[]\",\"name\":\"withdrawals\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20[][]\",\"name\":\"tokens\",\"type\":\"address[][]\"},{\"internalType\":\"uint256[]\",\"name\":\"middlewareTimesIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"receiveAsTokens\",\"type\":\"bool[]\"}],\"name\":\"completeQueuedWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cumulativeWithdrawalsQueued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"decreaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"approverSignatureAndExpiry\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"}],\"name\":\"delegateTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"stakerSignatureAndExpiry\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithExpiry\",\"name\":\"approverSignatureAndExpiry\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"approverSalt\",\"type\":\"bytes32\"}],\"name\":\"delegateToBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegatedTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"delegationApprover\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"delegationApproverSaltIsSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eigenPodManager\",\"outputs\":[{\"internalType\":\"contract IEigenPodManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getDelegatableShares\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getOperatorShares\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getWithdrawalDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"increaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minWithdrawalDelayBlocks\",\"type\":\"uint256\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"_strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_withdrawalDelayBlocks\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"isDelegated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minWithdrawalDelayBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"__deprecated_earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"newOperatorDetails\",\"type\":\"tuple\"}],\"name\":\"modifyOperatorDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"operatorDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"__deprecated_earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"operatorShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"}],\"internalType\":\"struct IDelegationManager.QueuedWithdrawalParams[]\",\"name\":\"queuedWithdrawalParams\",\"type\":\"tuple[]\"}],\"name\":\"queueWithdrawals\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"__deprecated_earningsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegationApprover\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"stakerOptOutWindowBlocks\",\"type\":\"uint32\"}],\"internalType\":\"struct IDelegationManager.OperatorDetails\",\"name\":\"registeringOperatorDetails\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"registerAsOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinWithdrawalDelayBlocks\",\"type\":\"uint256\"}],\"name\":\"setMinWithdrawalDelayBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"newPauserRegistry\",\"type\":\"address\"}],\"name\":\"setPauserRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"withdrawalDelayBlocks\",\"type\":\"uint256[]\"}],\"name\":\"setStrategyWithdrawalDelayBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slasher\",\"outputs\":[{\"internalType\":\"contract ISlasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakerNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"stakerOptOutWindowBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyManager\",\"outputs\":[{\"internalType\":\"contract IStrategyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"strategyWithdrawalDelayBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"undelegate\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"withdrawalRoots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateOperatorMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"OperatorMetadataURIUpdated(address,string)\":{\"details\":\"Note that these strings are *never stored in storage* and are instead purely emitted in events for off-chain indexing\"},\"WithdrawalQueued(bytes32,(address,address,address,uint256,uint32,address[],uint256[]))\":{\"params\":{\"withdrawal\":\"Is the withdrawal itself.\",\"withdrawalRoot\":\"Is the hash of the `withdrawal`.\"}}},\"kind\":\"dev\",\"methods\":{\"calculateCurrentStakerDelegationDigestHash(address,address,uint256)\":{\"params\":{\"expiry\":\"The desired expiry time of the staker's signature\",\"operator\":\"The operator who is being delegated to\",\"staker\":\"The signing staker\"}},\"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\":{\"params\":{\"_delegationApprover\":\"the operator's `delegationApprover` who will be signing the delegationHash (in general)\",\"approverSalt\":\"A unique and single use value associated with the approver signature.\",\"expiry\":\"Time after which the approver's signature becomes invalid\",\"operator\":\"The account receiving delegated stake\",\"staker\":\"The account delegating their stake\"}},\"calculateStakerDelegationDigestHash(address,uint256,address,uint256)\":{\"params\":{\"_stakerNonce\":\"The nonce of the staker. In practice we use the staker's current nonce, stored at `stakerNonce[staker]`\",\"expiry\":\"The desired expiry time of the staker's signature\",\"operator\":\"The operator who is being delegated to\",\"staker\":\"The signing staker\"}},\"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)\":{\"details\":\"middlewareTimesIndex is unused, but will be used in the Slasher eventuallybeaconChainETHStrategy shares are non-transferrable, so if `receiveAsTokens = false` and `withdrawal.withdrawer != withdrawal.staker`, note that any beaconChainETHStrategy shares in the `withdrawal` will be _returned to the staker_, rather than transferred to the withdrawer, unlike shares in any other strategies, which will be transferred to the withdrawer.\",\"params\":{\"middlewareTimesIndex\":\"is the index in the operator that the staker who triggered the withdrawal was delegated to's middleware times array\",\"receiveAsTokens\":\"If true, the shares specified in the withdrawal will be withdrawn from the specified strategies themselves and sent to the caller, through calls to `withdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies will simply be transferred to the caller directly.\",\"tokens\":\"Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `withdrawal.strategies` array. This input can be provided with zero length if `receiveAsTokens` is set to 'false' (since in that case, this input will be unused)\",\"withdrawal\":\"The Withdrawal to complete.\"}},\"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])\":{\"details\":\"See `completeQueuedWithdrawal` for relevant dev tags\",\"params\":{\"middlewareTimesIndexes\":\"One index to reference per Withdrawal. See `completeQueuedWithdrawal` for the usage of a single index.\",\"receiveAsTokens\":\"Whether or not to complete each withdrawal as tokens. See `completeQueuedWithdrawal` for the usage of a single boolean.\",\"tokens\":\"Array of tokens for each Withdrawal. See `completeQueuedWithdrawal` for the usage of a single array.\",\"withdrawals\":\"The Withdrawals to complete.\"}},\"constructor\":{\"details\":\"Initializes the immutable addresses of the strategy mananger and slasher.\"},\"decreaseDelegatedShares(address,address,uint256)\":{\"details\":\"*If the staker is actively delegated*, then decreases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.\",\"params\":{\"shares\":\"The number of shares to decrease.\",\"staker\":\"The address to increase the delegated shares for their operator.\",\"strategy\":\"The strategy in which to decrease the delegated shares.\"}},\"delegateTo(address,(bytes,uint256),bytes32)\":{\"details\":\"The approverSignatureAndExpiry is used in the event that:          1) the operator's `delegationApprover` address is set to a non-zero value.                  AND          2) neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator             or their delegationApprover is the `msg.sender`, then approval is assumed.In the event that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs\",\"params\":{\"approverSalt\":\"A unique single use value tied to an individual signature.\",\"approverSignatureAndExpiry\":\"Verifies the operator approves of this delegation\",\"operator\":\"The account (`msg.sender`) is delegating its assets to for use in serving applications built on EigenLayer.\"}},\"delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)\":{\"details\":\"If `staker` is an EOA, then `stakerSignature` is verified to be a valid ECDSA stakerSignature from `staker`, indicating their intention for this action.If `staker` is a contract, then `stakerSignature` will be checked according to EIP-1271.the operator's `delegationApprover` address is set to a non-zero value.neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator or their delegationApprover is the `msg.sender`, then approval is assumed.This function will revert if the current `block.timestamp` is equal to or exceeds the expiryIn the case that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs\",\"params\":{\"approverSalt\":\"Is a salt used to help guarantee signature uniqueness. Each salt can only be used once by a given approver.\",\"approverSignatureAndExpiry\":\"is a parameter that will be used for verifying that the operator approves of this delegation action in the event that:\",\"operator\":\"The account (`staker`) is delegating its assets to for use in serving applications built on EigenLayer.\",\"staker\":\"The account delegating stake to an `operator` account\",\"stakerSignatureAndExpiry\":\"Signed data from the staker authorizing delegating stake to an operator\"}},\"domainSeparator()\":{\"details\":\"The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712.\"},\"getDelegatableShares(address)\":{\"details\":\"Returns two empty arrays in the case that the Staker has no actively-delegateable shares.\"},\"getWithdrawalDelay(address[])\":{\"params\":{\"strategies\":\"The strategies to check withdrawal delays for\"}},\"increaseDelegatedShares(address,address,uint256)\":{\"details\":\"*If the staker is actively delegated*, then increases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.\",\"params\":{\"shares\":\"The number of shares to increase.\",\"staker\":\"The address to increase the delegated shares for their operator.\",\"strategy\":\"The strategy in which to increase the delegated shares.\"}},\"initialize(address,address,uint256,uint256,address[],uint256[])\":{\"details\":\"Initializes the addresses of the initial owner, pauser registry, and paused status. minWithdrawalDelayBlocks is set only once here\"},\"modifyOperatorDetails((address,address,uint32))\":{\"details\":\"The caller must have previously registered as an operator in EigenLayer.\",\"params\":{\"newOperatorDetails\":\"is the updated `OperatorDetails` for the operator, to replace their current OperatorDetails`.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"registerAsOperator((address,address,uint32),string)\":{\"details\":\"Once an operator is registered, they cannot 'deregister' as an operator, and they will forever be considered \\\"delegated to themself\\\".This function will revert if the caller is already delegated to an operator.Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event\",\"params\":{\"metadataURI\":\"is a URI for the operator's metadata, i.e. a link providing more details on the operator.\",\"registeringOperatorDetails\":\"is the `OperatorDetails` for the operator.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setMinWithdrawalDelayBlocks(uint256)\":{\"params\":{\"newMinWithdrawalDelayBlocks\":\"new value of `minWithdrawalDelayBlocks`.\"}},\"setStrategyWithdrawalDelayBlocks(address[],uint256[])\":{\"params\":{\"strategies\":\"The strategies to set the minimum withdrawal delay blocks for\",\"withdrawalDelayBlocks\":\"The minimum withdrawal delay blocks to set for each strategy\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"updateOperatorMetadataURI(string)\":{\"params\":{\"metadataURI\":\"The URI for metadata associated with an operator\"}}},\"title\":\"DelegationManager\",\"version\":1},\"userdoc\":{\"events\":{\"MinWithdrawalDelayBlocksSet(uint256,uint256)\":{\"notice\":\"Emitted when the `minWithdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`.\"},\"OperatorDetailsModified(address,(address,address,uint32))\":{\"notice\":\"Emitted when an operator updates their OperatorDetails to @param newOperatorDetails\"},\"OperatorMetadataURIUpdated(address,string)\":{\"notice\":\"Emitted when @param operator indicates that they are updating their MetadataURI string\"},\"OperatorSharesDecreased(address,address,address,uint256)\":{\"notice\":\"Emitted whenever an operator's shares are decreased for a given strategy. Note that shares is the delta in the operator's shares.\"},\"OperatorSharesIncreased(address,address,address,uint256)\":{\"notice\":\"Emitted whenever an operator's shares are increased for a given strategy. Note that shares is the delta in the operator's shares.\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"PauserRegistrySet(address,address)\":{\"notice\":\"Emitted when the `pauserRegistry` is set to `newPauserRegistry`.\"},\"StakerDelegated(address,address)\":{\"notice\":\"Emitted when @param staker delegates to @param operator.\"},\"StakerForceUndelegated(address,address)\":{\"notice\":\"Emitted when @param staker is undelegated via a call not originating from the staker themself\"},\"StakerUndelegated(address,address)\":{\"notice\":\"Emitted when @param staker undelegates from @param operator.\"},\"StrategyWithdrawalDelayBlocksSet(address,uint256,uint256)\":{\"notice\":\"Emitted when the `strategyWithdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"},\"WithdrawalCompleted(bytes32)\":{\"notice\":\"Emitted when a queued withdrawal is completed\"},\"WithdrawalQueued(bytes32,(address,address,address,uint256,uint32,address[],uint256[]))\":{\"notice\":\"Emitted when a new withdrawal is queued.\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_APPROVAL_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the `DelegationApproval` struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"STAKER_DELEGATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the `StakerDelegation` struct used by the contract\"},\"beaconChainETHStrategy()\":{\"notice\":\"Canonical, virtual beacon chain ETH strategy\"},\"calculateCurrentStakerDelegationDigestHash(address,address,uint256)\":{\"notice\":\"Calculates the digestHash for a `staker` to sign to delegate to an `operator`\"},\"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)\":{\"notice\":\"Calculates the digest hash to be signed by the operator's delegationApprove and used in the `delegateTo` and `delegateToBySignature` functions.\"},\"calculateStakerDelegationDigestHash(address,uint256,address,uint256)\":{\"notice\":\"Calculates the digest hash to be signed and used in the `delegateToBySignature` function\"},\"calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))\":{\"notice\":\"Returns the keccak256 hash of `withdrawal`.\"},\"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)\":{\"notice\":\"Used to complete the specified `withdrawal`. The caller must match `withdrawal.withdrawer`\"},\"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])\":{\"notice\":\"Array-ified version of `completeQueuedWithdrawal`. Used to complete the specified `withdrawals`. The function caller must match `withdrawals[...].withdrawer`\"},\"cumulativeWithdrawalsQueued(address)\":{\"notice\":\"Mapping: staker => cumulative number of queued withdrawals they have ever initiated.\"},\"decreaseDelegatedShares(address,address,uint256)\":{\"notice\":\"Decreases a staker's delegated share balance in a strategy.\"},\"delegateTo(address,(bytes,uint256),bytes32)\":{\"notice\":\"Caller delegates their stake to an operator.\"},\"delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)\":{\"notice\":\"Caller delegates a staker's stake to an operator with valid signatures from both parties.\"},\"delegatedTo(address)\":{\"notice\":\"Mapping: staker => operator whom the staker is currently delegated to.\"},\"delegationApprover(address)\":{\"notice\":\"Returns the delegationApprover account for an operator\"},\"delegationApproverSaltIsSpent(address,bytes32)\":{\"notice\":\"Mapping: delegationApprover => 32-byte salt => whether or not the salt has already been used by the delegationApprover.\"},\"domainSeparator()\":{\"notice\":\"Getter function for the current EIP-712 domain separator for this contract.\"},\"eigenPodManager()\":{\"notice\":\"The EigenPodManager contract for EigenLayer\"},\"getDelegatableShares(address)\":{\"notice\":\"Returns the number of actively-delegatable shares a staker has across all strategies.\"},\"getOperatorShares(address,address[])\":{\"notice\":\"Given array of strategies, returns array of shares for the operator\"},\"getWithdrawalDelay(address[])\":{\"notice\":\"Given a list of strategies, return the minimum number of blocks that must pass to withdraw from all the inputted strategies. Return value is >= minWithdrawalDelayBlocks as this is the global min withdrawal delay.\"},\"increaseDelegatedShares(address,address,uint256)\":{\"notice\":\"Increases a staker's delegated share balance in a strategy.\"},\"isDelegated(address)\":{\"notice\":\"Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise.\"},\"isOperator(address)\":{\"notice\":\"Returns true is an operator has previously registered for delegation.\"},\"minWithdrawalDelayBlocks()\":{\"notice\":\"Global minimum withdrawal delay for all strategy withdrawals. In a prior Goerli release, we only had a global min withdrawal delay across all strategies. In addition, we now also configure withdrawal delays on a per-strategy basis. To withdraw from a strategy, max(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy]) number of blocks must have passed. See mapping strategyWithdrawalDelayBlocks below for per-strategy withdrawal delays.\"},\"modifyOperatorDetails((address,address,uint32))\":{\"notice\":\"Updates an operator's stored `OperatorDetails`.\"},\"operatorDetails(address)\":{\"notice\":\"Returns the OperatorDetails struct associated with an `operator`.\"},\"operatorShares(address,address)\":{\"notice\":\"returns the total number of shares in `strategy` that are delegated to `operator`.Mapping: operator => strategy => total number of shares in the strategy delegated to the operator.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"pendingWithdrawals(bytes32)\":{\"notice\":\"Mapping: hash of withdrawal inputs, aka 'withdrawalRoot' => whether the withdrawal is pending\"},\"queueWithdrawals((address[],uint256[],address)[])\":{\"notice\":\"Allows a staker to withdraw some shares. Withdrawn shares/strategies are immediately removed from the staker. If the staker is delegated, withdrawn shares/strategies are also removed from their operator. All withdrawn shares/strategies are placed in a queue and can be fully withdrawn after a delay.\"},\"registerAsOperator((address,address,uint32),string)\":{\"notice\":\"Registers the caller as an operator in EigenLayer.\"},\"setMinWithdrawalDelayBlocks(uint256)\":{\"notice\":\"Owner-only function for modifying the value of the `minWithdrawalDelayBlocks` variable.\"},\"setPauserRegistry(address)\":{\"notice\":\"Allows the unpauser to set a new pauser registry\"},\"setStrategyWithdrawalDelayBlocks(address[],uint256[])\":{\"notice\":\"Called by owner to set the minimum withdrawal delay blocks for each passed in strategy Note that the min number of blocks to complete a withdrawal of a strategy is MAX(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy])\"},\"slasher()\":{\"notice\":\"The Slasher contract for EigenLayer\"},\"stakerNonce(address)\":{\"notice\":\"Mapping: staker => number of signed messages (used in `delegateToBySignature`) from the staker that this contract has already checked.\"},\"stakerOptOutWindowBlocks(address)\":{\"notice\":\"Returns the stakerOptOutWindowBlocks for an operator\"},\"strategyManager()\":{\"notice\":\"The StrategyManager contract for EigenLayer\"},\"strategyWithdrawalDelayBlocks(address)\":{\"notice\":\"Minimum delay enforced by this contract per Strategy for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner, up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced).\"},\"undelegate(address)\":{\"notice\":\"Allows the staker, the staker's operator, or that operator's delegationApprover to undelegate a staker from their operator. Undelegation immediately removes ALL active shares/strategies from both the staker and operator, and places the shares and strategies in the withdrawal queue\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"updateOperatorMetadataURI(string)\":{\"notice\":\"Called by an operator to emit an `OperatorMetadataURIUpdated` event indicating the information has updated.\"}},\"notice\":\"Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceThis is the contract for delegation in EigenLayer. The main functionalities of this contract are - enabling anyone to register as an operator in EigenLayer - allowing operators to specify parameters related to stakers who delegate to them - enabling any staker to delegate its stake to the operator of its choice (a given staker can only delegate to a single operator at a time) - enabling a staker to undelegate its assets from the operator it is delegated to (performed as part of the withdrawal process, initiated through the StrategyManager)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/DelegationManager.sol\":\"DelegationManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/\",\":@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/\",\":@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":@openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f\",\"dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/DelegationManager.sol\":{\"keccak256\":\"0x323ea9ebba76c5295a7d5f309b6a60565499ab416b93168bbead10eec6ad579c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0a1a1ab46b23a86f738d0662934b10989b8a2a0d14701aabbc81655b35c16f03\",\"dweb:/ipfs/QmcVP6vyRwTzmmXyZnp1aEUuZ4wkCMFRdjCAGVtsnzWLJQ\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/DelegationManagerStorage.sol\":{\"keccak256\":\"0x15e864b36b2ff2e4734d70a6508c94baa5a4da85aaba2ec204992ef243513e74\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e2a5b5fea6ecd832cf061da610a1e2f3ac1c1423b6b23b3fcc738b1074c441f3\",\"dweb:/ipfs/QmPYPWv73T1oPvR2ruKkzBuNYMEN4mVrt1Q7bCxnCCM6na\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x5a7dd74fb8a9334aa50c497a58875159aec17e905a7daaf3c276936d5b691bd1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a25b8d80233016a4634b9217a0899f43f18bfb21abb046bee4403e9408296009\",\"dweb:/ipfs/QmUA3bTzddiHnPxBqYtovxvcVvCkNrAxPJ7xcskocxEq5P\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xdb3ff2be72047b89ead3fc98b52cdd514b243ed78cee7f6a48d672bc4cf0fd34\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d16a23a041559f6aaee6dc8342208beb3c3e98b1c23e46ab334243927f4ecc0b\",\"dweb:/ipfs/QmVbyRYgm6zHMFqmZXgsGhHAUxtmvyioc58VuMoJ9x8Eaj\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x37cf51dde7316da0b95f1870504f2c1e5ed5c90faf7efec17dae3ba3d36cba93\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://03c4775b648612314d81278095cf17ad4f15fb850307eaf81d986107d5f664fc\",\"dweb:/ipfs/QmW5vuanTbTFz1kWUUAPBWLu4NhjwrMuye2sT272rC2X7d\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x33a935182f77cfd508fc57ec8e45afc8dc3748e1e9b764d36bf90ae6466f257b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d3981b5bbf435cda04e2ed2f348f886ebf1500c18dd4bbf67b1f1bc0272e2d3f\",\"dweb:/ipfs/QmYHDzQx29ataM2ejRCXFcPxaPdxWqX8v7uwUAYoG9572w\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0xffafae142d5337a5c204519e8f82fe3a5fae137286ebf597fa50699cf12c2474\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b577a12f7788095b230fd069b36ba9b3cdb376a0b7c3d8ae71588e5bf0c2f574\",\"dweb:/ipfs/QmXd1cDzYpxecyFEwowLiBKKjzRHgV8cs1qvLwypdEbVYy\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b\",\"dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x7655919fae553e75ff196b31c9244079ff222e34ff43f36c41429ee826cfad9b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d5d35a784a9511b351826cb70b00d92c3d374474f256b01af05cd1acb1ce6c10\",\"dweb:/ipfs/QmZog3BrpLa213wj5qxVYMQv7jdrkf5AAufLCVaMZsL7Gs\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e\",\"dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0x9e1a2bb1406e2440a4dffe2e34c398a83884b35f6bbe4a25c590a3039f1c4e46\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3ef20115ce26ab5c143fb88a5c3d2520756b286398dc1761069b05e38b2991c9\",\"dweb:/ipfs/QmY8oJpcQzTwcGxEhQtrNYPzXrGVnnQs8c7Sv5uTuvUByF\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x0bb92e390e73d450282108dd84f1cf7922de6e1a7e810ad5351b8708785ba659\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b03baa849b9e0b17ce4f5e35905b73ec83429e464ec3dbe229574333261ea460\",\"dweb:/ipfs/Qmd1FviY3CbqBzpYoTxCeEpS2R53vT9MijZ6qv71S2QEzo\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/EIP1271SignatureUtils.sol\":{\"keccak256\":\"0xe92d584c47c5828e026a8082af3da38a853e3942c4da7deb705d6470a41afab3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1c436c578781fd7d3dffdb24e906819422819f5e9a71d39ee63166a3d5cb3373\",\"dweb:/ipfs/QmP7bJhYqLpwqk2Xq4tqDCUMi2nFAhxxW3Pz36ctE1sbdD\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0x098850d09b65bb7dbad5ea0513eacb77f2701e135d9727b3627e13f303b2ff41\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3519f5a415b99d196f3cecef3f48ea116f2f3a2b381efcc96a5d7eff6934c2f3\",\"dweb:/ipfs/QmbCcFWgmFjXeZrvfEFQ17AgEueW9wS17HhvjkxMi5x3H8\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x6e82a559dc583bf4b15867654e82f3aca9a862589209abac1c4356142a3b2211\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a1a4819b95c7da710e11efb279bd4b596139dc12c96c45a366d8e1893018eb1\",\"dweb:/ipfs/QmZBHPLKoYepZmA7AL9ECJFkbBhujSNvvc8pJmNC9MnRni\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0x53a08f01d778b91604dc1d27d4805fa99b9a2993f26e6079a1d8701699dc9f21\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8fd5dd22dcb1fb4f803843b920501679f252ccf100a06acbad7a22452cdc1173\",\"dweb:/ipfs/QmeyoJoTN3Gi7Q4Fk4y89UTDDnyPFmSbdu8N7Vyijwjx2s\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IStrategyManager","name":"_strategyManager","type":"address"},{"internalType":"contract ISlasher","name":"_slasher","type":"address"},{"internalType":"contract IEigenPodManager","name":"_eigenPodManager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint8","name":"version","type":"uint8","indexed":false}],"type":"event","name":"Initialized","anonymous":false},{"inputs":[{"internalType":"uint256","name":"previousValue","type":"uint256","indexed":false},{"internalType":"uint256","name":"newValue","type":"uint256","indexed":false}],"type":"event","name":"MinWithdrawalDelayBlocksSet","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"struct IDelegationManager.OperatorDetails","name":"newOperatorDetails","type":"tuple","components":[{"internalType":"address","name":"__deprecated_earningsReceiver","type":"address"},{"internalType":"address","name":"delegationApprover","type":"address"},{"internalType":"uint32","name":"stakerOptOutWindowBlocks","type":"uint32"}],"indexed":false}],"type":"event","name":"OperatorDetailsModified","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"string","name":"metadataURI","type":"string","indexed":false}],"type":"event","name":"OperatorMetadataURIUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"struct IDelegationManager.OperatorDetails","name":"operatorDetails","type":"tuple","components":[{"internalType":"address","name":"__deprecated_earningsReceiver","type":"address"},{"internalType":"address","name":"delegationApprover","type":"address"},{"internalType":"uint32","name":"stakerOptOutWindowBlocks","type":"uint32"}],"indexed":false}],"type":"event","name":"OperatorRegistered","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"address","name":"staker","type":"address","indexed":false},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false},{"internalType":"uint256","name":"shares","type":"uint256","indexed":false}],"type":"event","name":"OperatorSharesDecreased","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"address","name":"staker","type":"address","indexed":false},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false},{"internalType":"uint256","name":"shares","type":"uint256","indexed":false}],"type":"event","name":"OperatorSharesIncreased","anonymous":false},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"uint256","name":"newPausedStatus","type":"uint256","indexed":false}],"type":"event","name":"Paused","anonymous":false},{"inputs":[{"internalType":"contract IPauserRegistry","name":"pauserRegistry","type":"address","indexed":false},{"internalType":"contract IPauserRegistry","name":"newPauserRegistry","type":"address","indexed":false}],"type":"event","name":"PauserRegistrySet","anonymous":false},{"inputs":[{"internalType":"address","name":"staker","type":"address","indexed":true},{"internalType":"address","name":"operator","type":"address","indexed":true}],"type":"event","name":"StakerDelegated","anonymous":false},{"inputs":[{"internalType":"address","name":"staker","type":"address","indexed":true},{"internalType":"address","name":"operator","type":"address","indexed":true}],"type":"event","name":"StakerForceUndelegated","anonymous":false},{"inputs":[{"internalType":"address","name":"staker","type":"address","indexed":true},{"internalType":"address","name":"operator","type":"address","indexed":true}],"type":"event","name":"StakerUndelegated","anonymous":false},{"inputs":[{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false},{"internalType":"uint256","name":"previousValue","type":"uint256","indexed":false},{"internalType":"uint256","name":"newValue","type":"uint256","indexed":false}],"type":"event","name":"StrategyWithdrawalDelayBlocksSet","anonymous":false},{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"uint256","name":"newPausedStatus","type":"uint256","indexed":false}],"type":"event","name":"Unpaused","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"withdrawalRoot","type":"bytes32","indexed":false}],"type":"event","name":"WithdrawalCompleted","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"withdrawalRoot","type":"bytes32","indexed":false},{"internalType":"struct IDelegationManager.Withdrawal","name":"withdrawal","type":"tuple","components":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"delegatedTo","type":"address"},{"internalType":"address","name":"withdrawer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint32","name":"startBlock","type":"uint32"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint256[]","name":"shares","type":"uint256[]"}],"indexed":false}],"type":"event","name":"WithdrawalQueued","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"DELEGATION_APPROVAL_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"DOMAIN_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"MAX_STAKER_OPT_OUT_WINDOW_BLOCKS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"MAX_WITHDRAWAL_DELAY_BLOCKS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"STAKER_DELEGATION_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"beaconChainETHStrategy","outputs":[{"internalType":"contract IStrategy","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"stateMutability":"view","type":"function","name":"calculateCurrentStakerDelegationDigestHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"_delegationApprover","type":"address"},{"internalType":"bytes32","name":"approverSalt","type":"bytes32"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"stateMutability":"view","type":"function","name":"calculateDelegationApprovalDigestHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"uint256","name":"_stakerNonce","type":"uint256"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"stateMutability":"view","type":"function","name":"calculateStakerDelegationDigestHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct IDelegationManager.Withdrawal","name":"withdrawal","type":"tuple","components":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"delegatedTo","type":"address"},{"internalType":"address","name":"withdrawer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint32","name":"startBlock","type":"uint32"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint256[]","name":"shares","type":"uint256[]"}]}],"stateMutability":"pure","type":"function","name":"calculateWithdrawalRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct IDelegationManager.Withdrawal","name":"withdrawal","type":"tuple","components":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"delegatedTo","type":"address"},{"internalType":"address","name":"withdrawer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint32","name":"startBlock","type":"uint32"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint256[]","name":"shares","type":"uint256[]"}]},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256","name":"middlewareTimesIndex","type":"uint256"},{"internalType":"bool","name":"receiveAsTokens","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"completeQueuedWithdrawal"},{"inputs":[{"internalType":"struct IDelegationManager.Withdrawal[]","name":"withdrawals","type":"tuple[]","components":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"delegatedTo","type":"address"},{"internalType":"address","name":"withdrawer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint32","name":"startBlock","type":"uint32"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint256[]","name":"shares","type":"uint256[]"}]},{"internalType":"contract IERC20[][]","name":"tokens","type":"address[][]"},{"internalType":"uint256[]","name":"middlewareTimesIndexes","type":"uint256[]"},{"internalType":"bool[]","name":"receiveAsTokens","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"completeQueuedWithdrawals"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"cumulativeWithdrawalsQueued","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"decreaseDelegatedShares"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"struct ISignatureUtils.SignatureWithExpiry","name":"approverSignatureAndExpiry","type":"tuple","components":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint256","name":"expiry","type":"uint256"}]},{"internalType":"bytes32","name":"approverSalt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"delegateTo"},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"struct ISignatureUtils.SignatureWithExpiry","name":"stakerSignatureAndExpiry","type":"tuple","components":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint256","name":"expiry","type":"uint256"}]},{"internalType":"struct ISignatureUtils.SignatureWithExpiry","name":"approverSignatureAndExpiry","type":"tuple","components":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint256","name":"expiry","type":"uint256"}]},{"internalType":"bytes32","name":"approverSalt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"delegateToBySignature"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"delegatedTo","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"delegationApprover","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"delegationApproverSaltIsSpent","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"domainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"eigenPodManager","outputs":[{"internalType":"contract IEigenPodManager","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"stateMutability":"view","type":"function","name":"getDelegatableShares","outputs":[{"internalType":"contract IStrategy[]","name":"","type":"address[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"}],"stateMutability":"view","type":"function","name":"getOperatorShares","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"}],"stateMutability":"view","type":"function","name":"getWithdrawalDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"staker","type":"address"},{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"increaseDelegatedShares"},{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"contract IPauserRegistry","name":"_pauserRegistry","type":"address"},{"internalType":"uint256","name":"initialPausedStatus","type":"uint256"},{"internalType":"uint256","name":"_minWithdrawalDelayBlocks","type":"uint256"},{"internalType":"contract IStrategy[]","name":"_strategies","type":"address[]"},{"internalType":"uint256[]","name":"_withdrawalDelayBlocks","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"stateMutability":"view","type":"function","name":"isDelegated","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"isOperator","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"minWithdrawalDelayBlocks","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"struct IDelegationManager.OperatorDetails","name":"newOperatorDetails","type":"tuple","components":[{"internalType":"address","name":"__deprecated_earningsReceiver","type":"address"},{"internalType":"address","name":"delegationApprover","type":"address"},{"internalType":"uint32","name":"stakerOptOutWindowBlocks","type":"uint32"}]}],"stateMutability":"nonpayable","type":"function","name":"modifyOperatorDetails"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"operatorDetails","outputs":[{"internalType":"struct IDelegationManager.OperatorDetails","name":"","type":"tuple","components":[{"internalType":"address","name":"__deprecated_earningsReceiver","type":"address"},{"internalType":"address","name":"delegationApprover","type":"address"},{"internalType":"uint32","name":"stakerOptOutWindowBlocks","type":"uint32"}]}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"contract IStrategy","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"operatorShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"newPausedStatus","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"pause"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseAll"},{"inputs":[{"internalType":"uint8","name":"index","type":"uint8"}],"stateMutability":"view","type":"function","name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"paused","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"pauserRegistry","outputs":[{"internalType":"contract IPauserRegistry","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"pendingWithdrawals","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"struct IDelegationManager.QueuedWithdrawalParams[]","name":"queuedWithdrawalParams","type":"tuple[]","components":[{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint256[]","name":"shares","type":"uint256[]"},{"internalType":"address","name":"withdrawer","type":"address"}]}],"stateMutability":"nonpayable","type":"function","name":"queueWithdrawals","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"struct IDelegationManager.OperatorDetails","name":"registeringOperatorDetails","type":"tuple","components":[{"internalType":"address","name":"__deprecated_earningsReceiver","type":"address"},{"internalType":"address","name":"delegationApprover","type":"address"},{"internalType":"uint32","name":"stakerOptOutWindowBlocks","type":"uint32"}]},{"internalType":"string","name":"metadataURI","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"registerAsOperator"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"uint256","name":"newMinWithdrawalDelayBlocks","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setMinWithdrawalDelayBlocks"},{"inputs":[{"internalType":"contract IPauserRegistry","name":"newPauserRegistry","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setPauserRegistry"},{"inputs":[{"internalType":"contract IStrategy[]","name":"strategies","type":"address[]"},{"internalType":"uint256[]","name":"withdrawalDelayBlocks","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"setStrategyWithdrawalDelayBlocks"},{"inputs":[],"stateMutability":"view","type":"function","name":"slasher","outputs":[{"internalType":"contract ISlasher","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"stakerNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"stakerOptOutWindowBlocks","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"strategyManager","outputs":[{"internalType":"contract IStrategyManager","name":"","type":"address"}]},{"inputs":[{"internalType":"contract IStrategy","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"strategyWithdrawalDelayBlocks","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"undelegate","outputs":[{"internalType":"bytes32[]","name":"withdrawalRoots","type":"bytes32[]"}]},{"inputs":[{"internalType":"uint256","name":"newPausedStatus","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"unpause"},{"inputs":[{"internalType":"string","name":"metadataURI","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"updateOperatorMetadataURI"}],"devdoc":{"kind":"dev","methods":{"calculateCurrentStakerDelegationDigestHash(address,address,uint256)":{"params":{"expiry":"The desired expiry time of the staker's signature","operator":"The operator who is being delegated to","staker":"The signing staker"}},"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)":{"params":{"_delegationApprover":"the operator's `delegationApprover` who will be signing the delegationHash (in general)","approverSalt":"A unique and single use value associated with the approver signature.","expiry":"Time after which the approver's signature becomes invalid","operator":"The account receiving delegated stake","staker":"The account delegating their stake"}},"calculateStakerDelegationDigestHash(address,uint256,address,uint256)":{"params":{"_stakerNonce":"The nonce of the staker. In practice we use the staker's current nonce, stored at `stakerNonce[staker]`","expiry":"The desired expiry time of the staker's signature","operator":"The operator who is being delegated to","staker":"The signing staker"}},"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)":{"details":"middlewareTimesIndex is unused, but will be used in the Slasher eventuallybeaconChainETHStrategy shares are non-transferrable, so if `receiveAsTokens = false` and `withdrawal.withdrawer != withdrawal.staker`, note that any beaconChainETHStrategy shares in the `withdrawal` will be _returned to the staker_, rather than transferred to the withdrawer, unlike shares in any other strategies, which will be transferred to the withdrawer.","params":{"middlewareTimesIndex":"is the index in the operator that the staker who triggered the withdrawal was delegated to's middleware times array","receiveAsTokens":"If true, the shares specified in the withdrawal will be withdrawn from the specified strategies themselves and sent to the caller, through calls to `withdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies will simply be transferred to the caller directly.","tokens":"Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `withdrawal.strategies` array. This input can be provided with zero length if `receiveAsTokens` is set to 'false' (since in that case, this input will be unused)","withdrawal":"The Withdrawal to complete."}},"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])":{"details":"See `completeQueuedWithdrawal` for relevant dev tags","params":{"middlewareTimesIndexes":"One index to reference per Withdrawal. See `completeQueuedWithdrawal` for the usage of a single index.","receiveAsTokens":"Whether or not to complete each withdrawal as tokens. See `completeQueuedWithdrawal` for the usage of a single boolean.","tokens":"Array of tokens for each Withdrawal. See `completeQueuedWithdrawal` for the usage of a single array.","withdrawals":"The Withdrawals to complete."}},"constructor":{"details":"Initializes the immutable addresses of the strategy mananger and slasher."},"decreaseDelegatedShares(address,address,uint256)":{"details":"*If the staker is actively delegated*, then decreases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.","params":{"shares":"The number of shares to decrease.","staker":"The address to increase the delegated shares for their operator.","strategy":"The strategy in which to decrease the delegated shares."}},"delegateTo(address,(bytes,uint256),bytes32)":{"details":"The approverSignatureAndExpiry is used in the event that:          1) the operator's `delegationApprover` address is set to a non-zero value.                  AND          2) neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator             or their delegationApprover is the `msg.sender`, then approval is assumed.In the event that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs","params":{"approverSalt":"A unique single use value tied to an individual signature.","approverSignatureAndExpiry":"Verifies the operator approves of this delegation","operator":"The account (`msg.sender`) is delegating its assets to for use in serving applications built on EigenLayer."}},"delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)":{"details":"If `staker` is an EOA, then `stakerSignature` is verified to be a valid ECDSA stakerSignature from `staker`, indicating their intention for this action.If `staker` is a contract, then `stakerSignature` will be checked according to EIP-1271.the operator's `delegationApprover` address is set to a non-zero value.neither the operator nor their `delegationApprover` is the `msg.sender`, since in the event that the operator or their delegationApprover is the `msg.sender`, then approval is assumed.This function will revert if the current `block.timestamp` is equal to or exceeds the expiryIn the case that `approverSignatureAndExpiry` is not checked, its content is ignored entirely; it's recommended to use an empty input in this case to save on complexity + gas costs","params":{"approverSalt":"Is a salt used to help guarantee signature uniqueness. Each salt can only be used once by a given approver.","approverSignatureAndExpiry":"is a parameter that will be used for verifying that the operator approves of this delegation action in the event that:","operator":"The account (`staker`) is delegating its assets to for use in serving applications built on EigenLayer.","staker":"The account delegating stake to an `operator` account","stakerSignatureAndExpiry":"Signed data from the staker authorizing delegating stake to an operator"}},"domainSeparator()":{"details":"The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712."},"getDelegatableShares(address)":{"details":"Returns two empty arrays in the case that the Staker has no actively-delegateable shares."},"getWithdrawalDelay(address[])":{"params":{"strategies":"The strategies to check withdrawal delays for"}},"increaseDelegatedShares(address,address,uint256)":{"details":"*If the staker is actively delegated*, then increases the `staker`'s delegated shares in `strategy` by `shares`. Otherwise does nothing.Callable only by the StrategyManager or EigenPodManager.","params":{"shares":"The number of shares to increase.","staker":"The address to increase the delegated shares for their operator.","strategy":"The strategy in which to increase the delegated shares."}},"initialize(address,address,uint256,uint256,address[],uint256[])":{"details":"Initializes the addresses of the initial owner, pauser registry, and paused status. minWithdrawalDelayBlocks is set only once here"},"modifyOperatorDetails((address,address,uint32))":{"details":"The caller must have previously registered as an operator in EigenLayer.","params":{"newOperatorDetails":"is the updated `OperatorDetails` for the operator, to replace their current OperatorDetails`."}},"owner()":{"details":"Returns the address of the current owner."},"pause(uint256)":{"details":"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.","params":{"newPausedStatus":"represents the new value for `_paused` to take, which means it may flip several bits at once."}},"registerAsOperator((address,address,uint32),string)":{"details":"Once an operator is registered, they cannot 'deregister' as an operator, and they will forever be considered \"delegated to themself\".This function will revert if the caller is already delegated to an operator.Note that the `metadataURI` is *never stored * and is only emitted in the `OperatorMetadataURIUpdated` event","params":{"metadataURI":"is a URI for the operator's metadata, i.e. a link providing more details on the operator.","registeringOperatorDetails":"is the `OperatorDetails` for the operator."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setMinWithdrawalDelayBlocks(uint256)":{"params":{"newMinWithdrawalDelayBlocks":"new value of `minWithdrawalDelayBlocks`."}},"setStrategyWithdrawalDelayBlocks(address[],uint256[])":{"params":{"strategies":"The strategies to set the minimum withdrawal delay blocks for","withdrawalDelayBlocks":"The minimum withdrawal delay blocks to set for each strategy"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unpause(uint256)":{"details":"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.","params":{"newPausedStatus":"represents the new value for `_paused` to take, which means it may flip several bits at once."}},"updateOperatorMetadataURI(string)":{"params":{"metadataURI":"The URI for metadata associated with an operator"}}},"version":1},"userdoc":{"kind":"user","methods":{"DELEGATION_APPROVAL_TYPEHASH()":{"notice":"The EIP-712 typehash for the `DelegationApproval` struct used by the contract"},"DOMAIN_TYPEHASH()":{"notice":"The EIP-712 typehash for the contract's domain"},"STAKER_DELEGATION_TYPEHASH()":{"notice":"The EIP-712 typehash for the `StakerDelegation` struct used by the contract"},"beaconChainETHStrategy()":{"notice":"Canonical, virtual beacon chain ETH strategy"},"calculateCurrentStakerDelegationDigestHash(address,address,uint256)":{"notice":"Calculates the digestHash for a `staker` to sign to delegate to an `operator`"},"calculateDelegationApprovalDigestHash(address,address,address,bytes32,uint256)":{"notice":"Calculates the digest hash to be signed by the operator's delegationApprove and used in the `delegateTo` and `delegateToBySignature` functions."},"calculateStakerDelegationDigestHash(address,uint256,address,uint256)":{"notice":"Calculates the digest hash to be signed and used in the `delegateToBySignature` function"},"calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[]))":{"notice":"Returns the keccak256 hash of `withdrawal`."},"completeQueuedWithdrawal((address,address,address,uint256,uint32,address[],uint256[]),address[],uint256,bool)":{"notice":"Used to complete the specified `withdrawal`. The caller must match `withdrawal.withdrawer`"},"completeQueuedWithdrawals((address,address,address,uint256,uint32,address[],uint256[])[],address[][],uint256[],bool[])":{"notice":"Array-ified version of `completeQueuedWithdrawal`. Used to complete the specified `withdrawals`. The function caller must match `withdrawals[...].withdrawer`"},"cumulativeWithdrawalsQueued(address)":{"notice":"Mapping: staker => cumulative number of queued withdrawals they have ever initiated."},"decreaseDelegatedShares(address,address,uint256)":{"notice":"Decreases a staker's delegated share balance in a strategy."},"delegateTo(address,(bytes,uint256),bytes32)":{"notice":"Caller delegates their stake to an operator."},"delegateToBySignature(address,address,(bytes,uint256),(bytes,uint256),bytes32)":{"notice":"Caller delegates a staker's stake to an operator with valid signatures from both parties."},"delegatedTo(address)":{"notice":"Mapping: staker => operator whom the staker is currently delegated to."},"delegationApprover(address)":{"notice":"Returns the delegationApprover account for an operator"},"delegationApproverSaltIsSpent(address,bytes32)":{"notice":"Mapping: delegationApprover => 32-byte salt => whether or not the salt has already been used by the delegationApprover."},"domainSeparator()":{"notice":"Getter function for the current EIP-712 domain separator for this contract."},"eigenPodManager()":{"notice":"The EigenPodManager contract for EigenLayer"},"getDelegatableShares(address)":{"notice":"Returns the number of actively-delegatable shares a staker has across all strategies."},"getOperatorShares(address,address[])":{"notice":"Given array of strategies, returns array of shares for the operator"},"getWithdrawalDelay(address[])":{"notice":"Given a list of strategies, return the minimum number of blocks that must pass to withdraw from all the inputted strategies. Return value is >= minWithdrawalDelayBlocks as this is the global min withdrawal delay."},"increaseDelegatedShares(address,address,uint256)":{"notice":"Increases a staker's delegated share balance in a strategy."},"isDelegated(address)":{"notice":"Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise."},"isOperator(address)":{"notice":"Returns true is an operator has previously registered for delegation."},"minWithdrawalDelayBlocks()":{"notice":"Global minimum withdrawal delay for all strategy withdrawals. In a prior Goerli release, we only had a global min withdrawal delay across all strategies. In addition, we now also configure withdrawal delays on a per-strategy basis. To withdraw from a strategy, max(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy]) number of blocks must have passed. See mapping strategyWithdrawalDelayBlocks below for per-strategy withdrawal delays."},"modifyOperatorDetails((address,address,uint32))":{"notice":"Updates an operator's stored `OperatorDetails`."},"operatorDetails(address)":{"notice":"Returns the OperatorDetails struct associated with an `operator`."},"operatorShares(address,address)":{"notice":"returns the total number of shares in `strategy` that are delegated to `operator`.Mapping: operator => strategy => total number of shares in the strategy delegated to the operator."},"pause(uint256)":{"notice":"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."},"pauseAll()":{"notice":"Alias for `pause(type(uint256).max)`."},"paused()":{"notice":"Returns the current paused status as a uint256."},"paused(uint8)":{"notice":"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"},"pauserRegistry()":{"notice":"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."},"pendingWithdrawals(bytes32)":{"notice":"Mapping: hash of withdrawal inputs, aka 'withdrawalRoot' => whether the withdrawal is pending"},"queueWithdrawals((address[],uint256[],address)[])":{"notice":"Allows a staker to withdraw some shares. Withdrawn shares/strategies are immediately removed from the staker. If the staker is delegated, withdrawn shares/strategies are also removed from their operator. All withdrawn shares/strategies are placed in a queue and can be fully withdrawn after a delay."},"registerAsOperator((address,address,uint32),string)":{"notice":"Registers the caller as an operator in EigenLayer."},"setMinWithdrawalDelayBlocks(uint256)":{"notice":"Owner-only function for modifying the value of the `minWithdrawalDelayBlocks` variable."},"setPauserRegistry(address)":{"notice":"Allows the unpauser to set a new pauser registry"},"setStrategyWithdrawalDelayBlocks(address[],uint256[])":{"notice":"Called by owner to set the minimum withdrawal delay blocks for each passed in strategy Note that the min number of blocks to complete a withdrawal of a strategy is MAX(minWithdrawalDelayBlocks, strategyWithdrawalDelayBlocks[strategy])"},"slasher()":{"notice":"The Slasher contract for EigenLayer"},"stakerNonce(address)":{"notice":"Mapping: staker => number of signed messages (used in `delegateToBySignature`) from the staker that this contract has already checked."},"stakerOptOutWindowBlocks(address)":{"notice":"Returns the stakerOptOutWindowBlocks for an operator"},"strategyManager()":{"notice":"The StrategyManager contract for EigenLayer"},"strategyWithdrawalDelayBlocks(address)":{"notice":"Minimum delay enforced by this contract per Strategy for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner, up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced)."},"undelegate(address)":{"notice":"Allows the staker, the staker's operator, or that operator's delegationApprover to undelegate a staker from their operator. Undelegation immediately removes ALL active shares/strategies from both the staker and operator, and places the shares and strategies in the withdrawal queue"},"unpause(uint256)":{"notice":"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."},"updateOperatorMetadataURI(string)":{"notice":"Called by an operator to emit an `OperatorMetadataURIUpdated` event indicating the information has updated."}},"version":1}},"settings":{"remappings":["@eigenlayer-middleware/=lib/eigenlayer-middleware/","@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/","@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/","@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/","@openzeppelin-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","@openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/","ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/DelegationManager.sol":"DelegationManager"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol":{"keccak256":"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888","urls":["bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a","dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol":{"keccak256":"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e","urls":["bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497","dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol":{"keccak256":"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167","urls":["bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11","dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol":{"keccak256":"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3","urls":["bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4","dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol":{"keccak256":"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149","urls":["bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c","dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol":{"keccak256":"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544","urls":["bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e","dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61","urls":["bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354","dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b","urls":["bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34","dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10","urls":["bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487","dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3","urls":["bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638","dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481","urls":["bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f","dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/DelegationManager.sol":{"keccak256":"0x323ea9ebba76c5295a7d5f309b6a60565499ab416b93168bbead10eec6ad579c","urls":["bzz-raw://0a1a1ab46b23a86f738d0662934b10989b8a2a0d14701aabbc81655b35c16f03","dweb:/ipfs/QmcVP6vyRwTzmmXyZnp1aEUuZ4wkCMFRdjCAGVtsnzWLJQ"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/core/DelegationManagerStorage.sol":{"keccak256":"0x15e864b36b2ff2e4734d70a6508c94baa5a4da85aaba2ec204992ef243513e74","urls":["bzz-raw://e2a5b5fea6ecd832cf061da610a1e2f3ac1c1423b6b23b3fcc738b1074c441f3","dweb:/ipfs/QmPYPWv73T1oPvR2ruKkzBuNYMEN4mVrt1Q7bCxnCCM6na"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol":{"keccak256":"0x5a7dd74fb8a9334aa50c497a58875159aec17e905a7daaf3c276936d5b691bd1","urls":["bzz-raw://a25b8d80233016a4634b9217a0899f43f18bfb21abb046bee4403e9408296009","dweb:/ipfs/QmUA3bTzddiHnPxBqYtovxvcVvCkNrAxPJ7xcskocxEq5P"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol":{"keccak256":"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c","urls":["bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91","dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"],"license":"CC0-1.0"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol":{"keccak256":"0xdb3ff2be72047b89ead3fc98b52cdd514b243ed78cee7f6a48d672bc4cf0fd34","urls":["bzz-raw://d16a23a041559f6aaee6dc8342208beb3c3e98b1c23e46ab334243927f4ecc0b","dweb:/ipfs/QmVbyRYgm6zHMFqmZXgsGhHAUxtmvyioc58VuMoJ9x8Eaj"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol":{"keccak256":"0x37cf51dde7316da0b95f1870504f2c1e5ed5c90faf7efec17dae3ba3d36cba93","urls":["bzz-raw://03c4775b648612314d81278095cf17ad4f15fb850307eaf81d986107d5f664fc","dweb:/ipfs/QmW5vuanTbTFz1kWUUAPBWLu4NhjwrMuye2sT272rC2X7d"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol":{"keccak256":"0x33a935182f77cfd508fc57ec8e45afc8dc3748e1e9b764d36bf90ae6466f257b","urls":["bzz-raw://d3981b5bbf435cda04e2ed2f348f886ebf1500c18dd4bbf67b1f1bc0272e2d3f","dweb:/ipfs/QmYHDzQx29ataM2ejRCXFcPxaPdxWqX8v7uwUAYoG9572w"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol":{"keccak256":"0xffafae142d5337a5c204519e8f82fe3a5fae137286ebf597fa50699cf12c2474","urls":["bzz-raw://b577a12f7788095b230fd069b36ba9b3cdb376a0b7c3d8ae71588e5bf0c2f574","dweb:/ipfs/QmXd1cDzYpxecyFEwowLiBKKjzRHgV8cs1qvLwypdEbVYy"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol":{"keccak256":"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4","urls":["bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b","dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol":{"keccak256":"0x7655919fae553e75ff196b31c9244079ff222e34ff43f36c41429ee826cfad9b","urls":["bzz-raw://d5d35a784a9511b351826cb70b00d92c3d374474f256b01af05cd1acb1ce6c10","dweb:/ipfs/QmZog3BrpLa213wj5qxVYMQv7jdrkf5AAufLCVaMZsL7Gs"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol":{"keccak256":"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9","urls":["bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e","dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol":{"keccak256":"0x9e1a2bb1406e2440a4dffe2e34c398a83884b35f6bbe4a25c590a3039f1c4e46","urls":["bzz-raw://3ef20115ce26ab5c143fb88a5c3d2520756b286398dc1761069b05e38b2991c9","dweb:/ipfs/QmY8oJpcQzTwcGxEhQtrNYPzXrGVnnQs8c7Sv5uTuvUByF"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol":{"keccak256":"0x0bb92e390e73d450282108dd84f1cf7922de6e1a7e810ad5351b8708785ba659","urls":["bzz-raw://b03baa849b9e0b17ce4f5e35905b73ec83429e464ec3dbe229574333261ea460","dweb:/ipfs/Qmd1FviY3CbqBzpYoTxCeEpS2R53vT9MijZ6qv71S2QEzo"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/EIP1271SignatureUtils.sol":{"keccak256":"0xe92d584c47c5828e026a8082af3da38a853e3942c4da7deb705d6470a41afab3","urls":["bzz-raw://1c436c578781fd7d3dffdb24e906819422819f5e9a71d39ee63166a3d5cb3373","dweb:/ipfs/QmP7bJhYqLpwqk2Xq4tqDCUMi2nFAhxxW3Pz36ctE1sbdD"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol":{"keccak256":"0x098850d09b65bb7dbad5ea0513eacb77f2701e135d9727b3627e13f303b2ff41","urls":["bzz-raw://3519f5a415b99d196f3cecef3f48ea116f2f3a2b381efcc96a5d7eff6934c2f3","dweb:/ipfs/QmbCcFWgmFjXeZrvfEFQ17AgEueW9wS17HhvjkxMi5x3H8"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol":{"keccak256":"0x6e82a559dc583bf4b15867654e82f3aca9a862589209abac1c4356142a3b2211","urls":["bzz-raw://8a1a4819b95c7da710e11efb279bd4b596139dc12c96c45a366d8e1893018eb1","dweb:/ipfs/QmZBHPLKoYepZmA7AL9ECJFkbBhujSNvvc8pJmNC9MnRni"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/permissions/Pausable.sol":{"keccak256":"0x53a08f01d778b91604dc1d27d4805fa99b9a2993f26e6079a1d8701699dc9f21","urls":["bzz-raw://8fd5dd22dcb1fb4f803843b920501679f252ccf100a06acbad7a22452cdc1173","dweb:/ipfs/QmeyoJoTN3Gi7Q4Fk4y89UTDDnyPFmSbdu8N7Vyijwjx2s"],"license":"BUSL-1.1"}},"version":1},"id":37}