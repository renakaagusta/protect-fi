{"abi":[{"type":"constructor","inputs":[{"name":"_registryCoordinator","type":"address","internalType":"contract IRegistryCoordinator"},{"name":"_delegationManager","type":"address","internalType":"contract IDelegationManager"}],"stateMutability":"nonpayable"},{"type":"function","name":"MAX_WEIGHING_FUNCTION_LENGTH","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"WEIGHTING_DIVISOR","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addStrategies","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"_strategyParams","type":"tuple[]","internalType":"struct IStakeRegistry.StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"applyDelta","inputs":[{"name":"value","type":"uint96","internalType":"uint96"},{"name":"delta","type":"int256","internalType":"int256"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"pure"},{"type":"function","name":"calculateDelta","inputs":[{"name":"prev","type":"uint96","internalType":"uint96"},{"name":"cur","type":"uint96","internalType":"uint96"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"delegation","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IDelegationManager"}],"stateMutability":"view"},{"type":"function","name":"deregisterOperator","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumbers","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getCurrentStake","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getCurrentTotalStake","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getLatestStakeUpdate","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IStakeRegistry.StakeUpdate","components":[{"name":"updateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"nextUpdateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"stake","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"getStakeAtBlockNumber","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"blockNumber","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getStakeAtBlockNumberAndIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"blockNumber","type":"uint32","internalType":"uint32"},{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getStakeHistory","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct IStakeRegistry.StakeUpdate[]","components":[{"name":"updateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"nextUpdateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"stake","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"getStakeHistoryLength","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getStakeUpdateAtIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IStakeRegistry.StakeUpdate","components":[{"name":"updateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"nextUpdateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"stake","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"getStakeUpdateIndexAtBlockNumber","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"blockNumber","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"getTotalStakeAtBlockNumberFromIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"blockNumber","type":"uint32","internalType":"uint32"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getTotalStakeHistoryLength","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getTotalStakeIndicesAtBlockNumber","inputs":[{"name":"blockNumber","type":"uint32","internalType":"uint32"},{"name":"quorumNumbers","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint32[]","internalType":"uint32[]"}],"stateMutability":"view"},{"type":"function","name":"getTotalStakeUpdateAtIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IStakeRegistry.StakeUpdate","components":[{"name":"updateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"nextUpdateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"stake","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"initializeQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"minimumStake","type":"uint96","internalType":"uint96"},{"name":"_strategyParams","type":"tuple[]","internalType":"struct IStakeRegistry.StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"minimumStakeForQuorum","inputs":[{"name":"","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"modifyStrategyParams","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"strategyIndices","type":"uint256[]","internalType":"uint256[]"},{"name":"newMultipliers","type":"uint96[]","internalType":"uint96[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordOperatorStakeUpdate","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"newStake","type":"uint96","internalType":"uint96"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"nonpayable"},{"type":"function","name":"recordTotalStakeUpdate","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"stakeDelta","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"registerOperator","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumbers","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint96[]","internalType":"uint96[]"},{"name":"","type":"uint96[]","internalType":"uint96[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"registryCoordinator","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"removeStrategies","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"indicesToRemove","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setMinimumStakeForQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"minimumStake","type":"uint96","internalType":"uint96"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"strategiesPerQuorum","inputs":[{"name":"","type":"uint8","internalType":"uint8"},{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"contract IStrategy"}],"stateMutability":"view"},{"type":"function","name":"strategyParams","inputs":[{"name":"","type":"uint8","internalType":"uint8"},{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"strategyParamsByIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IStakeRegistry.StrategyParams","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"strategyParamsLength","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"updateOperatorStake","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumbers","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint192","internalType":"uint192"}],"stateMutability":"nonpayable"},{"type":"function","name":"weightOfOperatorForQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"event","name":"MinimumStakeForQuorumUpdated","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"minimumStake","type":"uint96","indexed":false,"internalType":"uint96"}],"anonymous":false},{"type":"event","name":"OperatorStakeUpdate","inputs":[{"name":"operatorId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","indexed":false,"internalType":"uint8"},{"name":"stake","type":"uint96","indexed":false,"internalType":"uint96"}],"anonymous":false},{"type":"event","name":"QuorumCreated","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"StrategyAddedToQuorum","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"}],"anonymous":false},{"type":"event","name":"StrategyMultiplierUpdated","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"},{"name":"multiplier","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"StrategyRemovedFromQuorum","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"}],"anonymous":false}],"bytecode":{"object":"","sourceMap":"201:865:103:-:0;;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;2269:51:86;;2330:31;;201:865:103;;;;;;;;2330:31:86;201:865:103;;;;;;;;;;2269:51:86;201:865:103;;;;;;;;;;;;;;;;;-1:-1:-1;201:865:103;;;;;;-1:-1:-1;201:865:103;;;;;-1:-1:-1;201:865:103","linkReferences":{}},"deployedBytecode":{"object":"0x6080604052600436101561001257600080fd5b60003560e01c80630390a4d5146115295780630491b41c146114f557806308732461146114965780631f9b74e01461144257806320b662981461121157806325504777146110a55780632cd9594014610fa15780633ca5a5f514610f6d5780634bd26e0914610f2a5780635401ed2714610f025780635e5a677514610edf5780635f1f2d7714610bc057806366acfefe14610b295780636d14a98714610ae457806374454c6d14610aa85780637c17234714610a8d5780637f42982214610a5557806381c07502146107d85780639f3ccf651461077d578063ac6bfb031461072b578063adc804da146106c1578063b6904b781461067f578063bc9a40c314610644578063bd29b8cd146105c5578063c46778a514610588578063c601527d14610535578063c8294c56146104e8578063d5eccc0514610486578063dd9846b91461045f578063df5cf7231461041a578063f2be94ae146103a7578063f509551a14610373578063f851e19814610315578063fa28c627146102be5763ff694a771461019d57600080fd5b346102b95760603660031901126102b9576101b661154e565b6101be611716565b906044356001600160401b0381116102b9576101de90369060040161173f565b6101e6611f38565b6102008260ff166000526001602052604060002054151590565b6102565760ff9261021461021a92846123e7565b82612381565b1660005260016020526102546040600020604051906102388261167c565b63ffffffff4316825260006020830152600060408301526119d8565b005b60405162461bcd60e51b815260206004820152603560248201527f5374616b6552656769737472792e696e697469616c697a6551756f72756d3a2060448201527471756f72756d20616c72656164792065786973747360581b6064820152608490fd5b600080fd5b346102b95760206001600160601b036103076103016102dc366117e4565b908260009493945260028752604060002060ff821660005287526040600020936128f0565b9061156e565b505460401c16604051908152f35b346102b95760403660031901126102b957606061033b61033361155e565b60043561192f565b61037160405180926001600160601b036040809263ffffffff815116855263ffffffff6020820151166020860152015116910152565bf35b346102b95760403660031901126102b957602061039f610391611700565b610399611716565b90612a3f565b604051908152f35b346102b95760803660031901126102b95760206001600160601b0360406103cc61154e565b6103d461172c565b906044356000526002855260ff836000209116600052845261040f610408610402846000206064359061156e565b5061188b565b9182612789565b015116604051908152f35b346102b95760003660031901126102b9576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346102b9576020610478610472366117e4565b916128f0565b63ffffffff60405191168152f35b346102b95760203660031901126102b95760ff6104a161154e565b166000908152600160205260409020805460001981019081116104d2576103076001600160601b039160209361156e565b634e487b7160e01b600052601160045260246000fd5b346102b95760603660031901126102b95760206001600160601b03604061050d61154e565b60ff61051761172c565b91166000526001845261040f6104086104026044358560002061156e565b346102b95760403660031901126102b95761054e61154e565b602435906001600160401b0382116102b95761057161025492369060040161173f565b9061057a611e08565b61058381611b1c565b6123e7565b346102b95760203660031901126102b95760ff6105a361154e565b16600052600060205260206001600160601b0360406000205416604051908152f35b346102b95760403660031901126102b9576004356024356001600160401b0381116102b9576105f89036906004016115cc565b610603929192611f38565b60005b81811061060f57005b8061063d610620600193858861186b565b3560f81c61062d81611b1c565b6106378187611fea565b90611a42565b5001610606565b346102b95760403660031901126102b95761025461066061154e565b610668611716565b90610671611e08565b61067a81611b1c565b612381565b346102b95760403660031901126102b95760ff61069a61154e565b6106a26118d2565b50166000526001602052606061033b610402602435604060002061156e565b346102b95760403660031901126102b95760ff6106dc61154e565b6106e46118f1565b5016600052600360205260406107086107026024358360002061156e565b5061190a565b6001600160601b03602083519260018060a01b0381511684520151166020820152f35b346102b95760603660031901126102b95761074461154e565b61074c6118d2565b50602435600052600260205260ff60406000209116600052602052606061033b61040260406000206044359061156e565b346102b95760403660031901126102b95761079661154e565b60ff60243591166000526004602052604060002080548210156102b9576020916107bf9161156e565b905460405160039290921b1c6001600160a01b03168152f35b346102b95760403660031901126102b95760043563ffffffff81168091036102b9576024356001600160401b0381116102b9576108199036906004016115cc565b9190610824836116e9565b9161083260405193846116c8565b83835261083e846116e9565b602084019490601f190136863760005b8181106108a05785856040519182916020830190602084525180915260408301919060005b818110610881575050500390f35b825163ffffffff16845285945060209384019390920191600101610873565b6108ad818386989661186b565b3560f81c6108ba81611b1c565b6000818152600160205260408120805415610a415790602091815220908463ffffffff6000935416116109b05780825260016020526040822054825b81811061090d575b5050505060010194929461084e565b82845260016020526040842061092382846118c5565b60001981019190821161099c57610940899263ffffffff9261156e565b5054161115610951576001016108f6565b9061095c92506118c5565b60001981019190821161098857509063ffffffff6001921661097e8288611877565b52908780806108fe565b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b86526011600452602486fd5b60405162461bcd60e51b815260206004820152605b60248201527f5374616b6552656769737472792e676574546f74616c5374616b65496e64696360448201527f65734174426c6f636b4e756d6265723a2071756f72756d20686173206e6f207360648201527f74616b6520686973746f727920617420626c6f636b4e756d6265720000000000608482015260a490fd5b634e487b7160e01b82526032600452602482fd5b346102b95760403660031901126102b9576020610a7c610a73611700565b60243590612336565b6001600160601b0360405191168152f35b346102b95760003660031901126102b9576020604051818152f35b346102b95760603660031901126102b957610ac161155e565b604435906001600160601b03821682036102b95760209161039f91600435612185565b346102b95760003660031901126102b9576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346102b957610b37366115f9565b929091610b42611f38565b60009360005b818110610b63576040516001600160c01b0387168152602090f35b80610b9c610b74600193858961186b565b3560f81c610b8181611b1c565b610b8b8782611bbc565b15610ba3575b610637908288612185565b5001610b48565b5083811b60c085901b859003908116991698909817976000610b91565b346102b95760403660031901126102b957610bd961154e565b602435906001600160401b0382116102b957366023830112156102b957816004013591610c05836116e9565b92610c1360405194856116c8565b8084526024602085019160051b830101913683116102b957602401905b828210610ecf57505050610c42611e08565b610c4b81611b1c565b8151908115610e645760ff1691826000526003602052604060002083600052600460205260406000209360005b848110610c8157005b817f31fa2e2cd280c9375e13ffcf3d81e2378100186e4058f8d3ddb690b82dcd31f76020610cb9610cb28589611877565b518761156e565b50546040516001600160a01b039091168152a2817f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a756040610cfd610cb28589611877565b505481516001600160a01b03909116815260006020820152a2825460001981019081116104d257610d2e908461156e565b50610d43610d3c8387611877565b518561156e565b610e2057818103610e36575b505082548015610e0a5760001901610d67818561156e565b610e2057600090558355855460001981019081116104d257610d8c610dd6918861156e565b905460039190911b1c6001600160a01b0316610db2610dab8488611877565b518961156e565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b8554908115610e0a5760019160001901610df0818961156e565b815490858060a01b039060031b1b19169055875501610c78565b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052600060045260246000fd5b815481546001600160a01b039091166001600160a01b03199182168117835592541690911790558680610d4f565b60405162461bcd60e51b815260206004820152603d60248201527f5374616b6552656769737472792e72656d6f7665537472617465676965733a2060448201527f6e6f20696e646963657320746f2072656d6f76652070726f76696465640000006064820152608490fd5b8135815260209182019101610c30565b346102b95760003660031901126102b9576020604051670de0b6b3a76400008152f35b346102b95760403660031901126102b95760206001600160601b03604061040f61033361155e565b346102b95760403660031901126102b957610f4361155e565b600435600052600260205260ff604060002091166000526020526020604060002054604051908152f35b346102b95760203660031901126102b95760ff610f8861154e565b1660005260036020526020604060002054604051908152f35b346102b95760403660031901126102b957610fba61155e565b600435600052600260205260ff604060002091166000526020526040600020805490610fe5826116e9565b91610ff360405193846116c8565b80835260208301809260005260206000206000915b8383106110885784866040519182916020830190602084525180915260408301919060005b81811061103b575050500390f35b91935091602060608261107a60019488516001600160601b036040809263ffffffff815116855263ffffffff6020820151166020860152015116910152565b01940191019184939261102d565b6001602081926110978561188b565b815201920192019190611008565b346102b9576110b3366115f9565b906110bf939293611f38565b6110c882611839565b926110d283611839565b9260005b81811061110b576110f9866111078760405193849360408552604085019061163f565b90838203602085015261163f565b0390f35b61111681838661186b565b3560f81c9061112482611b1c565b61112e8483611bbc565b92909215611180578281611148600195611164948d612185565b916001600160601b0361115b868d611877565b91169052611a42565b6001600160601b036111768389611877565b91169052016110d6565b60405162461bcd60e51b815260206004820152605b60248201527f5374616b6552656769737472792e72656769737465724f70657261746f723a2060448201527f4f70657261746f7220646f6573206e6f74206d656574206d696e696d756d207360648201527f74616b6520726571756972656d656e7420666f722071756f72756d0000000000608482015260a490fd5b346102b95760603660031901126102b95761122a61154e565b6024356001600160401b0381116102b95761124990369060040161159c565b916044356001600160401b0381116102b95761126990369060040161159c565b9091611273611e08565b61127c81611b1c565b84156113d85784820361136d5760ff169182600052600360205260406000209360005b8681106112a857005b806112fa6112c16112bc6001948888611815565b611825565b6112d66112cf848c88611815565b358a61156e565b5080546001600160a01b031660a09290921b6001600160a01b031916919091179055565b857f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a7561132a6112cf848c88611815565b50848060a01b039054166113426112bc858a8a611815565b604080516001600160a01b039390931683526001600160601b0391909116602083015290a20161129f565b60405162461bcd60e51b815260206004820152603960248201527f5374616b6552656769737472792e6d6f6469667953747261746567795061726160448201527f6d733a20696e707574206c656e677468206d69736d61746368000000000000006064820152608490fd5b608460405162461bcd60e51b815260206004820152604060248201527f5374616b6552656769737472792e6d6f6469667953747261746567795061726160448201527f6d733a206e6f20737472617465677920696e64696365732070726f76696465646064820152fd5b346102b95760403660031901126102b95761145b61154e565b602435906001600160a01b03821682036102b9576020918161147f61148493611b1c565b611bbc565b506001600160601b0360405191168152f35b346102b95760403660031901126102b9576114af61154e565b60ff60243591166000526003602052604060002080548210156102b9576040916114d89161156e565b505481516001600160a01b038216815260a09190911c6020820152f35b346102b95760203660031901126102b95760ff61151061154e565b1660005260016020526020604060002054604051908152f35b346102b95760403660031901126102b95761025461154561154e565b60243590611a42565b6004359060ff821682036102b957565b6024359060ff821682036102b957565b80548210156115865760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b9181601f840112156102b9578235916001600160401b0383116102b9576020808501948460051b0101116102b957565b9181601f840112156102b9578235916001600160401b0383116102b957602083818601950101116102b957565b60606003198201126102b9576004356001600160a01b03811681036102b9579160243591604435906001600160401b0382116102b95761163b916004016115cc565b9091565b906020808351928381520192019060005b81811061165d5750505090565b82516001600160601b0316845260209384019390920191600101611650565b606081019081106001600160401b0382111761169757604052565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b0382111761169757604052565b90601f801991011681019081106001600160401b0382111761169757604052565b6001600160401b0381116116975760051b60200190565b600435906001600160601b03821682036102b957565b602435906001600160601b03821682036102b957565b6024359063ffffffff821682036102b957565b81601f820112156102b957803590611756826116e9565b9261176460405194856116c8565b82845260208085019360061b830101918183116102b957602001925b82841061178e575050505090565b6040848303126102b957604051906117a5826116ad565b84356001600160a01b03811681036102b95782526020850135906001600160601b03821682036102b95782602092836040950152815201930192611780565b60609060031901126102b9576004359060243560ff811681036102b9579060443563ffffffff811681036102b95790565b91908110156115865760051b0190565b356001600160601b03811681036102b95790565b90611843826116e9565b61185060405191826116c8565b8281528092611861601f19916116e9565b0190602036910137565b90821015611586570190565b80518210156115865760209160051b010190565b906040516118988161167c565b60406001600160601b0382945463ffffffff8116845263ffffffff8160201c166020850152821c16910152565b919082039182116104d257565b604051906118df8261167c565b60006040838281528260208201520152565b604051906118fe826116ad565b60006020838281520152565b90604051611917816116ad565b91546001600160a01b038116835260a01c6020830152565b906119386118d2565b50816000526002602052604060002060ff8216600052602052604060002054906119606118d2565b928261196c5750505090565b90919250600052600260205260ff60406000209116600052602052604060002060001982019182116104d2576119a5916104029161156e565b90565b906bffffffffffffffffffffffff60401b82549160401b16906bffffffffffffffffffffffff60401b1916179055565b8054600160401b811015611697576119f59160018201815561156e565b610e20578151815460208085015167ffffffff00000000911b1663ffffffff90921667ffffffffffffffff1990911617178155611a40916001600160601b03906040015116906119a8565b565b60ff166000818152600160205260409020805491929160001981019081116104d257611a6d9161156e565b50908015611b095763ffffffff611a928354926001600160601b038460401c16612336565b93849243831692168203611aab5750506119a5916119a8565b835467ffffffff000000001916602083901b67ffffffff0000000016179093556119a5929091506000526001602052604060002060405191611aec8361167c565b8252600060208301526001600160601b03841660408301526119d8565b506001600160601b0391505460401c1690565b611b369060ff166000526001602052604060002054151590565b15611b3d57565b60405162461bcd60e51b815260206004820152603160248201527f5374616b6552656769737472792e71756f72756d4578697374733a2071756f726044820152701d5b48191bd95cc81b9bdd08195e1a5cdd607a1b6064820152608490fd5b906001600160601b03809116911601906001600160601b0382116104d257565b919060ff600093169081600052600360205260406000205490600060405190611be4826116ad565b8082526020918201526000848152600480835260408083208151639004134760e01b81526001600160a01b03909616928601929092526024850152805460448501819052908252918120839260648401925b818110611de657506000939283900391508290507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611dda57600091611d40575b5060005b828110611cb95750505060005260006020526001600160601b03604060002054166001600160601b038316101590565b836000526003602052611cd361070282604060002061156e565b611cdd8284611877565b51611cec575b50600101611c89565b6001600160601b036020611d0384869a959a611877565b5192015116908181029181830414901517156104d2576001916001600160601b03670de0b6b3a7640000611d3993041690611b9c565b9590611ce3565b3d8083833e611d4f81836116c8565b810190602081830312611dd2578051906001600160401b038211611dd6570181601f82011215611dd257805190611d85826116e9565b93611d9360405195866116c8565b82855260208086019360051b830101938411611dcf5750602001905b828210611dbf5750505038611c85565b8151815260209182019101611daf565b80fd5b8280fd5b8380fd5b6040513d6000823e3d90fd5b82546001600160a01b0316845285945060209093019260019283019201611c36565b604051638da5cb5b60e01b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611dda57600091611ef2575b506001600160a01b03163303611e6857565b60405162461bcd60e51b815260206004820152605660248201527f5374616b6552656769737472792e6f6e6c79436f6f7264696e61746f724f776e60448201527f65723a2063616c6c6572206973206e6f7420746865206f776e6572206f6620746064820152753432903932b3b4b9ba393ca1b7b7b93234b730ba37b960511b608482015260a490fd5b6020813d602011611f30575b81611f0b602093836116c8565b81010312611f2c5751906001600160a01b0382168203611dcf575038611e56565b5080fd5b3d9150611efe565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303611f6a57565b60405162461bcd60e51b815260206004820152604c60248201527f5374616b6552656769737472792e6f6e6c795265676973747279436f6f72646960448201527f6e61746f723a2063616c6c6572206973206e6f7420746865205265676973747260648201526b3ca1b7b7b93234b730ba37b960a11b608482015260a490fd5b90600090826000526002602052604060002060ff8216600052602052604060002054801560001461208257509082600080516020612a6683398151915260406000946119a5968652600260205281862060ff8216875260205261206e8287208351906120558261167c565b63ffffffff4316825288602083015288858301526119d8565b60ff825191168152856020820152a2612a3f565b909150826000526002602052604060002060ff831660005260205260406000209060001981019081116104d2576120b89161156e565b508054926001600160601b038460401c1691821561217b576040600094600080516020612a668339815191529263ffffffff6119a5988143169182911614881461211d5750805473ffffffffffffffffffffffff00000000000000001916905561206e565b815467ffffffff000000001916602082901b67ffffffff00000000161790915561217690858852600260205283882060ff841689526020528388208451916121648361167c565b825288602083015288858301526119d8565b61206e565b5050505050600090565b9190600090836000526002602052604060002060ff82166000526020526040600020548015600014612232575092600080516020612a6683398151915260406119a5958360005260026020528160002060ff8216600052602052612215826000208351906121f28261167c565b63ffffffff43168252600060208301526001600160601b038916858301526119d8565b60ff8251911681526001600160601b0386166020820152a2612a3f565b909150836000526002602052604060002060ff831660005260205260406000209060001981019081116104d2576122689161156e565b50928354916001600160601b038360401c16926001600160601b0385169182851461232a576119a5968663ffffffff600080516020612a668339815191529560409582431692839116146000146122c95750506122c4916119a8565b612215565b835467ffffffff000000001916602083901b67ffffffff0000000016179093556122c4929091508660005260026020528460002060ff851660005260205284600020908551926123188461167c565b835260006020840152858301526119d8565b50505050505050600090565b90600081121561236d57600160ff1b81146104d2576001600160601b038091600003169116036001600160601b0381116104d25790565b906001600160601b036119a5921690611b9c565b602060ff7f26eecff2b70b0a71104ff4d940ba7162d23a95c248771fc487a7be17a596b3cf92169283600052600082526001600160601b036040600020911690816001600160601b0319825416179055604051908152a2565b919082018092116104d257565b8151156127305760ff825191169182600052600360205260406000205492602061241184866123da565b116126c9576000925b808410612428575050505050565b909192939460005b61243a86886123da565b8110156124d95783600052600360205261245881604060002061156e565b50546001600160a01b03908116906124708888611877565b5151161461248057600101612430565b60405162461bcd60e51b815260206004820152603d6024820152600080516020612a8683398151915260448201527f3a2063616e6e6f74206164642073616d652073747261746567792032780000006064820152608490fd5b509493929190926001600160601b0360206124f48386611877565b51015116156126615781600052600360205260406000206125158285611877565b51908054600160401b811015611697576125349160018201815561156e565b610e205781516020929092015160a01b6001600160a01b0319166001600160a01b03929092169190911790556000828152600460205260409020906001600160a01b036125818286611877565b515116825490600160401b82101561169757610db282600195866125a79501815561156e565b827f10565e56cacbf32eca267945f054fec02e59750032d113d3302182ad967f54046020848060a01b036125db8589611877565b515116604051908152a2827f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a75838060a01b036126178488611877565b5151166001600160601b03602061262e868a611877565b510151604080516001600160a01b0394909416845291166001600160601b03166020830152819081010390a2019261241a565b60405162461bcd60e51b81526020600482015260466024820152600080516020612a8683398151915260448201527f3a2063616e6e6f74206164642073747261746567792077697468207a65726f206064820152651dd95a59da1d60d21b608482015260a490fd5b60405162461bcd60e51b81526020600482015260456024820152600080516020612a8683398151915260448201527f3a20657863656564204d41585f5745494748494e475f46554e4354494f4e5f4c60648201526408a9c8ea8960db1b608482015260a490fd5b60405162461bcd60e51b81526020600482015260386024820152600080516020612a8683398151915260448201527f3a206e6f20737472617465676965732070726f766964656400000000000000006064820152608490fd5b63ffffffff808251169216918210612866576020015163ffffffff16801591821561285c575b5050156127b857565b60405162461bcd60e51b815260206004820152606a60248201527f5374616b6552656769737472792e5f76616c69646174655374616b655570646160448201527f74654174426c6f636b4e756d6265723a2074686572652069732061206e65776560648201527f72207374616b6555706461746520617661696c61626c65206265666f726520626084820152693637b1b5a73ab6b132b960b11b60a482015260c490fd5b10905038806127af565b60405162461bcd60e51b815260206004820152605660248201527f5374616b6552656769737472792e5f76616c69646174655374616b655570646160448201527f74654174426c6f636b4e756d6265723a207374616b6555706461746520697320606482015275333937b69030b33a32b910313637b1b5a73ab6b132b960511b608482015260a490fd5b92919092806000526002602052604060002060ff8516600052602052604060002054805b6129d95760405162461bcd60e51b815260206004820152608160248201527f5374616b6552656769737472792e5f6765745374616b65557064617465496e6460448201527f6578466f724f70657261746f724174426c6f636b4e756d6265723a206e6f207360648201527f74616b652075706461746520666f756e6420666f72206f70657261746f72496460848201527f20616e642071756f72756d4e756d62657220617420626c6f636b206e756d626560a4820152603960f91b60c482015260e490fd5b81600052600260205260408060002060009060ff88168252602052206000198201908282116104d257612a118263ffffffff9261156e565b50541663ffffffff85161015612a32575080156104d2576000190180612914565b63ffffffff169450505050565b6001600160601b0390811691168181039160001380158284131691831216176104d2579056fe2f527d527e95d8fe40aec55377743bb779087da3f6d0d08f12e36444da62327d5374616b6552656769737472792e5f6164645374726174656779506172616d73a2646970667358221220fc94ab1bf9d3f3c14fb93799ae4fc9b50b43d5fe0e2db5f5b0ef735158c02e6264736f6c634300081a0033","sourceMap":"201:865:103:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;937:2:86;201:865:103;937:2:86;;;201:865:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;:::i;:::-;1048:90:85;;:::i;:::-;8291:27;;201:865:103;;-1:-1:-1;201:865:103;22389:18:85;201:865:103;;;-1:-1:-1;201:865:103;;22389:44:85;;22300:140;;8291:27;201:865:103;;;8419:15:85;;8485:12;8419:15;;;:::i;:::-;8485:12;;:::i;:::-;201:865:103;;;8509:18:85;201:865:103;;8509:175:85;201:865:103;;;;;;;;;:::i;:::-;;8599:12:85;201:865:103;;;;;8547:136:85;;201:865:103;;;8547:136:85;;201:865:103;8509:175:85;:::i;:::-;201:865:103;;;;-1:-1:-1;;;201:865:103;;;;;;;;;;;;;;;;;-1:-1:-1;;;201:865:103;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26851:161:85;26915:83;201:865:103;;;:::i;:::-;;;;;;;;26851:20:85;201:865:103;;;;;;;;-1:-1:-1;201:865:103;;;;-1:-1:-1;201:865:103;26915:83:85;;:::i;:::-;26851:161;;:::i;:::-;201:865:103;;;;;;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;897:26;201:865;;:::i;:::-;;;:::i;:::-;897:26;;:::i;:::-;201:865;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;-1:-1:-1;;;;;201:865:103;;;:::i;:::-;;;:::i;:::-;;;;;;28320:20:85;201:865:103;;;;;;28320:46:85;201:865:103;-1:-1:-1;201:865:103;;;28438:11:85;201:865:103;28320:53:85;201:865:103;-1:-1:-1;201:865:103;;;28320:53:85;;:::i;:::-;201:865:103;;:::i;:::-;28438:11:85;;;:::i;:::-;28467:25;201:865:103;;;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;;1138:46:86;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;27329:83:85;201:865:103;;;:::i;:::-;27329:83:85;;:::i;:::-;201:865:103;;;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;;;:::i;:::-;;;;;;29291:18:85;201:865:103;;;;;;;-1:-1:-1;;201:865:103;;;;;;;29291:77:85;-1:-1:-1;;;;;29291:77:85;201:865:103;29291:77:85;;:::i;201:865:103:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;-1:-1:-1;;;;;201:865:103;;;:::i;:::-;;;;:::i;:::-;;;;;;;;30750:11:85;201:865:103;30649:39:85;201:865:103;;;;;30649:39:85;:::i;201:865:103:-;;;;;;-1:-1:-1;;201:865:103;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;201:865:103;;;;;9670:15:85;201:865:103;;;;;;:::i;:::-;1144:92:85;;;:::i;:::-;1313:12;;;:::i;:::-;9670:15;:::i;201:865:103:-;;;;;;-1:-1:-1;;201:865:103;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;:::i;:::-;1048:90:85;;;;;:::i;:::-;201:865:103;5186:24:85;;;;;;201:865:103;5212:3:85;5258:16;5701:49;5258:16;201:865:103;5258:16:85;;;;:::i;:::-;;201:865:103;;5308:12:85;;;:::i;:::-;5446:157;;;;:::i;:::-;5701:49;;:::i;:::-;;201:865:103;5171:13:85;;201:865:103;;;;;;-1:-1:-1;;201:865:103;;;;8908:12:85;201:865:103;;:::i;:::-;;;:::i;:::-;1144:92:85;;;:::i;:::-;1313:12;;;:::i;:::-;8908;:::i;201:865:103:-;;;;;;-1:-1:-1;;201:865:103;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;29857:39:85;201:865:103;;;;;29857:39:85;:::i;201:865:103:-;;;;;;-1:-1:-1;;201:865:103;;;;;;;:::i;:::-;;;:::i;:::-;;;;;23625:14:85;201:865:103;;;;23625:35:85;201:865:103;;;;;23625:35:85;:::i;:::-;201:865:103;;:::i;:::-;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;;:::i;:::-;;;:::i;:::-;;;;;;26495:20:85;201:865:103;;;;;;26495:46:85;201:865:103;-1:-1:-1;201:865:103;;;;;26495:53:85;201:865:103;-1:-1:-1;201:865:103;;;26495:53:85;;:::i;201:865:103:-;;;;;;-1:-1:-1;;201:865:103;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2078:56:86;;;;;201:865:103;2078:56:86;;;;:::i;:::-;201:865:103;;;;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;;;;;;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;201:865:103;;;;;31437:24:85;;;;;;201:865:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;201:865:103;;;;;;;;;31611:18:85;201:865:103;;;31463:3:85;31509:16;;;;;;;:::i;:::-;;201:865:103;;31559:12:85;;;:::i;:::-;201:865:103;;;;31611:18:85;201:865:103;;;;;;;;;;;;;;;;;;;;;;;31611:68:85;201:865:103;;;;;31611:18:85;201:865:103;;;;;;31893:13:85;31908:10;;;;;;31888:259;31463:3;;;;31611:18;201:865:103;31422:13:85;;;;;31920:3;201:865:103;;;31611:18:85;201:865:103;;;;;31980:10:85;;;;:::i;:::-;-1:-1:-1;;201:865:103;;;;;;;;31947:48:85;;;201:865:103;31947:48:85;;:::i;:::-;201:865:103;;;31947:81:85;;31943:190;;31611:18;201:865:103;31893:13:85;;31943:190;32072:10;;;;;:::i;:::-;-1:-1:-1;;201:865:103;;;;;;;;;;;31611:18:85;201:865:103;;32052:35:85;;;;:::i;:::-;201:865:103;32109:5:85;;;;;;201:865:103;-1:-1:-1;;;201:865:103;;;;;;;;;-1:-1:-1;;;201:865:103;;;;;;;;;;;-1:-1:-1;;;201:865:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;201:865:103;;;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;1032:25;201:865;;:::i;:::-;;;1032:25;;:::i;:::-;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;937:2:86;201:865:103;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;573:62;201:865;;;573:62;:::i;201:865::-;;;;;;-1:-1:-1;;201:865:103;;;;;;1270:44:86;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;;;:::i;:::-;1048:90:85;;;;;:::i;:::-;201:865:103;6802:13:85;201:865:103;6817:24:85;;;;;;201:865:103;;-1:-1:-1;;;;;201:865:103;;;;;;;6843:3:85;6889:16;7916:49;6889:16;201:865:103;6889:16:85;;;;:::i;:::-;;201:865:103;;6939:12:85;;;:::i;:::-;7176:50;;;;:::i;:::-;7361:16;7357:151;;6843:3;7677:165;;;;;:::i;7916:49::-;;201:865:103;6802:13:85;;7357:151;-1:-1:-1;201:865:103;;;;;;;;;;;;;;;;;;;;;7357:151:85;;201:865:103;;;;;;-1:-1:-1;;201:865:103;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:92:85;;;;;:::i;:::-;1313:12;;;:::i;:::-;201:865:103;;10267:18:85;;;201:865:103;;;;;;;;10405:14:85;201:865:103;;;;;;;;;;;;;;10535:13:85;201:865:103;10550:18:85;;;;;;201:865:103;10570:3:85;10650:18;10594:85;201:865:103;10634:35:85;10650:18;;;;:::i;:::-;201:865:103;10634:35:85;;:::i;:::-;-1:-1:-1;201:865:103;;;-1:-1:-1;;;;;201:865:103;;;;;10594:85:85;10754:18;10698:88;201:865:103;10738:35:85;10754:18;;;;:::i;10738:35::-;-1:-1:-1;201:865:103;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;10698:88:85;201:865:103;;-1:-1:-1;;201:865:103;;;;;;;10933:43:85;;;;:::i;:::-;10911:18;10895:35;10911:18;;;;:::i;:::-;201:865:103;10895:35:85;;:::i;:::-;201:865:103;;;;;;;10570:3:85;201:865:103;;;;;;;;-1:-1:-1;;201:865:103;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;;;11068:53:85;11025:96;11068:53;;;:::i;:::-;201:865:103;;10405:14:85;201:865:103;;;;;-1:-1:-1;;;;;201:865:103;11025:40:85;11046:18;;;;:::i;:::-;201:865:103;11025:40:85;;:::i;:::-;201:865:103;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;;;;;;;;;;;;;;11025:96:85;201:865:103;;;;;;;10974:1:85;;-1:-1:-1;;201:865:103;;;;;:::i;:::-;;;;;;;;;;10405:14:85;201:865:103;;;;;;;;;10535:13:85;;201:865:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;201:865:103;;;-1:-1:-1;;;;;;201:865:103;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;201:865:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;;;792:4:86;201:865:103;;;;;;;;;-1:-1:-1;;201:865:103;;;;;-1:-1:-1;;;;;201:865:103;25018:46:85;201:865:103;;:::i;:::-;;;;;;-1:-1:-1;;201:865:103;;;;;;:::i;:::-;;;;;24150:20:85;201:865:103;;;;;;24150:46:85;201:865:103;-1:-1:-1;201:865:103;;;;;-1:-1:-1;201:865:103;;;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;;;:::i;:::-;;;;23307:14:85;201:865:103;;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;;:::i;:::-;;;;;24600:20:85;201:865:103;;;;;;24600:46:85;201:865:103;-1:-1:-1;201:865:103;;;;-1:-1:-1;201:865:103;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;1048:90:85;;;;;;:::i;:::-;2837:34;;;:::i;:::-;2911;;;;:::i;:::-;2960:13;201:865:103;2975:24:85;;;;;;201:865:103;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;3001:3:85;3072:16;;;;;:::i;:::-;;201:865:103;;3122:12:85;;;;:::i;:::-;3333:50;;;;:::i;:::-;201:865:103;;;;;;3640:167:85;;;201:865:103;3640:167:85;3965:49;3640:167;;;:::i;:::-;3903:31;-1:-1:-1;;;;;3903:31:85;;;;:::i;:::-;201:865:103;;;;3965:49:85;:::i;:::-;-1:-1:-1;;;;;3948:66:85;;;;:::i;:::-;201:865:103;;;;;2960:13:85;;201:865:103;;;-1:-1:-1;;;201:865:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;;:::i;:::-;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;:::i;:::-;1144:92:85;;;;:::i;:::-;1313:12;;;:::i;:::-;11789:13;;201:865:103;;11889:34:85;;;201:865:103;;;;;;;;12039:14:85;201:865:103;;;;;12083:13:85;201:865:103;12098:13:85;;;;;;201:865:103;12113:3:85;12240:17;12191:66;12240:17;;201:865:103;12240:17:85;;;;:::i;:::-;;:::i;:::-;12191:35;12207:18;;;;;:::i;:::-;201:865:103;12191:35:85;;:::i;:::-;-1:-1:-1;201:865:103;;-1:-1:-1;;;;;201:865:103;;;;;;-1:-1:-1;;;;;;201:865:103;;;;;;;;12191:66:85;12332:18;12276:104;12316:35;12332:18;;;;;:::i;12316:35::-;201:865:103;;;;;;;;;12362:17:85;;;;;;:::i;:::-;201:865:103;;;-1:-1:-1;;;;;201:865:103;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;12276:104:85;201:865:103;12083:13:85;;201:865:103;;;-1:-1:-1;;;201:865:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;201:865:103;;;;;;;1313:12:85;;;23027:50;1313:12;;:::i;:::-;23027:50;:::i;:::-;201:865:103;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;;:::i;:::-;;;;;;;;2016:56:86;201:865:103;;;;;;;2016:56:86;;;;;201:865:103;2016:56:86;;;;:::i;:::-;-1:-1:-1;201:865:103;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;;;:::i;:::-;;;;28940:18:85;201:865:103;;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;738:49;201:865;;:::i;:::-;;;738:49;;:::i;201:865::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;201:865:103;;-1:-1:-1;201:865:103;;;-1:-1:-1;201:865:103;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;201:865:103;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;201:865:103;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;;:::o;:::-;;;;-1:-1:-1;201:865:103;;;;;-1:-1:-1;201:865:103;;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;;:::o;:::-;-1:-1:-1;;;;;201:865:103;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;201:865:103;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;201:865:103;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;201:865:103;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;201:865:103;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;201:865:103;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;:::o;25364:517:85:-;;201:865:103;;:::i;:::-;;;-1:-1:-1;201:865:103;25531:20:85;201:865:103;;;-1:-1:-1;201:865:103;;;;-1:-1:-1;201:865:103;;;;-1:-1:-1;201:865:103;;;;;:::i;:::-;25646:18:85;;;;25680:26;;;;:::o;25642:233::-;201:865:103;;;;-1:-1:-1;201:865:103;25531:20:85;201:865:103;;;;-1:-1:-1;201:865:103;25759:46:85;201:865:103;-1:-1:-1;201:865:103;;;;-1:-1:-1;201:865:103;;;;;;;;;;;25759:65:85;;;;:::i;201:865:103:-;25838:26:85;:::o;201:865:103:-;;-1:-1:-1;;;201:865:103;;;;;;;-1:-1:-1;;;201:865:103;;;;;:::o;:::-;;;-1:-1:-1;;;201:865:103;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;;:::i;:::-;:::o;15865:1272:85:-;201:865:103;;;;;;16043:18:85;201:865:103;;;;;;;;;;-1:-1:-1;;201:865:103;;;;;;;16130:51:85;;;:::i;:::-;16243:15;;;;16239:74;;201:865:103;16434:46:85;201:865:103;;;-1:-1:-1;;;;;201:865:103;;;;16434:46:85;:::i;:::-;16730:12;;;;201:865:103;;;;16686:57:85;;201:865:103;;16759:32:85;;;;;:::i;16682:423::-;201:865:103;;-1:-1:-1;;201:865:103;;;;;;;;;;;16896:198:85;;16822:60;;-1:-1:-1;201:865:103;;16043:18:85;201:865:103;;;;;;;;;;;:::i;:::-;;;;;16934:159:85;;201:865:103;-1:-1:-1;;;;;201:865:103;;;16934:159:85;;201:865:103;16896:198:85;:::i;16239:74::-;201:865:103;-1:-1:-1;;;;;201:865:103;;;;;;16274:28:85;:::o;32673:168::-;32753:27;32673:168;201:865:103;;-1:-1:-1;201:865:103;22389:18:85;201:865:103;;;-1:-1:-1;201:865:103;;22389:44:85;;22300:140;;32753:27;201:865:103;;;32673:168:85:o;201:865:103:-;;;-1:-1:-1;;;201:865:103;;;;;;;;;;;;;;;;;-1:-1:-1;;;201:865:103;;;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;;-1:-1:-1;;;;;201:865:103;;;;:::o;21177:1051:85:-;;;201:865:103;;;;;;;;23307:14:85;201:865:103;;;;;;21396:43:85;201:865:103;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;201:865:103;;;21523:19:85;201:865:103;;;;;;;;;-1:-1:-1;;;21484:73:85;;-1:-1:-1;;;;;201:865:103;;;21484:73:85;;;201:865:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;201:865:103;;21484:73:85;;;;;-1:-1:-1;21484:73:85;;-1:-1:-1;21484:10:85;-1:-1:-1;;;;;201:865:103;21484:73:85;;;;;;;201:865:103;21484:73:85;;;201:865:103;21572:13:85;201:865:103;21587:16:85;;;;;;201:865:103;;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;-1:-1:-1;;;;;201:865:103;;22134:45:85;;21177:1051;:::o;21605:3::-;201:865:103;;;23307:14:85;201:865:103;;;21721:31:85;201:865:103;;;;21721:31:85;:::i;201:865:103:-;21855:17:85;;;;:::i;:::-;201:865:103;21851:150:85;;21605:3;;201:865:103;;21572:13:85;;21851:150;-1:-1:-1;;;;;201:865:103;21913:17:85;;;;;;;:::i;:::-;201:865:103;21933:32:85;;201:865:103;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;792:4:86;21896:90:85;201:865:103;;;21896:90:85;;:::i;:::-;21851:150;;;;21484:73;;;;;;;;;;:::i;:::-;;;201:865:103;;;;;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21484:73:85;;;;;;201:865:103;;;;;;;;;;;;;;;;;;;;;;;;21484:73:85;201:865:103;;;;;;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;-1:-1:-1;201:865:103;;;;;;;;;;;;;32432:235:85;201:865:103;;-1:-1:-1;;;32520:49:85;;;201:865:103;32520:49:85;201:865:103;32541:19:85;-1:-1:-1;;;;;201:865:103;32520:49:85;;;;;;;-1:-1:-1;32520:49:85;;;32432:235;-1:-1:-1;;;;;;201:865:103;32506:10:85;:63;201:865:103;;32432:235:85:o;201:865:103:-;;;-1:-1:-1;;;201:865:103;;32520:49:85;;201:865:103;;;;;;;;;;;;;;;;;;-1:-1:-1;;;201:865:103;;;;;;;32520:49:85;;;;;;;;;;;;;;;:::i;:::-;;;201:865:103;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;32520:49:85;;;;201:865:103;;;;32520:49:85;;;-1:-1:-1;32520:49:85;;32193:233;32297:19;-1:-1:-1;;;;;201:865:103;32275:10:85;:42;201:865:103;;32193:233:85:o;201:865:103:-;;;-1:-1:-1;;;201:865:103;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;201:865:103;;;;;;;13864:1857:85;;201:865:103;;;;;14074:20:85;201:865:103;;;;;;;;-1:-1:-1;201:865:103;;;;-1:-1:-1;201:865:103;;14142:18:85;;14138:1393;14142:18;;;201:865:103;;;-1:-1:-1;;;;;;;;;;;201:865:103;;;15663:51:85;201:865:103;;;14074:20:85;201:865:103;;;;;;;;;;;;14237:212:85;201:865:103;;;;;;;;;:::i;:::-;;14345:12:85;201:865:103;;;14289:159:85;201:865:103;14289:159:85;;201:865:103;14289:159:85;;;;201:865:103;14237:212:85;:::i;:::-;201:865:103;;;;;;;;;;;;15591:55:85;15663:51;:::i;14138:1393::-;201:865:103;;;;;;14074:20:85;201:865:103;;;;;;;;-1:-1:-1;201:865:103;;;;-1:-1:-1;201:865:103;;;;;;;;;;;14588:63:85;;;:::i;:::-;201:865:103;;;;-1:-1:-1;;;;;201:865:103;;;;14777:21:85;;;14773:68;;201:865:103;;15106:12:85;-1:-1:-1;;;;;;;;;;;15106:12:85;201:865:103;15663:51:85;15106:12;;;201:865:103;;;;;15067:52:85;201:865:103;;;;-1:-1:-1;201:865:103;;-1:-1:-1;;201:865:103;;;14138:1393:85;;15063:458;201:865:103;;-1:-1:-1;;201:865:103;;;;;;;;;;;15278:228:85;;201:865:103;;;14074:20:85;201:865:103;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15330:175:85;201:865:103;15330:175:85;;201:865:103;15330:175:85;;;;201:865:103;15278:228:85;:::i;:::-;14138:1393;;14773:68;14818:8;;;;;201:865:103;14818:8:85;:::o;13864:1857::-;;;201:865:103;;;;;14074:20:85;201:865:103;;;;;;;;-1:-1:-1;201:865:103;;;;-1:-1:-1;201:865:103;;14142:18:85;;14138:1393;14142:18;;;201:865:103;;-1:-1:-1;;;;;;;;;;;201:865:103;15663:51:85;201:865:103;;;;14074:20:85;201:865:103;;;;;;;;-1:-1:-1;201:865:103;;;14237:212:85;201:865:103;-1:-1:-1;201:865:103;;;;;;;:::i;:::-;;14345:12:85;201:865:103;;;;;14289:159:85;;201:865:103;-1:-1:-1;;;;;201:865:103;;14289:159:85;;;201:865:103;14237:212:85;:::i;:::-;201:865:103;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;15591:55:85;15663:51;:::i;14138:1393::-;201:865:103;;;;;;14074:20:85;201:865:103;;;;;;;;-1:-1:-1;201:865:103;;;;-1:-1:-1;201:865:103;;;;;;;;;;;14588:63:85;;;:::i;:::-;201:865:103;;;;;-1:-1:-1;;;;;201:865:103;;;;;-1:-1:-1;;;;;201:865:103;;14777:21:85;;;;14773:68;;15663:51;15106:12;;201:865:103;-1:-1:-1;;;;;;;;;;;15106:12:85;201:865:103;15106:12:85;;;201:865:103;;;;;15067:52:85;15063:458;201:865:103;;;15139:27:85;;;;;:::i;:::-;14138:1393;;15063:458;201:865:103;;-1:-1:-1;;201:865:103;;;;;;;;;;;15278:228:85;;15205:55;;-1:-1:-1;201:865:103;;;14074:20:85;201:865:103;;;;;;;;-1:-1:-1;201:865:103;;;;-1:-1:-1;201:865:103;;;;;;;;:::i;:::-;;;;;15330:175:85;;201:865:103;15330:175:85;;;201:865:103;15278:228:85;:::i;14773:68::-;14818:8;;;;;;;201:865:103;14818:8:85;:::o;19631:242::-;;201:865:103;19725:9:85;;201:865:103;;;-1:-1:-1;;;201:865:103;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;-1:-1:-1;;;;;201:865:103;;;;19750:38:85;:::o;19721:146::-;201:865:103;-1:-1:-1;;;;;19826:30:85;201:865:103;;19826:30:85;;:::i;13456:223::-;201:865:103;;13616:56:85;13456:223;201:865:103;;;13551:21:85;201:865:103;13551:21:85;201:865:103;;-1:-1:-1;;;;;201:865:103;13551:21:85;201:865:103;;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;;;;13616:56:85;13456:223::o;201:865:103:-;;;;;;;;;;:::o;17680:1628:85:-;201:865:103;;17818:26:85;201:865:103;;;;;;;;;17843:1:85;201:865:103;18000:14:85;201:865:103;;;17843:1:85;201:865:103;;18066:34:85;201:865:103;18066:34:85;;;;:::i;:::-;:66;201:865:103;;17843:1:85;18237:1065;18257:18;;;;;;17680:1628;;;;;:::o;18277:3::-;18420:13;;;;;17843:1;18464:3;18440:21;;;;:::i;:::-;18435:27;;;;;201:865:103;17843:1:85;201:865:103;18000:14:85;201:865:103;;18516:31:85;201:865:103;;17843:1:85;201:865:103;18516:31:85;:::i;:::-;-1:-1:-1;201:865:103;-1:-1:-1;;;;;201:865:103;;;;18560:18:85;;;;:::i;:::-;;201:865:103;;18516:71:85;201:865:103;;;;18420:13:85;;201:865:103;;;-1:-1:-1;;;201:865:103;;;18961:19:85;201:865:103;;;;;;;;-1:-1:-1;;;;;;;;;;;201:865:103;;;;;;;;;;;;18435:27:85;;;;;;;;-1:-1:-1;;;;;201:865:103;18743:18:85;;;;:::i;:::-;;:29;201:865:103;;18743:33:85;201:865:103;;;17843:1:85;201:865:103;18000:14:85;201:865:103;;;17843:1:85;201:865:103;18928:18:85;;;;:::i;:::-;;201:865:103;;;-1:-1:-1;;;201:865:103;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;;201:865:103;-1:-1:-1;;;;;201:865:103;;;;;;;;;;17843:1:85;201:865:103;;;18961:19:85;201:865:103;;;;;;-1:-1:-1;;;;;19000:18:85;201:865:103;19000:18:85;;:::i;:::-;;201:865:103;;;;;-1:-1:-1;;;201:865:103;;;;;;;;;;;;;;;;:::i;:::-;;19047:64:85;201:865:103;;;;;;19083:18:85;;;;:::i;:::-;;201:865:103;;;;;;;19047:64:85;201:865:103;19130:161:85;201:865:103;;;;;19203:18:85;;;;:::i;:::-;;201:865:103;;-1:-1:-1;;;;;201:865:103;19248:18:85;;;;:::i;:::-;;:29;201:865:103;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;-1:-1:-1;;;;;201:865:103;;;;;;;;;19130:161:85;;;201:865:103;18242:13:85;;;201:865:103;;;-1:-1:-1;;;201:865:103;;;18961:19:85;201:865:103;;;;;;;;-1:-1:-1;;;;;;;;;;;201:865:103;;;;;;;;;-1:-1:-1;;;201:865:103;;;;;;;;;;-1:-1:-1;;;201:865:103;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;201:865:103;;;;;;;;;-1:-1:-1;;;201:865:103;;;;;;;;;;-1:-1:-1;;;201:865:103;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;201:865:103;;;;;;;;;;;;19962:830:85;201:865:103;;;;;;;20377:44:85;;;201:865:103;;20564:33:85;;201:865:103;;;20564:38:85;;;:89;;;;19962:830;201:865:103;;;;;19962:830:85:o;201:865:103:-;;;-1:-1:-1;;;201:865:103;;20564:33:85;201:865:103;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;201:865:103;;;;;;;20564:89:85;20606:47;;-1:-1:-1;20564:89:85;;;;201:865:103;;;-1:-1:-1;;;201:865:103;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;201:865:103;;;;;;;12621:829:85;;;;;201:865:103;;;12823:20:85;201:865:103;;;;;;;;-1:-1:-1;201:865:103;;;;-1:-1:-1;201:865:103;;12995:206:85;13020:5;;;201:865:103;;-1:-1:-1;;;13282:161:85;;201:865:103;13282:161:85;;;201:865:103;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;201:865:103;;;;13282:161:85;;;13027:3;201:865:103;;;12823:20:85;201:865:103;;;;;;-1:-1:-1;201:865:103;;;;;;;;;;;;;;;;;;;13050:53:85;;201:865:103;13050:53:85;;:::i;:::-;201:865:103;;;;;;-1:-1:-1;13050:86:85;13046:145;;13027:3;201:865:103;;;;-1:-1:-1;;201:865:103;;13000:18:85;;13046:145;201:865:103;;;-1:-1:-1;;;;13156:20:85:o;19402:149::-;-1:-1:-1;;;;;201:865:103;;;;;;;;;-1:-1:-1;;201:865:103;;;;;;;;;;;;;19402:149:85;:::o","linkReferences":{},"immutableReferences":{"27293":[{"start":1072,"length":32},{"start":7244,"length":32}],"27296":[{"start":2810,"length":32},{"start":7709,"length":32},{"start":7994,"length":32}]}},"methodIdentifiers":{"MAX_WEIGHING_FUNCTION_LENGTH()":"7c172347","WEIGHTING_DIVISOR()":"5e5a6775","addStrategies(uint8,(address,uint96)[])":"c601527d","applyDelta(uint96,int256)":"7f429822","calculateDelta(uint96,uint96)":"f509551a","delegation()":"df5cf723","deregisterOperator(bytes32,bytes)":"bd29b8cd","getCurrentStake(bytes32,uint8)":"5401ed27","getCurrentTotalStake(uint8)":"d5eccc05","getLatestStakeUpdate(bytes32,uint8)":"f851e198","getStakeAtBlockNumber(bytes32,uint8,uint32)":"fa28c627","getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)":"f2be94ae","getStakeHistory(bytes32,uint8)":"2cd95940","getStakeHistoryLength(bytes32,uint8)":"4bd26e09","getStakeUpdateAtIndex(uint8,bytes32,uint256)":"ac6bfb03","getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)":"dd9846b9","getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)":"c8294c56","getTotalStakeHistoryLength(uint8)":"0491b41c","getTotalStakeIndicesAtBlockNumber(uint32,bytes)":"81c07502","getTotalStakeUpdateAtIndex(uint8,uint256)":"b6904b78","initializeQuorum(uint8,uint96,(address,uint96)[])":"ff694a77","minimumStakeForQuorum(uint8)":"c46778a5","modifyStrategyParams(uint8,uint256[],uint96[])":"20b66298","recordOperatorStakeUpdate(bytes32,uint8,uint96)":"74454c6d","recordTotalStakeUpdate(uint8,int256)":"0390a4d5","registerOperator(address,bytes32,bytes)":"25504777","registryCoordinator()":"6d14a987","removeStrategies(uint8,uint256[])":"5f1f2d77","setMinimumStakeForQuorum(uint8,uint96)":"bc9a40c3","strategiesPerQuorum(uint8,uint256)":"9f3ccf65","strategyParams(uint8,uint256)":"08732461","strategyParamsByIndex(uint8,uint256)":"adc804da","strategyParamsLength(uint8)":"3ca5a5f5","updateOperatorStake(address,bytes32,bytes)":"66acfefe","weightOfOperatorForQuorum(uint8,address)":"1f9b74e0"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IRegistryCoordinator\",\"name\":\"_registryCoordinator\",\"type\":\"address\"},{\"internalType\":\"contract IDelegationManager\",\"name\":\"_delegationManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"}],\"name\":\"MinimumStakeForQuorumUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"name\":\"OperatorStakeUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"QuorumCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyAddedToQuorum\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"name\":\"StrategyMultiplierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromQuorum\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_WEIGHING_FUNCTION_LENGTH\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WEIGHTING_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StrategyParams[]\",\"name\":\"_strategyParams\",\"type\":\"tuple[]\"}],\"name\":\"addStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"value\",\"type\":\"uint96\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"applyDelta\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"prev\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"cur\",\"type\":\"uint96\"}],\"name\":\"calculateDelta\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"deregisterOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getCurrentStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getCurrentTotalStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getLatestStakeUpdate\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getStakeAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getStakeAtBlockNumberAndIndex\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getStakeHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StakeUpdate[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getStakeHistoryLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getStakeUpdateAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getStakeUpdateIndexAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTotalStakeAtBlockNumberFromIndex\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getTotalStakeHistoryLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"getTotalStakeIndicesAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint32[]\",\"name\":\"\",\"type\":\"uint32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTotalStakeUpdateAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"},{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StrategyParams[]\",\"name\":\"_strategyParams\",\"type\":\"tuple[]\"}],\"name\":\"initializeQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"minimumStakeForQuorum\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"strategyIndices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint96[]\",\"name\":\"newMultipliers\",\"type\":\"uint96[]\"}],\"name\":\"modifyStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"newStake\",\"type\":\"uint96\"}],\"name\":\"recordOperatorStakeUpdate\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"stakeDelta\",\"type\":\"int256\"}],\"name\":\"recordTotalStakeUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"registerOperator\",\"outputs\":[{\"internalType\":\"uint96[]\",\"name\":\"\",\"type\":\"uint96[]\"},{\"internalType\":\"uint96[]\",\"name\":\"\",\"type\":\"uint96[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registryCoordinator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"indicesToRemove\",\"type\":\"uint256[]\"}],\"name\":\"removeStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"}],\"name\":\"setMinimumStakeForQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"strategiesPerQuorum\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"strategyParams\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"strategyParamsByIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"strategyParamsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"updateOperatorStake\",\"outputs\":[{\"internalType\":\"uint192\",\"name\":\"\",\"type\":\"uint192\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"weightOfOperatorForQuorum\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStrategies(uint8,(address,uint96)[])\":{\"details\":\"Checks to make sure that the *same* strategy cannot be added multiple times (checks against both against existing and new strategies).This function has no check to make sure that the strategies for a single quorum have the same underlying asset. This is a concious choice, since a middleware may want, e.g., a stablecoin quorum that accepts USDC, USDT, DAI, etc. as underlying assets and trades them as \\\"equivalent\\\".\"},\"deregisterOperator(bytes32,bytes)\":{\"details\":\"access restricted to the RegistryCoordinatorPreconditions (these are assumed, not validated in this contract):         1) `quorumNumbers` has no duplicates         2) `quorumNumbers.length` != 0         3) `quorumNumbers` is ordered in ascending order         4) the operator is not already deregistered         5) `quorumNumbers` is a subset of the quorumNumbers that the operator is registered for\",\"params\":{\"operatorId\":\"The id of the operator to deregister.\",\"quorumNumbers\":\"The quorum numbers the operator is deregistering from, where each byte is an 8 bit integer quorumNumber.\"}},\"getCurrentStake(bytes32,uint8)\":{\"details\":\"Function returns weight of **0** in the event that the operator has no stake history\"},\"getCurrentTotalStake(uint8)\":{\"details\":\"Will revert if `_totalStakeHistory[quorumNumber]` is empty.\"},\"getLatestStakeUpdate(bytes32,uint8)\":{\"details\":\"Function returns an StakeUpdate struct with **every entry equal to 0** in the event that the operator has no stake history\"},\"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.\",\"params\":{\"blockNumber\":\"Block number to make sure the stake is from.\",\"index\":\"Array index for lookup, within the dynamic array `operatorStakeHistory[operatorId][quorumNumber]`.\",\"operatorId\":\"The id of the operator of interest.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"getStakeHistory(bytes32,uint8)\":{\"params\":{\"operatorId\":\"The id of the operator of interest.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"getStakeUpdateAtIndex(uint8,bytes32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.\",\"params\":{\"index\":\"Array index for lookup, within the dynamic array `operatorStakeHistory[operatorId][quorumNumber]`.\",\"operatorId\":\"The id of the operator of interest.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.\",\"params\":{\"blockNumber\":\"Block number to make sure the stake is from.\",\"index\":\"Array index for lookup, within the dynamic array `_totalStakeHistory[quorumNumber]`.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"getTotalStakeIndicesAtBlockNumber(uint32,bytes)\":{\"details\":\"Function will revert if there are no indices for the given `blockNumber`\",\"params\":{\"blockNumber\":\"Block number to retrieve the stake indices from.\",\"quorumNumbers\":\"The quorum numbers to get the stake indices for.\"}},\"getTotalStakeUpdateAtIndex(uint8,uint256)\":{\"params\":{\"index\":\"Array index for lookup, within the dynamic array `_totalStakeHistory[quorumNumber]`.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"modifyStrategyParams(uint8,uint256[],uint96[])\":{\"params\":{\"newMultipliers\":\"are the new multipliers for the strategies\",\"quorumNumber\":\"is the quorum number to which the strategies belong\",\"strategyIndices\":\"are the indices of the strategies to change\"}},\"registerOperator(address,bytes32,bytes)\":{\"details\":\"access restricted to the RegistryCoordinatorPreconditions (these are assumed, not validated in this contract):         1) `quorumNumbers` has no duplicates         2) `quorumNumbers.length` != 0         3) `quorumNumbers` is ordered in ascending order         4) the operator is not already registered\",\"params\":{\"operator\":\"The address of the operator to register.\",\"operatorId\":\"The id of the operator to register.\",\"quorumNumbers\":\"The quorum numbers the operator is registering for, where each byte is an 8 bit integer quorumNumber.\"},\"returns\":{\"_0\":\"The operator's current stake for each quorum, and the total stake for each quorum\"}},\"removeStrategies(uint8,uint256[])\":{\"details\":\"higher indices should be *first* in the list of @param indicesToRemove, since otherwise the removal of lower index entries will cause a shift in the indices of the other strategies to remove\"},\"updateOperatorStake(address,bytes32,bytes)\":{\"returns\":{\"_0\":\"A bitmap of quorums where the operator no longer meets the minimum stake and should be deregistered.\"}},\"weightOfOperatorForQuorum(uint8,address)\":{\"details\":\"reverts if the quorum does not exist\"}},\"version\":1},\"userdoc\":{\"events\":{\"MinimumStakeForQuorumUpdated(uint8,uint96)\":{\"notice\":\"emitted when the minimum stake for a quorum is updated\"},\"OperatorStakeUpdate(bytes32,uint8,uint96)\":{\"notice\":\"emitted whenever the stake of `operator` is updated\"},\"QuorumCreated(uint8)\":{\"notice\":\"emitted when a new quorum is created\"},\"StrategyAddedToQuorum(uint8,address)\":{\"notice\":\"emitted when `strategy` has been added to the array at `strategyParams[quorumNumber]`\"},\"StrategyMultiplierUpdated(uint8,address,uint256)\":{\"notice\":\"emitted when `strategy` has its `multiplier` updated in the array at `strategyParams[quorumNumber]`\"},\"StrategyRemovedFromQuorum(uint8,address)\":{\"notice\":\"emitted when `strategy` has removed from the array at `strategyParams[quorumNumber]`\"}},\"kind\":\"user\",\"methods\":{\"MAX_WEIGHING_FUNCTION_LENGTH()\":{\"notice\":\"Maximum length of dynamic arrays in the `strategyParams` mapping.\"},\"WEIGHTING_DIVISOR()\":{\"notice\":\"Constant used as a divisor in calculating weights.\"},\"addStrategies(uint8,(address,uint96)[])\":{\"notice\":\"Adds strategies and weights to the quorum\"},\"delegation()\":{\"notice\":\"The address of the Delegation contract for EigenLayer.\"},\"deregisterOperator(bytes32,bytes)\":{\"notice\":\"Deregisters the operator with `operatorId` for the specified `quorumNumbers`.\"},\"getCurrentStake(bytes32,uint8)\":{\"notice\":\"Returns the most recent stake weight for the `operatorId` for quorum `quorumNumber`\"},\"getCurrentTotalStake(uint8)\":{\"notice\":\"Returns the stake weight from the latest entry in `_totalStakeHistory` for quorum `quorumNumber`.\"},\"getLatestStakeUpdate(bytes32,uint8)\":{\"notice\":\"Returns the most recent stake weight for the `operatorId` for a certain quorum\"},\"getStakeAtBlockNumber(bytes32,uint8,uint32)\":{\"notice\":\"Returns the stake of the operator for the provided `quorumNumber` at the given `blockNumber`\"},\"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)\":{\"notice\":\"Returns the stake weight corresponding to `operatorId` for quorum `quorumNumber`, at the `index`-th entry in the `operatorStakeHistory[operatorId][quorumNumber]` array if it was the operator's stake at `blockNumber`. Reverts otherwise.\"},\"getStakeHistory(bytes32,uint8)\":{\"notice\":\"Returns the entire `operatorStakeHistory[operatorId][quorumNumber]` array.\"},\"getStakeHistoryLength(bytes32,uint8)\":{\"notice\":\"Returns the length of an operator's stake history for the given quorum\"},\"getStakeUpdateAtIndex(uint8,bytes32,uint256)\":{\"notice\":\"Returns the `index`-th entry in the `operatorStakeHistory[operatorId][quorumNumber]` array.\"},\"getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)\":{\"notice\":\"Returns the indices of the operator stakes for the provided `quorumNumber` at the given `blockNumber`\"},\"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)\":{\"notice\":\"Returns the total stake weight for quorum `quorumNumber`, at the `index`-th entry in the `_totalStakeHistory[quorumNumber]` array if it was the stake at `blockNumber`. Reverts otherwise.\"},\"getTotalStakeHistoryLength(uint8)\":{\"notice\":\"Returns the length of the total stake history for the given quorum\"},\"getTotalStakeIndicesAtBlockNumber(uint32,bytes)\":{\"notice\":\"Returns the indices of the total stakes for the provided `quorumNumbers` at the given `blockNumber`\"},\"getTotalStakeUpdateAtIndex(uint8,uint256)\":{\"notice\":\"Returns the `index`-th entry in the dynamic array of total stake, `_totalStakeHistory` for quorum `quorumNumber`.\"},\"initializeQuorum(uint8,uint96,(address,uint96)[])\":{\"notice\":\"Initialize a new quorum and push its first history update\"},\"minimumStakeForQuorum(uint8)\":{\"notice\":\"In order to register for a quorum i, an operator must have at least `minimumStakeForQuorum[i]` evaluated by this contract's 'VoteWeigher' logic.\"},\"modifyStrategyParams(uint8,uint256[],uint96[])\":{\"notice\":\"Modifies the weights of existing strategies for a specific quorum\"},\"registerOperator(address,bytes32,bytes)\":{\"notice\":\"Registers the `operator` with `operatorId` for the specified `quorumNumbers`.\"},\"registryCoordinator()\":{\"notice\":\"the coordinator contract that this registry is associated with\"},\"removeStrategies(uint8,uint256[])\":{\"notice\":\"Remove strategies and their associated weights from the quorum's considered strategies\"},\"strategyParams(uint8,uint256)\":{\"notice\":\"mapping from quorum number to the list of strategies considered and their corresponding multipliers for that specific quorum\"},\"strategyParamsByIndex(uint8,uint256)\":{\"notice\":\"Returns the strategy and weight multiplier for the `index`'th strategy in the quorum `quorumNumber`\"},\"strategyParamsLength(uint8)\":{\"notice\":\"Returns the length of the dynamic array stored in `strategyParams[quorumNumber]`.\"},\"updateOperatorStake(address,bytes32,bytes)\":{\"notice\":\"Called by the registry coordinator to update an operator's stake for one or more quorums. If the operator no longer has the minimum stake required for a quorum, they are added to the `quorumsToRemove`, which is returned to the registry coordinator\"},\"weightOfOperatorForQuorum(uint8,address)\":{\"notice\":\"This function computes the total weight of the @param operator in the quorum @param quorumNumber.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-middleware/test/harnesses/StakeRegistryHarness.sol\":\"StakeRegistryHarness\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/\",\":@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/\",\":@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":@openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x5a7dd74fb8a9334aa50c497a58875159aec17e905a7daaf3c276936d5b691bd1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a25b8d80233016a4634b9217a0899f43f18bfb21abb046bee4403e9408296009\",\"dweb:/ipfs/QmUA3bTzddiHnPxBqYtovxvcVvCkNrAxPJ7xcskocxEq5P\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xdb3ff2be72047b89ead3fc98b52cdd514b243ed78cee7f6a48d672bc4cf0fd34\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d16a23a041559f6aaee6dc8342208beb3c3e98b1c23e46ab334243927f4ecc0b\",\"dweb:/ipfs/QmVbyRYgm6zHMFqmZXgsGhHAUxtmvyioc58VuMoJ9x8Eaj\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x37cf51dde7316da0b95f1870504f2c1e5ed5c90faf7efec17dae3ba3d36cba93\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://03c4775b648612314d81278095cf17ad4f15fb850307eaf81d986107d5f664fc\",\"dweb:/ipfs/QmW5vuanTbTFz1kWUUAPBWLu4NhjwrMuye2sT272rC2X7d\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x33a935182f77cfd508fc57ec8e45afc8dc3748e1e9b764d36bf90ae6466f257b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d3981b5bbf435cda04e2ed2f348f886ebf1500c18dd4bbf67b1f1bc0272e2d3f\",\"dweb:/ipfs/QmYHDzQx29ataM2ejRCXFcPxaPdxWqX8v7uwUAYoG9572w\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0xffafae142d5337a5c204519e8f82fe3a5fae137286ebf597fa50699cf12c2474\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b577a12f7788095b230fd069b36ba9b3cdb376a0b7c3d8ae71588e5bf0c2f574\",\"dweb:/ipfs/QmXd1cDzYpxecyFEwowLiBKKjzRHgV8cs1qvLwypdEbVYy\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b\",\"dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x7655919fae553e75ff196b31c9244079ff222e34ff43f36c41429ee826cfad9b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d5d35a784a9511b351826cb70b00d92c3d374474f256b01af05cd1acb1ce6c10\",\"dweb:/ipfs/QmZog3BrpLa213wj5qxVYMQv7jdrkf5AAufLCVaMZsL7Gs\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e\",\"dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0x9e1a2bb1406e2440a4dffe2e34c398a83884b35f6bbe4a25c590a3039f1c4e46\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3ef20115ce26ab5c143fb88a5c3d2520756b286398dc1761069b05e38b2991c9\",\"dweb:/ipfs/QmY8oJpcQzTwcGxEhQtrNYPzXrGVnnQs8c7Sv5uTuvUByF\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x0bb92e390e73d450282108dd84f1cf7922de6e1a7e810ad5351b8708785ba659\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b03baa849b9e0b17ce4f5e35905b73ec83429e464ec3dbe229574333261ea460\",\"dweb:/ipfs/Qmd1FviY3CbqBzpYoTxCeEpS2R53vT9MijZ6qv71S2QEzo\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0x098850d09b65bb7dbad5ea0513eacb77f2701e135d9727b3627e13f303b2ff41\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3519f5a415b99d196f3cecef3f48ea116f2f3a2b381efcc96a5d7eff6934c2f3\",\"dweb:/ipfs/QmbCcFWgmFjXeZrvfEFQ17AgEueW9wS17HhvjkxMi5x3H8\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x6e82a559dc583bf4b15867654e82f3aca9a862589209abac1c4356142a3b2211\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a1a4819b95c7da710e11efb279bd4b596139dc12c96c45a366d8e1893018eb1\",\"dweb:/ipfs/QmZBHPLKoYepZmA7AL9ECJFkbBhujSNvvc8pJmNC9MnRni\"]},\"lib/eigenlayer-middleware/src/StakeRegistry.sol\":{\"keccak256\":\"0xe8e6b6262c6b6429067d48d2c81d7c76a229931613021d551e34f19c97bcb379\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9a774318fd803dad097fe26533ea71711564100939372293e849c75820968eb6\",\"dweb:/ipfs/Qmeb3k5XxuZyyZLvqayoP5GLvpCi97TNK7yvTAemXxo86z\"]},\"lib/eigenlayer-middleware/src/StakeRegistryStorage.sol\":{\"keccak256\":\"0xd0675a2edd88adf10f0e7f6f17f8274b3f660cf891bdd781defb1f229d0144d1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8d044348b69a2e71016b196a9011436bfe5c3b48e3942cce4706c0795cab8732\",\"dweb:/ipfs/Qmb1Khrwj57BMmQ71NdMUdXrnTNw9Fnc7k79svkT6HtJ5s\"]},\"lib/eigenlayer-middleware/src/interfaces/IBLSApkRegistry.sol\":{\"keccak256\":\"0xc07a5edfd95ab4f16f16a8dc8e76eadf4b0e90fe49db90540d01daaad86898c5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://52b53266450a53da641e82d8ae3be93c5e09f8342b4ea0cc96bb9038d8406354\",\"dweb:/ipfs/QmVuoiQyqPTLCGnyt8zDaxiyaj4ETdgTGKv4MDHWzqEDjp\"]},\"lib/eigenlayer-middleware/src/interfaces/IIndexRegistry.sol\":{\"keccak256\":\"0x83b2d56aacf27e65c4959a832c5de573e013908c044f6e48ea8284ac5282ae2b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://877af382587e96bb39bcc6db8bb5e4b871db5025c52347d4bee9afeaa4a6cc8d\",\"dweb:/ipfs/QmdnhsQCChzq2o5NgbeT3JxSsEcMm1PC9QW6zenZNPjD9F\"]},\"lib/eigenlayer-middleware/src/interfaces/IRegistry.sol\":{\"keccak256\":\"0x51426a17fb7e54bd3720e2890104e97a8559a13ff248b3d6b840916751c143d3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://01f91289e6100d528cb8b318cb14ff22a0bc52882c9d4db41585e030cc9ddc25\",\"dweb:/ipfs/Qmb22nqGrsrtNovHRwbMCvDHGENuxAgrWu3Db4p7Er2MHY\"]},\"lib/eigenlayer-middleware/src/interfaces/IRegistryCoordinator.sol\":{\"keccak256\":\"0xdd8effb082c1d5957d5ff43d7c59497b32866a6d82bcc7d5efa49ea9bc9b3385\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cb33a2a1446585b13b7a509e880c60d658d2d2522ec48a9f02e30d2cff54002d\",\"dweb:/ipfs/QmVNG8ZPZkXzNEadPdTj1uBYLiZdCnYfsE5iGU6nJcJXiD\"]},\"lib/eigenlayer-middleware/src/interfaces/IStakeRegistry.sol\":{\"keccak256\":\"0x1b8b4d757c1b804bc4cf6fbbf8bf8f89ebdeb30a31014751fe7d01deb9d513d4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://984bf2777b898ed187d28997f9783f5c293a1a1848e3e9aa470ce9183d454c97\",\"dweb:/ipfs/Qme3aTpBrkLu8wYHFMZbCfhXHoZ1M6SpXkeC237T9BuU5B\"]},\"lib/eigenlayer-middleware/src/libraries/BN254.sol\":{\"keccak256\":\"0xb428c8d0c3b325507a88a61a80115493eb88606ccc19ed64a31e11294ab853b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7b6fb935bfe0494e6ff970c8f30a86d5f4cf5c3e0967300c28cd383c043acae\",\"dweb:/ipfs/QmUHfFZaVjLPXhkBmcxrZhAHZaSFQDqXtrLGpjGBQBa5Ki\"]},\"lib/eigenlayer-middleware/src/libraries/BitmapUtils.sol\":{\"keccak256\":\"0x44315ac460be30a6b18fd4df4d1b8afb46653bf4dc06ca9f93c32353fd0605c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da14f2ead3a375b02afd09d4a02edddf7b63a88945746b96789b2473184fdb04\",\"dweb:/ipfs/QmRqcjxa2Vv2MrLdPeAwsktXdWTirapEDsRbJCyYRtKT6g\"]},\"lib/eigenlayer-middleware/test/harnesses/StakeRegistryHarness.sol\":{\"keccak256\":\"0x946d2ee920abaedb943b5e40691b8dac521c48fec97d3a663b9763fa6eaaa17f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e6e63c09a27386f487f4a0d0b336ea4b8f2e23dea75db3eb0bd62accba32ff03\",\"dweb:/ipfs/QmYk66vh5zX7SD9rS7xaR34BpfcCwkzA2MhsEvA6anxzzu\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IRegistryCoordinator","name":"_registryCoordinator","type":"address"},{"internalType":"contract IDelegationManager","name":"_delegationManager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true},{"internalType":"uint96","name":"minimumStake","type":"uint96","indexed":false}],"type":"event","name":"MinimumStakeForQuorumUpdated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32","indexed":true},{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":false},{"internalType":"uint96","name":"stake","type":"uint96","indexed":false}],"type":"event","name":"OperatorStakeUpdate","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true}],"type":"event","name":"QuorumCreated","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false}],"type":"event","name":"StrategyAddedToQuorum","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false},{"internalType":"uint256","name":"multiplier","type":"uint256","indexed":false}],"type":"event","name":"StrategyMultiplierUpdated","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false}],"type":"event","name":"StrategyRemovedFromQuorum","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"MAX_WEIGHING_FUNCTION_LENGTH","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"WEIGHTING_DIVISOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"struct IStakeRegistry.StrategyParams[]","name":"_strategyParams","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}],"stateMutability":"nonpayable","type":"function","name":"addStrategies"},{"inputs":[{"internalType":"uint96","name":"value","type":"uint96"},{"internalType":"int256","name":"delta","type":"int256"}],"stateMutability":"pure","type":"function","name":"applyDelta","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"uint96","name":"prev","type":"uint96"},{"internalType":"uint96","name":"cur","type":"uint96"}],"stateMutability":"pure","type":"function","name":"calculateDelta","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"delegation","outputs":[{"internalType":"contract IDelegationManager","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"bytes","name":"quorumNumbers","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deregisterOperator"},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getCurrentStake","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getCurrentTotalStake","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getLatestStakeUpdate","outputs":[{"internalType":"struct IStakeRegistry.StakeUpdate","name":"","type":"tuple","components":[{"internalType":"uint32","name":"updateBlockNumber","type":"uint32"},{"internalType":"uint32","name":"nextUpdateBlockNumber","type":"uint32"},{"internalType":"uint96","name":"stake","type":"uint96"}]}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"blockNumber","type":"uint32"}],"stateMutability":"view","type":"function","name":"getStakeAtBlockNumber","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"blockNumber","type":"uint32"},{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getStakeAtBlockNumberAndIndex","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getStakeHistory","outputs":[{"internalType":"struct IStakeRegistry.StakeUpdate[]","name":"","type":"tuple[]","components":[{"internalType":"uint32","name":"updateBlockNumber","type":"uint32"},{"internalType":"uint32","name":"nextUpdateBlockNumber","type":"uint32"},{"internalType":"uint96","name":"stake","type":"uint96"}]}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getStakeHistoryLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getStakeUpdateAtIndex","outputs":[{"internalType":"struct IStakeRegistry.StakeUpdate","name":"","type":"tuple","components":[{"internalType":"uint32","name":"updateBlockNumber","type":"uint32"},{"internalType":"uint32","name":"nextUpdateBlockNumber","type":"uint32"},{"internalType":"uint96","name":"stake","type":"uint96"}]}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"blockNumber","type":"uint32"}],"stateMutability":"view","type":"function","name":"getStakeUpdateIndexAtBlockNumber","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"blockNumber","type":"uint32"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getTotalStakeAtBlockNumberFromIndex","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getTotalStakeHistoryLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint32","name":"blockNumber","type":"uint32"},{"internalType":"bytes","name":"quorumNumbers","type":"bytes"}],"stateMutability":"view","type":"function","name":"getTotalStakeIndicesAtBlockNumber","outputs":[{"internalType":"uint32[]","name":"","type":"uint32[]"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getTotalStakeUpdateAtIndex","outputs":[{"internalType":"struct IStakeRegistry.StakeUpdate","name":"","type":"tuple","components":[{"internalType":"uint32","name":"updateBlockNumber","type":"uint32"},{"internalType":"uint32","name":"nextUpdateBlockNumber","type":"uint32"},{"internalType":"uint96","name":"stake","type":"uint96"}]}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint96","name":"minimumStake","type":"uint96"},{"internalType":"struct IStakeRegistry.StrategyParams[]","name":"_strategyParams","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}],"stateMutability":"nonpayable","type":"function","name":"initializeQuorum"},{"inputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function","name":"minimumStakeForQuorum","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256[]","name":"strategyIndices","type":"uint256[]"},{"internalType":"uint96[]","name":"newMultipliers","type":"uint96[]"}],"stateMutability":"nonpayable","type":"function","name":"modifyStrategyParams"},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint96","name":"newStake","type":"uint96"}],"stateMutability":"nonpayable","type":"function","name":"recordOperatorStakeUpdate","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"int256","name":"stakeDelta","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"recordTotalStakeUpdate"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"bytes","name":"quorumNumbers","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"registerOperator","outputs":[{"internalType":"uint96[]","name":"","type":"uint96[]"},{"internalType":"uint96[]","name":"","type":"uint96[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"registryCoordinator","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256[]","name":"indicesToRemove","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"removeStrategies"},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint96","name":"minimumStake","type":"uint96"}],"stateMutability":"nonpayable","type":"function","name":"setMinimumStakeForQuorum"},{"inputs":[{"internalType":"uint8","name":"","type":"uint8"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"strategiesPerQuorum","outputs":[{"internalType":"contract IStrategy","name":"","type":"address"}]},{"inputs":[{"internalType":"uint8","name":"","type":"uint8"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"strategyParams","outputs":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"strategyParamsByIndex","outputs":[{"internalType":"struct IStakeRegistry.StrategyParams","name":"","type":"tuple","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"strategyParamsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"bytes","name":"quorumNumbers","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"updateOperatorStake","outputs":[{"internalType":"uint192","name":"","type":"uint192"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"weightOfOperatorForQuorum","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]}],"devdoc":{"kind":"dev","methods":{"addStrategies(uint8,(address,uint96)[])":{"details":"Checks to make sure that the *same* strategy cannot be added multiple times (checks against both against existing and new strategies).This function has no check to make sure that the strategies for a single quorum have the same underlying asset. This is a concious choice, since a middleware may want, e.g., a stablecoin quorum that accepts USDC, USDT, DAI, etc. as underlying assets and trades them as \"equivalent\"."},"deregisterOperator(bytes32,bytes)":{"details":"access restricted to the RegistryCoordinatorPreconditions (these are assumed, not validated in this contract):         1) `quorumNumbers` has no duplicates         2) `quorumNumbers.length` != 0         3) `quorumNumbers` is ordered in ascending order         4) the operator is not already deregistered         5) `quorumNumbers` is a subset of the quorumNumbers that the operator is registered for","params":{"operatorId":"The id of the operator to deregister.","quorumNumbers":"The quorum numbers the operator is deregistering from, where each byte is an 8 bit integer quorumNumber."}},"getCurrentStake(bytes32,uint8)":{"details":"Function returns weight of **0** in the event that the operator has no stake history"},"getCurrentTotalStake(uint8)":{"details":"Will revert if `_totalStakeHistory[quorumNumber]` is empty."},"getLatestStakeUpdate(bytes32,uint8)":{"details":"Function returns an StakeUpdate struct with **every entry equal to 0** in the event that the operator has no stake history"},"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)":{"details":"Function will revert if `index` is out-of-bounds.","params":{"blockNumber":"Block number to make sure the stake is from.","index":"Array index for lookup, within the dynamic array `operatorStakeHistory[operatorId][quorumNumber]`.","operatorId":"The id of the operator of interest.","quorumNumber":"The quorum number to get the stake for."}},"getStakeHistory(bytes32,uint8)":{"params":{"operatorId":"The id of the operator of interest.","quorumNumber":"The quorum number to get the stake for."}},"getStakeUpdateAtIndex(uint8,bytes32,uint256)":{"details":"Function will revert if `index` is out-of-bounds.","params":{"index":"Array index for lookup, within the dynamic array `operatorStakeHistory[operatorId][quorumNumber]`.","operatorId":"The id of the operator of interest.","quorumNumber":"The quorum number to get the stake for."}},"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)":{"details":"Function will revert if `index` is out-of-bounds.","params":{"blockNumber":"Block number to make sure the stake is from.","index":"Array index for lookup, within the dynamic array `_totalStakeHistory[quorumNumber]`.","quorumNumber":"The quorum number to get the stake for."}},"getTotalStakeIndicesAtBlockNumber(uint32,bytes)":{"details":"Function will revert if there are no indices for the given `blockNumber`","params":{"blockNumber":"Block number to retrieve the stake indices from.","quorumNumbers":"The quorum numbers to get the stake indices for."}},"getTotalStakeUpdateAtIndex(uint8,uint256)":{"params":{"index":"Array index for lookup, within the dynamic array `_totalStakeHistory[quorumNumber]`.","quorumNumber":"The quorum number to get the stake for."}},"modifyStrategyParams(uint8,uint256[],uint96[])":{"params":{"newMultipliers":"are the new multipliers for the strategies","quorumNumber":"is the quorum number to which the strategies belong","strategyIndices":"are the indices of the strategies to change"}},"registerOperator(address,bytes32,bytes)":{"details":"access restricted to the RegistryCoordinatorPreconditions (these are assumed, not validated in this contract):         1) `quorumNumbers` has no duplicates         2) `quorumNumbers.length` != 0         3) `quorumNumbers` is ordered in ascending order         4) the operator is not already registered","params":{"operator":"The address of the operator to register.","operatorId":"The id of the operator to register.","quorumNumbers":"The quorum numbers the operator is registering for, where each byte is an 8 bit integer quorumNumber."},"returns":{"_0":"The operator's current stake for each quorum, and the total stake for each quorum"}},"removeStrategies(uint8,uint256[])":{"details":"higher indices should be *first* in the list of @param indicesToRemove, since otherwise the removal of lower index entries will cause a shift in the indices of the other strategies to remove"},"updateOperatorStake(address,bytes32,bytes)":{"returns":{"_0":"A bitmap of quorums where the operator no longer meets the minimum stake and should be deregistered."}},"weightOfOperatorForQuorum(uint8,address)":{"details":"reverts if the quorum does not exist"}},"version":1},"userdoc":{"kind":"user","methods":{"MAX_WEIGHING_FUNCTION_LENGTH()":{"notice":"Maximum length of dynamic arrays in the `strategyParams` mapping."},"WEIGHTING_DIVISOR()":{"notice":"Constant used as a divisor in calculating weights."},"addStrategies(uint8,(address,uint96)[])":{"notice":"Adds strategies and weights to the quorum"},"delegation()":{"notice":"The address of the Delegation contract for EigenLayer."},"deregisterOperator(bytes32,bytes)":{"notice":"Deregisters the operator with `operatorId` for the specified `quorumNumbers`."},"getCurrentStake(bytes32,uint8)":{"notice":"Returns the most recent stake weight for the `operatorId` for quorum `quorumNumber`"},"getCurrentTotalStake(uint8)":{"notice":"Returns the stake weight from the latest entry in `_totalStakeHistory` for quorum `quorumNumber`."},"getLatestStakeUpdate(bytes32,uint8)":{"notice":"Returns the most recent stake weight for the `operatorId` for a certain quorum"},"getStakeAtBlockNumber(bytes32,uint8,uint32)":{"notice":"Returns the stake of the operator for the provided `quorumNumber` at the given `blockNumber`"},"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)":{"notice":"Returns the stake weight corresponding to `operatorId` for quorum `quorumNumber`, at the `index`-th entry in the `operatorStakeHistory[operatorId][quorumNumber]` array if it was the operator's stake at `blockNumber`. Reverts otherwise."},"getStakeHistory(bytes32,uint8)":{"notice":"Returns the entire `operatorStakeHistory[operatorId][quorumNumber]` array."},"getStakeHistoryLength(bytes32,uint8)":{"notice":"Returns the length of an operator's stake history for the given quorum"},"getStakeUpdateAtIndex(uint8,bytes32,uint256)":{"notice":"Returns the `index`-th entry in the `operatorStakeHistory[operatorId][quorumNumber]` array."},"getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)":{"notice":"Returns the indices of the operator stakes for the provided `quorumNumber` at the given `blockNumber`"},"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)":{"notice":"Returns the total stake weight for quorum `quorumNumber`, at the `index`-th entry in the `_totalStakeHistory[quorumNumber]` array if it was the stake at `blockNumber`. Reverts otherwise."},"getTotalStakeHistoryLength(uint8)":{"notice":"Returns the length of the total stake history for the given quorum"},"getTotalStakeIndicesAtBlockNumber(uint32,bytes)":{"notice":"Returns the indices of the total stakes for the provided `quorumNumbers` at the given `blockNumber`"},"getTotalStakeUpdateAtIndex(uint8,uint256)":{"notice":"Returns the `index`-th entry in the dynamic array of total stake, `_totalStakeHistory` for quorum `quorumNumber`."},"initializeQuorum(uint8,uint96,(address,uint96)[])":{"notice":"Initialize a new quorum and push its first history update"},"minimumStakeForQuorum(uint8)":{"notice":"In order to register for a quorum i, an operator must have at least `minimumStakeForQuorum[i]` evaluated by this contract's 'VoteWeigher' logic."},"modifyStrategyParams(uint8,uint256[],uint96[])":{"notice":"Modifies the weights of existing strategies for a specific quorum"},"registerOperator(address,bytes32,bytes)":{"notice":"Registers the `operator` with `operatorId` for the specified `quorumNumbers`."},"registryCoordinator()":{"notice":"the coordinator contract that this registry is associated with"},"removeStrategies(uint8,uint256[])":{"notice":"Remove strategies and their associated weights from the quorum's considered strategies"},"strategyParams(uint8,uint256)":{"notice":"mapping from quorum number to the list of strategies considered and their corresponding multipliers for that specific quorum"},"strategyParamsByIndex(uint8,uint256)":{"notice":"Returns the strategy and weight multiplier for the `index`'th strategy in the quorum `quorumNumber`"},"strategyParamsLength(uint8)":{"notice":"Returns the length of the dynamic array stored in `strategyParams[quorumNumber]`."},"updateOperatorStake(address,bytes32,bytes)":{"notice":"Called by the registry coordinator to update an operator's stake for one or more quorums. If the operator no longer has the minimum stake required for a quorum, they are added to the `quorumsToRemove`, which is returned to the registry coordinator"},"weightOfOperatorForQuorum(uint8,address)":{"notice":"This function computes the total weight of the @param operator in the quorum @param quorumNumber."}},"version":1}},"settings":{"remappings":["@eigenlayer-middleware/=lib/eigenlayer-middleware/","@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/","@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/","@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/","@openzeppelin-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","@openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/","ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/eigenlayer-middleware/test/harnesses/StakeRegistryHarness.sol":"StakeRegistryHarness"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61","urls":["bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354","dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b","urls":["bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34","dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol":{"keccak256":"0x5a7dd74fb8a9334aa50c497a58875159aec17e905a7daaf3c276936d5b691bd1","urls":["bzz-raw://a25b8d80233016a4634b9217a0899f43f18bfb21abb046bee4403e9408296009","dweb:/ipfs/QmUA3bTzddiHnPxBqYtovxvcVvCkNrAxPJ7xcskocxEq5P"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol":{"keccak256":"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c","urls":["bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91","dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"],"license":"CC0-1.0"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol":{"keccak256":"0xdb3ff2be72047b89ead3fc98b52cdd514b243ed78cee7f6a48d672bc4cf0fd34","urls":["bzz-raw://d16a23a041559f6aaee6dc8342208beb3c3e98b1c23e46ab334243927f4ecc0b","dweb:/ipfs/QmVbyRYgm6zHMFqmZXgsGhHAUxtmvyioc58VuMoJ9x8Eaj"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol":{"keccak256":"0x37cf51dde7316da0b95f1870504f2c1e5ed5c90faf7efec17dae3ba3d36cba93","urls":["bzz-raw://03c4775b648612314d81278095cf17ad4f15fb850307eaf81d986107d5f664fc","dweb:/ipfs/QmW5vuanTbTFz1kWUUAPBWLu4NhjwrMuye2sT272rC2X7d"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol":{"keccak256":"0x33a935182f77cfd508fc57ec8e45afc8dc3748e1e9b764d36bf90ae6466f257b","urls":["bzz-raw://d3981b5bbf435cda04e2ed2f348f886ebf1500c18dd4bbf67b1f1bc0272e2d3f","dweb:/ipfs/QmYHDzQx29ataM2ejRCXFcPxaPdxWqX8v7uwUAYoG9572w"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol":{"keccak256":"0xffafae142d5337a5c204519e8f82fe3a5fae137286ebf597fa50699cf12c2474","urls":["bzz-raw://b577a12f7788095b230fd069b36ba9b3cdb376a0b7c3d8ae71588e5bf0c2f574","dweb:/ipfs/QmXd1cDzYpxecyFEwowLiBKKjzRHgV8cs1qvLwypdEbVYy"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol":{"keccak256":"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4","urls":["bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b","dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol":{"keccak256":"0x7655919fae553e75ff196b31c9244079ff222e34ff43f36c41429ee826cfad9b","urls":["bzz-raw://d5d35a784a9511b351826cb70b00d92c3d374474f256b01af05cd1acb1ce6c10","dweb:/ipfs/QmZog3BrpLa213wj5qxVYMQv7jdrkf5AAufLCVaMZsL7Gs"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol":{"keccak256":"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9","urls":["bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e","dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol":{"keccak256":"0x9e1a2bb1406e2440a4dffe2e34c398a83884b35f6bbe4a25c590a3039f1c4e46","urls":["bzz-raw://3ef20115ce26ab5c143fb88a5c3d2520756b286398dc1761069b05e38b2991c9","dweb:/ipfs/QmY8oJpcQzTwcGxEhQtrNYPzXrGVnnQs8c7Sv5uTuvUByF"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol":{"keccak256":"0x0bb92e390e73d450282108dd84f1cf7922de6e1a7e810ad5351b8708785ba659","urls":["bzz-raw://b03baa849b9e0b17ce4f5e35905b73ec83429e464ec3dbe229574333261ea460","dweb:/ipfs/Qmd1FviY3CbqBzpYoTxCeEpS2R53vT9MijZ6qv71S2QEzo"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol":{"keccak256":"0x098850d09b65bb7dbad5ea0513eacb77f2701e135d9727b3627e13f303b2ff41","urls":["bzz-raw://3519f5a415b99d196f3cecef3f48ea116f2f3a2b381efcc96a5d7eff6934c2f3","dweb:/ipfs/QmbCcFWgmFjXeZrvfEFQ17AgEueW9wS17HhvjkxMi5x3H8"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol":{"keccak256":"0x6e82a559dc583bf4b15867654e82f3aca9a862589209abac1c4356142a3b2211","urls":["bzz-raw://8a1a4819b95c7da710e11efb279bd4b596139dc12c96c45a366d8e1893018eb1","dweb:/ipfs/QmZBHPLKoYepZmA7AL9ECJFkbBhujSNvvc8pJmNC9MnRni"],"license":"MIT"},"lib/eigenlayer-middleware/src/StakeRegistry.sol":{"keccak256":"0xe8e6b6262c6b6429067d48d2c81d7c76a229931613021d551e34f19c97bcb379","urls":["bzz-raw://9a774318fd803dad097fe26533ea71711564100939372293e849c75820968eb6","dweb:/ipfs/Qmeb3k5XxuZyyZLvqayoP5GLvpCi97TNK7yvTAemXxo86z"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/StakeRegistryStorage.sol":{"keccak256":"0xd0675a2edd88adf10f0e7f6f17f8274b3f660cf891bdd781defb1f229d0144d1","urls":["bzz-raw://8d044348b69a2e71016b196a9011436bfe5c3b48e3942cce4706c0795cab8732","dweb:/ipfs/Qmb1Khrwj57BMmQ71NdMUdXrnTNw9Fnc7k79svkT6HtJ5s"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/IBLSApkRegistry.sol":{"keccak256":"0xc07a5edfd95ab4f16f16a8dc8e76eadf4b0e90fe49db90540d01daaad86898c5","urls":["bzz-raw://52b53266450a53da641e82d8ae3be93c5e09f8342b4ea0cc96bb9038d8406354","dweb:/ipfs/QmVuoiQyqPTLCGnyt8zDaxiyaj4ETdgTGKv4MDHWzqEDjp"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/IIndexRegistry.sol":{"keccak256":"0x83b2d56aacf27e65c4959a832c5de573e013908c044f6e48ea8284ac5282ae2b","urls":["bzz-raw://877af382587e96bb39bcc6db8bb5e4b871db5025c52347d4bee9afeaa4a6cc8d","dweb:/ipfs/QmdnhsQCChzq2o5NgbeT3JxSsEcMm1PC9QW6zenZNPjD9F"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/IRegistry.sol":{"keccak256":"0x51426a17fb7e54bd3720e2890104e97a8559a13ff248b3d6b840916751c143d3","urls":["bzz-raw://01f91289e6100d528cb8b318cb14ff22a0bc52882c9d4db41585e030cc9ddc25","dweb:/ipfs/Qmb22nqGrsrtNovHRwbMCvDHGENuxAgrWu3Db4p7Er2MHY"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/IRegistryCoordinator.sol":{"keccak256":"0xdd8effb082c1d5957d5ff43d7c59497b32866a6d82bcc7d5efa49ea9bc9b3385","urls":["bzz-raw://cb33a2a1446585b13b7a509e880c60d658d2d2522ec48a9f02e30d2cff54002d","dweb:/ipfs/QmVNG8ZPZkXzNEadPdTj1uBYLiZdCnYfsE5iGU6nJcJXiD"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/IStakeRegistry.sol":{"keccak256":"0x1b8b4d757c1b804bc4cf6fbbf8bf8f89ebdeb30a31014751fe7d01deb9d513d4","urls":["bzz-raw://984bf2777b898ed187d28997f9783f5c293a1a1848e3e9aa470ce9183d454c97","dweb:/ipfs/Qme3aTpBrkLu8wYHFMZbCfhXHoZ1M6SpXkeC237T9BuU5B"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/libraries/BN254.sol":{"keccak256":"0xb428c8d0c3b325507a88a61a80115493eb88606ccc19ed64a31e11294ab853b3","urls":["bzz-raw://d7b6fb935bfe0494e6ff970c8f30a86d5f4cf5c3e0967300c28cd383c043acae","dweb:/ipfs/QmUHfFZaVjLPXhkBmcxrZhAHZaSFQDqXtrLGpjGBQBa5Ki"],"license":"MIT"},"lib/eigenlayer-middleware/src/libraries/BitmapUtils.sol":{"keccak256":"0x44315ac460be30a6b18fd4df4d1b8afb46653bf4dc06ca9f93c32353fd0605c5","urls":["bzz-raw://da14f2ead3a375b02afd09d4a02edddf7b63a88945746b96789b2473184fdb04","dweb:/ipfs/QmRqcjxa2Vv2MrLdPeAwsktXdWTirapEDsRbJCyYRtKT6g"],"license":"MIT"},"lib/eigenlayer-middleware/test/harnesses/StakeRegistryHarness.sol":{"keccak256":"0x946d2ee920abaedb943b5e40691b8dac521c48fec97d3a663b9763fa6eaaa17f","urls":["bzz-raw://e6e63c09a27386f487f4a0d0b336ea4b8f2e23dea75db3eb0bd62accba32ff03","dweb:/ipfs/QmYk66vh5zX7SD9rS7xaR34BpfcCwkzA2MhsEvA6anxzzu"],"license":"BUSL-1.1"}},"version":1},"id":103}