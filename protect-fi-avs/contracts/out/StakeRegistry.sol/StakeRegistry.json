{"abi":[{"type":"constructor","inputs":[{"name":"_registryCoordinator","type":"address","internalType":"contract IRegistryCoordinator"},{"name":"_delegationManager","type":"address","internalType":"contract IDelegationManager"}],"stateMutability":"nonpayable"},{"type":"function","name":"MAX_WEIGHING_FUNCTION_LENGTH","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"WEIGHTING_DIVISOR","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addStrategies","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"_strategyParams","type":"tuple[]","internalType":"struct IStakeRegistry.StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"delegation","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IDelegationManager"}],"stateMutability":"view"},{"type":"function","name":"deregisterOperator","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumbers","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getCurrentStake","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getCurrentTotalStake","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getLatestStakeUpdate","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IStakeRegistry.StakeUpdate","components":[{"name":"updateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"nextUpdateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"stake","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"getStakeAtBlockNumber","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"blockNumber","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getStakeAtBlockNumberAndIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"blockNumber","type":"uint32","internalType":"uint32"},{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getStakeHistory","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct IStakeRegistry.StakeUpdate[]","components":[{"name":"updateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"nextUpdateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"stake","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"getStakeHistoryLength","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getStakeUpdateAtIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IStakeRegistry.StakeUpdate","components":[{"name":"updateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"nextUpdateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"stake","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"getStakeUpdateIndexAtBlockNumber","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"blockNumber","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"getTotalStakeAtBlockNumberFromIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"blockNumber","type":"uint32","internalType":"uint32"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getTotalStakeHistoryLength","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getTotalStakeIndicesAtBlockNumber","inputs":[{"name":"blockNumber","type":"uint32","internalType":"uint32"},{"name":"quorumNumbers","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint32[]","internalType":"uint32[]"}],"stateMutability":"view"},{"type":"function","name":"getTotalStakeUpdateAtIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IStakeRegistry.StakeUpdate","components":[{"name":"updateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"nextUpdateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"stake","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"initializeQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"minimumStake","type":"uint96","internalType":"uint96"},{"name":"_strategyParams","type":"tuple[]","internalType":"struct IStakeRegistry.StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"minimumStakeForQuorum","inputs":[{"name":"","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"modifyStrategyParams","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"strategyIndices","type":"uint256[]","internalType":"uint256[]"},{"name":"newMultipliers","type":"uint96[]","internalType":"uint96[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"registerOperator","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumbers","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint96[]","internalType":"uint96[]"},{"name":"","type":"uint96[]","internalType":"uint96[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"registryCoordinator","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"removeStrategies","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"indicesToRemove","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setMinimumStakeForQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"minimumStake","type":"uint96","internalType":"uint96"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"strategiesPerQuorum","inputs":[{"name":"","type":"uint8","internalType":"uint8"},{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"contract IStrategy"}],"stateMutability":"view"},{"type":"function","name":"strategyParams","inputs":[{"name":"","type":"uint8","internalType":"uint8"},{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"strategyParamsByIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IStakeRegistry.StrategyParams","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"strategyParamsLength","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"updateOperatorStake","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumbers","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint192","internalType":"uint192"}],"stateMutability":"nonpayable"},{"type":"function","name":"weightOfOperatorForQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"event","name":"MinimumStakeForQuorumUpdated","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"minimumStake","type":"uint96","indexed":false,"internalType":"uint96"}],"anonymous":false},{"type":"event","name":"OperatorStakeUpdate","inputs":[{"name":"operatorId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","indexed":false,"internalType":"uint8"},{"name":"stake","type":"uint96","indexed":false,"internalType":"uint96"}],"anonymous":false},{"type":"event","name":"QuorumCreated","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"StrategyAddedToQuorum","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"}],"anonymous":false},{"type":"event","name":"StrategyMultiplierUpdated","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"},{"name":"multiplier","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"StrategyRemovedFromQuorum","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"}],"anonymous":false}],"bytecode":{"object":"0x60c034609e57601f612a9c38819003918201601f19168301916001600160401b0383118484101760a3578084926040948552833981010312609e5780516001600160a01b0381169190829003609e5760200151906001600160a01b0382168203609e5760a0526080526040516129e290816100ba82396080518181816103d30152611a62015260a051818181610a2901528181611c330152611d500152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60003560e01c9081630491b41c146114245750806308732461146113c55780631f9b74e01461137157806320b66298146111405780632550477714610fd45780632cd9594014610ed05780633ca5a5f514610e9c5780634bd26e0914610e595780635401ed2714610e315780635e5a677514610e0e5780635f1f2d7714610aef57806366acfefe14610a585780636d14a98714610a135780637c172347146109f857806381c075021461077b5780639f3ccf6514610720578063ac6bfb03146106ce578063adc804da14610664578063b6904b7814610622578063bc9a40c3146105e7578063bd29b8cd14610568578063c46778a51461052b578063c601527d146104d8578063c8294c561461048b578063d5eccc0514610429578063dd9846b914610402578063df5cf723146103bd578063f2be94ae1461034a578063f851e198146102ec578063fa28c627146102955763ff694a771461017457600080fd5b346102905760603660031901126102905761018d611454565b610195611619565b906044356001600160401b038111610290576101b590369060040161162f565b6101bd611d4e565b6101d78260ff166000526001602052604060002054151590565b61022d5760ff926101eb6101f192846122c9565b82612263565b16600052600160205261022b60406000206040519061020f82611582565b63ffffffff4316825260006020830152600060408301526118c8565b005b60405162461bcd60e51b815260206004820152603560248201527f5374616b6552656769737472792e696e697469616c697a6551756f72756d3a2060448201527471756f72756d20616c72656164792065786973747360581b6064820152608490fd5b600080fd5b346102905760206001600160601b036102de6102d86102b3366116d4565b908260009493945260028752604060002060ff821660005287526040600020936127d2565b90611474565b505460401c16604051908152f35b3461029057604036600319011261029057606061031261030a611464565b60043561181f565b61034860405180926001600160601b036040809263ffffffff815116855263ffffffff6020820151166020860152015116910152565bf35b346102905760803660031901126102905760206001600160601b03604061036f611454565b610377611606565b906044356000526002855260ff83600020911660005284526103b26103ab6103a58460002060643590611474565b5061177b565b918261266b565b015116604051908152f35b34610290576000366003190112610290576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461029057602061041b610415366116d4565b916127d2565b63ffffffff60405191168152f35b346102905760203660031901126102905760ff610444611454565b16600090815260016020526040902080546000198101908111610475576102de6001600160601b0391602093611474565b634e487b7160e01b600052601160045260246000fd5b346102905760603660031901126102905760206001600160601b0360406104b0611454565b60ff6104ba611606565b9116600052600184526103b26103ab6103a560443585600020611474565b34610290576040366003190112610290576104f1611454565b602435906001600160401b0382116102905761051461022b92369060040161162f565b9061051d611c1e565b61052681611932565b6122c9565b346102905760203660031901126102905760ff610546611454565b16600052600060205260206001600160601b0360406000205416604051908152f35b34610290576040366003190112610290576004356024356001600160401b0381116102905761059b9036906004016114d2565b6105a6929192611d4e565b60005b8181106105b257005b806105e06105c3600193858861175b565b3560f81c6105d081611932565b6105da8187611e00565b90612189565b50016105a9565b346102905760403660031901126102905761022b610603611454565b61060b611619565b90610614611c1e565b61061d81611932565b612263565b346102905760403660031901126102905760ff61063d611454565b6106456117c2565b5016600052600160205260606103126103a56024356040600020611474565b346102905760403660031901126102905760ff61067f611454565b6106876117e1565b5016600052600360205260406106ab6106a560243583600020611474565b506117fa565b6001600160601b03602083519260018060a01b0381511684520151166020820152f35b34610290576060366003190112610290576106e7611454565b6106ef6117c2565b50602435600052600260205260ff6040600020911660005260205260606103126103a5604060002060443590611474565b3461029057604036600319011261029057610739611454565b60ff60243591166000526004602052604060002080548210156102905760209161076291611474565b905460405160039290921b1c6001600160a01b03168152f35b346102905760403660031901126102905760043563ffffffff8116809103610290576024356001600160401b038111610290576107bc9036906004016114d2565b91906107c7836115ef565b916107d560405193846115ce565b8383526107e1846115ef565b602084019490601f190136863760005b8181106108435785856040519182916020830190602084525180915260408301919060005b818110610824575050500390f35b825163ffffffff16845285945060209384019390920191600101610816565b610850818386989661175b565b3560f81c61085d81611932565b60008181526001602052604081208054156109e45790602091815220908463ffffffff6000935416116109535780825260016020526040822054825b8181106108b0575b505050506001019492946107f1565b8284526001602052604084206108c682846117b5565b60001981019190821161093f576108e3899263ffffffff92611474565b50541611156108f457600101610899565b906108ff92506117b5565b60001981019190821161092b57509063ffffffff600192166109218288611767565b52908780806108a1565b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b86526011600452602486fd5b60405162461bcd60e51b815260206004820152605b60248201527f5374616b6552656769737472792e676574546f74616c5374616b65496e64696360448201527f65734174426c6f636b4e756d6265723a2071756f72756d20686173206e6f207360648201527f74616b6520686973746f727920617420626c6f636b4e756d6265720000000000608482015260a490fd5b634e487b7160e01b82526032600452602482fd5b34610290576000366003190112610290576020604051818152f35b34610290576000366003190112610290576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461029057610a66366114ff565b929091610a71611d4e565b60009360005b818110610a92576040516001600160c01b0387168152602090f35b80610acb610aa3600193858961175b565b3560f81c610ab081611932565b610aba87826119d2565b15610ad2575b6105da908288611fc2565b5001610a77565b5083811b60c085901b859003908116991698909817976000610ac0565b3461029057604036600319011261029057610b08611454565b602435906001600160401b038211610290573660238301121561029057816004013591610b34836115ef565b92610b4260405194856115ce565b8084526024602085019160051b8301019136831161029057602401905b828210610dfe57505050610b71611c1e565b610b7a81611932565b8151908115610d935760ff1691826000526003602052604060002083600052600460205260406000209360005b848110610bb057005b817f31fa2e2cd280c9375e13ffcf3d81e2378100186e4058f8d3ddb690b82dcd31f76020610be8610be18589611767565b5187611474565b50546040516001600160a01b039091168152a2817f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a756040610c2c610be18589611767565b505481516001600160a01b03909116815260006020820152a28254600019810190811161047557610c5d9084611474565b50610c72610c6b8387611767565b5185611474565b610d4f57818103610d65575b505082548015610d395760001901610c968185611474565b610d4f576000905583558554600019810190811161047557610cbb610d059188611474565b905460039190911b1c6001600160a01b0316610ce1610cda8488611767565b5189611474565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b8554908115610d395760019160001901610d1f8189611474565b815490858060a01b039060031b1b19169055875501610ba7565b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052600060045260246000fd5b815481546001600160a01b039091166001600160a01b03199182168117835592541690911790558680610c7e565b60405162461bcd60e51b815260206004820152603d60248201527f5374616b6552656769737472792e72656d6f7665537472617465676965733a2060448201527f6e6f20696e646963657320746f2072656d6f76652070726f76696465640000006064820152608490fd5b8135815260209182019101610b5f565b34610290576000366003190112610290576020604051670de0b6b3a76400008152f35b346102905760403660031901126102905760206001600160601b0360406103b261030a611464565b3461029057604036600319011261029057610e72611464565b600435600052600260205260ff604060002091166000526020526020604060002054604051908152f35b346102905760203660031901126102905760ff610eb7611454565b1660005260036020526020604060002054604051908152f35b3461029057604036600319011261029057610ee9611464565b600435600052600260205260ff604060002091166000526020526040600020805490610f14826115ef565b91610f2260405193846115ce565b80835260208301809260005260206000206000915b838310610fb75784866040519182916020830190602084525180915260408301919060005b818110610f6a575050500390f35b919350916020606082610fa960019488516001600160601b036040809263ffffffff815116855263ffffffff6020820151166020860152015116910152565b019401910191849392610f5c565b600160208192610fc68561177b565b815201920192019190610f37565b3461029057610fe2366114ff565b90610fee939293611d4e565b610ff782611729565b9261100183611729565b9260005b81811061103a576110288661103687604051938493604085526040850190611545565b908382036020850152611545565b0390f35b61104581838661175b565b3560f81c9061105382611932565b61105d84836119d2565b929092156110af578281611077600195611093948d611fc2565b916001600160601b0361108a868d611767565b91169052612189565b6001600160601b036110a58389611767565b9116905201611005565b60405162461bcd60e51b815260206004820152605b60248201527f5374616b6552656769737472792e72656769737465724f70657261746f723a2060448201527f4f70657261746f7220646f6573206e6f74206d656574206d696e696d756d207360648201527f74616b6520726571756972656d656e7420666f722071756f72756d0000000000608482015260a490fd5b3461029057606036600319011261029057611159611454565b6024356001600160401b038111610290576111789036906004016114a2565b916044356001600160401b038111610290576111989036906004016114a2565b90916111a2611c1e565b6111ab81611932565b84156113075784820361129c5760ff169182600052600360205260406000209360005b8681106111d757005b806112296111f06111eb6001948888611705565b611715565b6112056111fe848c88611705565b358a611474565b5080546001600160a01b031660a09290921b6001600160a01b031916919091179055565b857f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a756112596111fe848c88611705565b50848060a01b039054166112716111eb858a8a611705565b604080516001600160a01b039390931683526001600160601b0391909116602083015290a2016111ce565b60405162461bcd60e51b815260206004820152603960248201527f5374616b6552656769737472792e6d6f6469667953747261746567795061726160448201527f6d733a20696e707574206c656e677468206d69736d61746368000000000000006064820152608490fd5b608460405162461bcd60e51b815260206004820152604060248201527f5374616b6552656769737472792e6d6f6469667953747261746567795061726160448201527f6d733a206e6f20737472617465677920696e64696365732070726f76696465646064820152fd5b346102905760403660031901126102905761138a611454565b602435906001600160a01b038216820361029057602091816113ae6113b393611932565b6119d2565b506001600160601b0360405191168152f35b34610290576040366003190112610290576113de611454565b60ff60243591166000526003602052604060002080548210156102905760409161140791611474565b505481516001600160a01b038216815260a09190911c6020820152f35b346102905760203660031901126102905760209060ff611442611454565b16600052600182526040600020548152f35b6004359060ff8216820361029057565b6024359060ff8216820361029057565b805482101561148c5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b9181601f84011215610290578235916001600160401b038311610290576020808501948460051b01011161029057565b9181601f84011215610290578235916001600160401b038311610290576020838186019501011161029057565b6060600319820112610290576004356001600160a01b0381168103610290579160243591604435906001600160401b03821161029057611541916004016114d2565b9091565b906020808351928381520192019060005b8181106115635750505090565b82516001600160601b0316845260209384019390920191600101611556565b606081019081106001600160401b0382111761159d57604052565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b0382111761159d57604052565b90601f801991011681019081106001600160401b0382111761159d57604052565b6001600160401b03811161159d5760051b60200190565b6024359063ffffffff8216820361029057565b602435906001600160601b038216820361029057565b81601f8201121561029057803590611646826115ef565b9261165460405194856115ce565b82845260208085019360061b8301019181831161029057602001925b82841061167e575050505090565b6040848303126102905760405190611695826115b3565b84356001600160a01b03811681036102905782526020850135906001600160601b03821682036102905782602092836040950152815201930192611670565b6060906003190112610290576004359060243560ff81168103610290579060443563ffffffff811681036102905790565b919081101561148c5760051b0190565b356001600160601b03811681036102905790565b90611733826115ef565b61174060405191826115ce565b8281528092611751601f19916115ef565b0190602036910137565b9082101561148c570190565b805182101561148c5760209160051b010190565b9060405161178881611582565b60406001600160601b0382945463ffffffff8116845263ffffffff8160201c166020850152821c16910152565b9190820391821161047557565b604051906117cf82611582565b60006040838281528260208201520152565b604051906117ee826115b3565b60006020838281520152565b90604051611807816115b3565b91546001600160a01b038116835260a01c6020830152565b906118286117c2565b50816000526002602052604060002060ff8216600052602052604060002054906118506117c2565b928261185c5750505090565b90919250600052600260205260ff604060002091166000526020526040600020600019820191821161047557611895916103a591611474565b90565b906bffffffffffffffffffffffff60401b82549160401b16906bffffffffffffffffffffffff60401b1916179055565b8054600160401b81101561159d576118e591600182018155611474565b610d4f578151815460208085015167ffffffff00000000911b1663ffffffff90921667ffffffffffffffff1990911617178155611930916001600160601b0390604001511690611898565b565b61194c9060ff166000526001602052604060002054151590565b1561195357565b60405162461bcd60e51b815260206004820152603160248201527f5374616b6552656769737472792e71756f72756d4578697374733a2071756f726044820152701d5b48191bd95cc81b9bdd08195e1a5cdd607a1b6064820152608490fd5b906001600160601b03809116911601906001600160601b03821161047557565b919060ff6000931690816000526003602052604060002054906000604051906119fa826115b3565b8082526020918201526000848152600480835260408083208151639004134760e01b81526001600160a01b03909616928601929092526024850152805460448501819052908252918120839260648401925b818110611bfc57506000939283900391508290507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611bf057600091611b56575b5060005b828110611acf5750505060005260006020526001600160601b03604060002054166001600160601b038316101590565b836000526003602052611ae96106a5826040600020611474565b611af38284611767565b51611b02575b50600101611a9f565b6001600160601b036020611b1984869a959a611767565b519201511690818102918183041490151715610475576001916001600160601b03670de0b6b3a7640000611b4f930416906119b2565b9590611af9565b3d8083833e611b6581836115ce565b810190602081830312611be8578051906001600160401b038211611bec570181601f82011215611be857805190611b9b826115ef565b93611ba960405195866115ce565b82855260208086019360051b830101938411611be55750602001905b828210611bd55750505038611a9b565b8151815260209182019101611bc5565b80fd5b8280fd5b8380fd5b6040513d6000823e3d90fd5b82546001600160a01b0316845285945060209093019260019283019201611a4c565b604051638da5cb5b60e01b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611bf057600091611d08575b506001600160a01b03163303611c7e57565b60405162461bcd60e51b815260206004820152605660248201527f5374616b6552656769737472792e6f6e6c79436f6f7264696e61746f724f776e60448201527f65723a2063616c6c6572206973206e6f7420746865206f776e6572206f6620746064820152753432903932b3b4b9ba393ca1b7b7b93234b730ba37b960511b608482015260a490fd5b6020813d602011611d46575b81611d21602093836115ce565b81010312611d425751906001600160a01b0382168203611be5575038611c6c565b5080fd5b3d9150611d14565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303611d8057565b60405162461bcd60e51b815260206004820152604c60248201527f5374616b6552656769737472792e6f6e6c795265676973747279436f6f72646960448201527f6e61746f723a2063616c6c6572206973206e6f7420746865205265676973747260648201526b3ca1b7b7b93234b730ba37b960a11b608482015260a490fd5b600090806000526002602052604060002060ff84166000526020526040600020548015600014611eb8575060008051602061296d83398151915260406001600160601b03948360005260026020528160002060ff8216600052602052611e8a82600020835190611e6f82611582565b63ffffffff43168252600060208301526000858301526118c8565b60ff82519116815260006020820152a216600081810391126000821281169060008313901516176104755790565b908092506000526002602052604060002060ff8416600052602052604060002090600019810190811161047557611eee91611474565b50908154916001600160601b038360401c16928315611fb8576001600160601b039460008051602061296d8339815191529260409263ffffffff43811691168103611f545750805473ffffffffffffffffffffffff000000000000000019169055611e8a565b815467ffffffff000000001916602082901b67ffffffff000000001617909155611fb3908560005260026020528360002060ff841660005260205283600020845191611f9f83611582565b8252600060208301526000858301526118c8565b611e8a565b5050505050600090565b919091600090806000526002602052604060002060ff8516600052602052604060002054801560001461207e575060008051602061296d83398151915260406001600160601b0380958460005260026020528260002060ff89166000526020526120518360002084519061203582611582565b63ffffffff4316825260006020830152848416868301526118c8565b60ff8351981688521695866020820152a21690600082820392128183128116918313901516176104755790565b908092506000526002602052604060002060ff85166000526020526040600020906000198101908111610475576120b491611474565b50908154916001600160601b038360401c16926001600160601b0385169081851461217d578560008051602061296d833981519152936001600160601b039763ffffffff6040958a95824316928391161460001461211c57505061211791611898565b612051565b835467ffffffff000000001916602083901b67ffffffff000000001617909355612117929091508760005260026020528560002060ff8c16600052602052856000209086519261216b84611582565b835260006020840152868301526118c8565b50505050505050600090565b60ff16600081815260016020526040902080549192916000198101908111610475576121b491611474565b509080156122505763ffffffff6121d98354926001600160601b038460401c16612921565b938492438316921682036121f257505061189591611898565b835467ffffffff000000001916602083901b67ffffffff00000000161790935561189592909150600052600160205260406000206040519161223383611582565b8252600060208301526001600160601b03841660408301526118c8565b506001600160601b0391505460401c1690565b602060ff7f26eecff2b70b0a71104ff4d940ba7162d23a95c248771fc487a7be17a596b3cf92169283600052600082526001600160601b036040600020911690816001600160601b0319825416179055604051908152a2565b9190820180921161047557565b8151156126125760ff82519116918260005260036020526040600020549260206122f384866122bc565b116125ab576000925b80841061230a575050505050565b909192939460005b61231c86886122bc565b8110156123bb5783600052600360205261233a816040600020611474565b50546001600160a01b03908116906123528888611767565b5151161461236257600101612312565b60405162461bcd60e51b815260206004820152603d602482015260008051602061298d83398151915260448201527f3a2063616e6e6f74206164642073616d652073747261746567792032780000006064820152608490fd5b509493929190926001600160601b0360206123d68386611767565b51015116156125435781600052600360205260406000206123f78285611767565b51908054600160401b81101561159d5761241691600182018155611474565b610d4f5781516020929092015160a01b6001600160a01b0319166001600160a01b03929092169190911790556000828152600460205260409020906001600160a01b036124638286611767565b515116825490600160401b82101561159d57610ce1826001958661248995018155611474565b827f10565e56cacbf32eca267945f054fec02e59750032d113d3302182ad967f54046020848060a01b036124bd8589611767565b515116604051908152a2827f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a75838060a01b036124f98488611767565b5151166001600160601b036020612510868a611767565b510151604080516001600160a01b0394909416845291166001600160601b03166020830152819081010390a201926122fc565b60405162461bcd60e51b8152602060048201526046602482015260008051602061298d83398151915260448201527f3a2063616e6e6f74206164642073747261746567792077697468207a65726f206064820152651dd95a59da1d60d21b608482015260a490fd5b60405162461bcd60e51b8152602060048201526045602482015260008051602061298d83398151915260448201527f3a20657863656564204d41585f5745494748494e475f46554e4354494f4e5f4c60648201526408a9c8ea8960db1b608482015260a490fd5b60405162461bcd60e51b8152602060048201526038602482015260008051602061298d83398151915260448201527f3a206e6f20737472617465676965732070726f766964656400000000000000006064820152608490fd5b63ffffffff808251169216918210612748576020015163ffffffff16801591821561273e575b50501561269a57565b60405162461bcd60e51b815260206004820152606a60248201527f5374616b6552656769737472792e5f76616c69646174655374616b655570646160448201527f74654174426c6f636b4e756d6265723a2074686572652069732061206e65776560648201527f72207374616b6555706461746520617661696c61626c65206265666f726520626084820152693637b1b5a73ab6b132b960b11b60a482015260c490fd5b1090503880612691565b60405162461bcd60e51b815260206004820152605660248201527f5374616b6552656769737472792e5f76616c69646174655374616b655570646160448201527f74654174426c6f636b4e756d6265723a207374616b6555706461746520697320606482015275333937b69030b33a32b910313637b1b5a73ab6b132b960511b608482015260a490fd5b92919092806000526002602052604060002060ff8516600052602052604060002054805b6128bb5760405162461bcd60e51b815260206004820152608160248201527f5374616b6552656769737472792e5f6765745374616b65557064617465496e6460448201527f6578466f724f70657261746f724174426c6f636b4e756d6265723a206e6f207360648201527f74616b652075706461746520666f756e6420666f72206f70657261746f72496460848201527f20616e642071756f72756d4e756d62657220617420626c6f636b206e756d626560a4820152603960f91b60c482015260e490fd5b81600052600260205260408060002060009060ff8816825260205220600019820190828211610475576128f38263ffffffff92611474565b50541663ffffffff85161015612914575080156104755760001901806127f6565b63ffffffff169450505050565b90600081121561295857600160ff1b8114610475576001600160601b038091600003169116036001600160601b0381116104755790565b906001600160601b036118959216906119b256fe2f527d527e95d8fe40aec55377743bb779087da3f6d0d08f12e36444da62327d5374616b6552656769737472792e5f6164645374726174656779506172616d73a2646970667358221220f0d18f2e2b70f53f067e64da43d0249596a83f641b7d89b1ee198941287fcc7c64736f6c634300081a0033","sourceMap":"960:31883:85:-:0;;;;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;2269:51:86;;2330:31;;960:31883:85;;;;;;;;2330:31:86;960:31883:85;;;;;;;;;;2269:51:86;960:31883:85;;;;;;;;;;;;;;;;;-1:-1:-1;960:31883:85;;;;;;-1:-1:-1;960:31883:85;;;;;-1:-1:-1;960:31883:85","linkReferences":{}},"deployedBytecode":{"object":"0x608080604052600436101561001357600080fd5b60003560e01c9081630491b41c146114245750806308732461146113c55780631f9b74e01461137157806320b66298146111405780632550477714610fd45780632cd9594014610ed05780633ca5a5f514610e9c5780634bd26e0914610e595780635401ed2714610e315780635e5a677514610e0e5780635f1f2d7714610aef57806366acfefe14610a585780636d14a98714610a135780637c172347146109f857806381c075021461077b5780639f3ccf6514610720578063ac6bfb03146106ce578063adc804da14610664578063b6904b7814610622578063bc9a40c3146105e7578063bd29b8cd14610568578063c46778a51461052b578063c601527d146104d8578063c8294c561461048b578063d5eccc0514610429578063dd9846b914610402578063df5cf723146103bd578063f2be94ae1461034a578063f851e198146102ec578063fa28c627146102955763ff694a771461017457600080fd5b346102905760603660031901126102905761018d611454565b610195611619565b906044356001600160401b038111610290576101b590369060040161162f565b6101bd611d4e565b6101d78260ff166000526001602052604060002054151590565b61022d5760ff926101eb6101f192846122c9565b82612263565b16600052600160205261022b60406000206040519061020f82611582565b63ffffffff4316825260006020830152600060408301526118c8565b005b60405162461bcd60e51b815260206004820152603560248201527f5374616b6552656769737472792e696e697469616c697a6551756f72756d3a2060448201527471756f72756d20616c72656164792065786973747360581b6064820152608490fd5b600080fd5b346102905760206001600160601b036102de6102d86102b3366116d4565b908260009493945260028752604060002060ff821660005287526040600020936127d2565b90611474565b505460401c16604051908152f35b3461029057604036600319011261029057606061031261030a611464565b60043561181f565b61034860405180926001600160601b036040809263ffffffff815116855263ffffffff6020820151166020860152015116910152565bf35b346102905760803660031901126102905760206001600160601b03604061036f611454565b610377611606565b906044356000526002855260ff83600020911660005284526103b26103ab6103a58460002060643590611474565b5061177b565b918261266b565b015116604051908152f35b34610290576000366003190112610290576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461029057602061041b610415366116d4565b916127d2565b63ffffffff60405191168152f35b346102905760203660031901126102905760ff610444611454565b16600090815260016020526040902080546000198101908111610475576102de6001600160601b0391602093611474565b634e487b7160e01b600052601160045260246000fd5b346102905760603660031901126102905760206001600160601b0360406104b0611454565b60ff6104ba611606565b9116600052600184526103b26103ab6103a560443585600020611474565b34610290576040366003190112610290576104f1611454565b602435906001600160401b0382116102905761051461022b92369060040161162f565b9061051d611c1e565b61052681611932565b6122c9565b346102905760203660031901126102905760ff610546611454565b16600052600060205260206001600160601b0360406000205416604051908152f35b34610290576040366003190112610290576004356024356001600160401b0381116102905761059b9036906004016114d2565b6105a6929192611d4e565b60005b8181106105b257005b806105e06105c3600193858861175b565b3560f81c6105d081611932565b6105da8187611e00565b90612189565b50016105a9565b346102905760403660031901126102905761022b610603611454565b61060b611619565b90610614611c1e565b61061d81611932565b612263565b346102905760403660031901126102905760ff61063d611454565b6106456117c2565b5016600052600160205260606103126103a56024356040600020611474565b346102905760403660031901126102905760ff61067f611454565b6106876117e1565b5016600052600360205260406106ab6106a560243583600020611474565b506117fa565b6001600160601b03602083519260018060a01b0381511684520151166020820152f35b34610290576060366003190112610290576106e7611454565b6106ef6117c2565b50602435600052600260205260ff6040600020911660005260205260606103126103a5604060002060443590611474565b3461029057604036600319011261029057610739611454565b60ff60243591166000526004602052604060002080548210156102905760209161076291611474565b905460405160039290921b1c6001600160a01b03168152f35b346102905760403660031901126102905760043563ffffffff8116809103610290576024356001600160401b038111610290576107bc9036906004016114d2565b91906107c7836115ef565b916107d560405193846115ce565b8383526107e1846115ef565b602084019490601f190136863760005b8181106108435785856040519182916020830190602084525180915260408301919060005b818110610824575050500390f35b825163ffffffff16845285945060209384019390920191600101610816565b610850818386989661175b565b3560f81c61085d81611932565b60008181526001602052604081208054156109e45790602091815220908463ffffffff6000935416116109535780825260016020526040822054825b8181106108b0575b505050506001019492946107f1565b8284526001602052604084206108c682846117b5565b60001981019190821161093f576108e3899263ffffffff92611474565b50541611156108f457600101610899565b906108ff92506117b5565b60001981019190821161092b57509063ffffffff600192166109218288611767565b52908780806108a1565b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b86526011600452602486fd5b60405162461bcd60e51b815260206004820152605b60248201527f5374616b6552656769737472792e676574546f74616c5374616b65496e64696360448201527f65734174426c6f636b4e756d6265723a2071756f72756d20686173206e6f207360648201527f74616b6520686973746f727920617420626c6f636b4e756d6265720000000000608482015260a490fd5b634e487b7160e01b82526032600452602482fd5b34610290576000366003190112610290576020604051818152f35b34610290576000366003190112610290576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461029057610a66366114ff565b929091610a71611d4e565b60009360005b818110610a92576040516001600160c01b0387168152602090f35b80610acb610aa3600193858961175b565b3560f81c610ab081611932565b610aba87826119d2565b15610ad2575b6105da908288611fc2565b5001610a77565b5083811b60c085901b859003908116991698909817976000610ac0565b3461029057604036600319011261029057610b08611454565b602435906001600160401b038211610290573660238301121561029057816004013591610b34836115ef565b92610b4260405194856115ce565b8084526024602085019160051b8301019136831161029057602401905b828210610dfe57505050610b71611c1e565b610b7a81611932565b8151908115610d935760ff1691826000526003602052604060002083600052600460205260406000209360005b848110610bb057005b817f31fa2e2cd280c9375e13ffcf3d81e2378100186e4058f8d3ddb690b82dcd31f76020610be8610be18589611767565b5187611474565b50546040516001600160a01b039091168152a2817f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a756040610c2c610be18589611767565b505481516001600160a01b03909116815260006020820152a28254600019810190811161047557610c5d9084611474565b50610c72610c6b8387611767565b5185611474565b610d4f57818103610d65575b505082548015610d395760001901610c968185611474565b610d4f576000905583558554600019810190811161047557610cbb610d059188611474565b905460039190911b1c6001600160a01b0316610ce1610cda8488611767565b5189611474565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b8554908115610d395760019160001901610d1f8189611474565b815490858060a01b039060031b1b19169055875501610ba7565b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052600060045260246000fd5b815481546001600160a01b039091166001600160a01b03199182168117835592541690911790558680610c7e565b60405162461bcd60e51b815260206004820152603d60248201527f5374616b6552656769737472792e72656d6f7665537472617465676965733a2060448201527f6e6f20696e646963657320746f2072656d6f76652070726f76696465640000006064820152608490fd5b8135815260209182019101610b5f565b34610290576000366003190112610290576020604051670de0b6b3a76400008152f35b346102905760403660031901126102905760206001600160601b0360406103b261030a611464565b3461029057604036600319011261029057610e72611464565b600435600052600260205260ff604060002091166000526020526020604060002054604051908152f35b346102905760203660031901126102905760ff610eb7611454565b1660005260036020526020604060002054604051908152f35b3461029057604036600319011261029057610ee9611464565b600435600052600260205260ff604060002091166000526020526040600020805490610f14826115ef565b91610f2260405193846115ce565b80835260208301809260005260206000206000915b838310610fb75784866040519182916020830190602084525180915260408301919060005b818110610f6a575050500390f35b919350916020606082610fa960019488516001600160601b036040809263ffffffff815116855263ffffffff6020820151166020860152015116910152565b019401910191849392610f5c565b600160208192610fc68561177b565b815201920192019190610f37565b3461029057610fe2366114ff565b90610fee939293611d4e565b610ff782611729565b9261100183611729565b9260005b81811061103a576110288661103687604051938493604085526040850190611545565b908382036020850152611545565b0390f35b61104581838661175b565b3560f81c9061105382611932565b61105d84836119d2565b929092156110af578281611077600195611093948d611fc2565b916001600160601b0361108a868d611767565b91169052612189565b6001600160601b036110a58389611767565b9116905201611005565b60405162461bcd60e51b815260206004820152605b60248201527f5374616b6552656769737472792e72656769737465724f70657261746f723a2060448201527f4f70657261746f7220646f6573206e6f74206d656574206d696e696d756d207360648201527f74616b6520726571756972656d656e7420666f722071756f72756d0000000000608482015260a490fd5b3461029057606036600319011261029057611159611454565b6024356001600160401b038111610290576111789036906004016114a2565b916044356001600160401b038111610290576111989036906004016114a2565b90916111a2611c1e565b6111ab81611932565b84156113075784820361129c5760ff169182600052600360205260406000209360005b8681106111d757005b806112296111f06111eb6001948888611705565b611715565b6112056111fe848c88611705565b358a611474565b5080546001600160a01b031660a09290921b6001600160a01b031916919091179055565b857f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a756112596111fe848c88611705565b50848060a01b039054166112716111eb858a8a611705565b604080516001600160a01b039390931683526001600160601b0391909116602083015290a2016111ce565b60405162461bcd60e51b815260206004820152603960248201527f5374616b6552656769737472792e6d6f6469667953747261746567795061726160448201527f6d733a20696e707574206c656e677468206d69736d61746368000000000000006064820152608490fd5b608460405162461bcd60e51b815260206004820152604060248201527f5374616b6552656769737472792e6d6f6469667953747261746567795061726160448201527f6d733a206e6f20737472617465677920696e64696365732070726f76696465646064820152fd5b346102905760403660031901126102905761138a611454565b602435906001600160a01b038216820361029057602091816113ae6113b393611932565b6119d2565b506001600160601b0360405191168152f35b34610290576040366003190112610290576113de611454565b60ff60243591166000526003602052604060002080548210156102905760409161140791611474565b505481516001600160a01b038216815260a09190911c6020820152f35b346102905760203660031901126102905760209060ff611442611454565b16600052600182526040600020548152f35b6004359060ff8216820361029057565b6024359060ff8216820361029057565b805482101561148c5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b9181601f84011215610290578235916001600160401b038311610290576020808501948460051b01011161029057565b9181601f84011215610290578235916001600160401b038311610290576020838186019501011161029057565b6060600319820112610290576004356001600160a01b0381168103610290579160243591604435906001600160401b03821161029057611541916004016114d2565b9091565b906020808351928381520192019060005b8181106115635750505090565b82516001600160601b0316845260209384019390920191600101611556565b606081019081106001600160401b0382111761159d57604052565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b0382111761159d57604052565b90601f801991011681019081106001600160401b0382111761159d57604052565b6001600160401b03811161159d5760051b60200190565b6024359063ffffffff8216820361029057565b602435906001600160601b038216820361029057565b81601f8201121561029057803590611646826115ef565b9261165460405194856115ce565b82845260208085019360061b8301019181831161029057602001925b82841061167e575050505090565b6040848303126102905760405190611695826115b3565b84356001600160a01b03811681036102905782526020850135906001600160601b03821682036102905782602092836040950152815201930192611670565b6060906003190112610290576004359060243560ff81168103610290579060443563ffffffff811681036102905790565b919081101561148c5760051b0190565b356001600160601b03811681036102905790565b90611733826115ef565b61174060405191826115ce565b8281528092611751601f19916115ef565b0190602036910137565b9082101561148c570190565b805182101561148c5760209160051b010190565b9060405161178881611582565b60406001600160601b0382945463ffffffff8116845263ffffffff8160201c166020850152821c16910152565b9190820391821161047557565b604051906117cf82611582565b60006040838281528260208201520152565b604051906117ee826115b3565b60006020838281520152565b90604051611807816115b3565b91546001600160a01b038116835260a01c6020830152565b906118286117c2565b50816000526002602052604060002060ff8216600052602052604060002054906118506117c2565b928261185c5750505090565b90919250600052600260205260ff604060002091166000526020526040600020600019820191821161047557611895916103a591611474565b90565b906bffffffffffffffffffffffff60401b82549160401b16906bffffffffffffffffffffffff60401b1916179055565b8054600160401b81101561159d576118e591600182018155611474565b610d4f578151815460208085015167ffffffff00000000911b1663ffffffff90921667ffffffffffffffff1990911617178155611930916001600160601b0390604001511690611898565b565b61194c9060ff166000526001602052604060002054151590565b1561195357565b60405162461bcd60e51b815260206004820152603160248201527f5374616b6552656769737472792e71756f72756d4578697374733a2071756f726044820152701d5b48191bd95cc81b9bdd08195e1a5cdd607a1b6064820152608490fd5b906001600160601b03809116911601906001600160601b03821161047557565b919060ff6000931690816000526003602052604060002054906000604051906119fa826115b3565b8082526020918201526000848152600480835260408083208151639004134760e01b81526001600160a01b03909616928601929092526024850152805460448501819052908252918120839260648401925b818110611bfc57506000939283900391508290507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611bf057600091611b56575b5060005b828110611acf5750505060005260006020526001600160601b03604060002054166001600160601b038316101590565b836000526003602052611ae96106a5826040600020611474565b611af38284611767565b51611b02575b50600101611a9f565b6001600160601b036020611b1984869a959a611767565b519201511690818102918183041490151715610475576001916001600160601b03670de0b6b3a7640000611b4f930416906119b2565b9590611af9565b3d8083833e611b6581836115ce565b810190602081830312611be8578051906001600160401b038211611bec570181601f82011215611be857805190611b9b826115ef565b93611ba960405195866115ce565b82855260208086019360051b830101938411611be55750602001905b828210611bd55750505038611a9b565b8151815260209182019101611bc5565b80fd5b8280fd5b8380fd5b6040513d6000823e3d90fd5b82546001600160a01b0316845285945060209093019260019283019201611a4c565b604051638da5cb5b60e01b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611bf057600091611d08575b506001600160a01b03163303611c7e57565b60405162461bcd60e51b815260206004820152605660248201527f5374616b6552656769737472792e6f6e6c79436f6f7264696e61746f724f776e60448201527f65723a2063616c6c6572206973206e6f7420746865206f776e6572206f6620746064820152753432903932b3b4b9ba393ca1b7b7b93234b730ba37b960511b608482015260a490fd5b6020813d602011611d46575b81611d21602093836115ce565b81010312611d425751906001600160a01b0382168203611be5575038611c6c565b5080fd5b3d9150611d14565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303611d8057565b60405162461bcd60e51b815260206004820152604c60248201527f5374616b6552656769737472792e6f6e6c795265676973747279436f6f72646960448201527f6e61746f723a2063616c6c6572206973206e6f7420746865205265676973747260648201526b3ca1b7b7b93234b730ba37b960a11b608482015260a490fd5b600090806000526002602052604060002060ff84166000526020526040600020548015600014611eb8575060008051602061296d83398151915260406001600160601b03948360005260026020528160002060ff8216600052602052611e8a82600020835190611e6f82611582565b63ffffffff43168252600060208301526000858301526118c8565b60ff82519116815260006020820152a216600081810391126000821281169060008313901516176104755790565b908092506000526002602052604060002060ff8416600052602052604060002090600019810190811161047557611eee91611474565b50908154916001600160601b038360401c16928315611fb8576001600160601b039460008051602061296d8339815191529260409263ffffffff43811691168103611f545750805473ffffffffffffffffffffffff000000000000000019169055611e8a565b815467ffffffff000000001916602082901b67ffffffff000000001617909155611fb3908560005260026020528360002060ff841660005260205283600020845191611f9f83611582565b8252600060208301526000858301526118c8565b611e8a565b5050505050600090565b919091600090806000526002602052604060002060ff8516600052602052604060002054801560001461207e575060008051602061296d83398151915260406001600160601b0380958460005260026020528260002060ff89166000526020526120518360002084519061203582611582565b63ffffffff4316825260006020830152848416868301526118c8565b60ff8351981688521695866020820152a21690600082820392128183128116918313901516176104755790565b908092506000526002602052604060002060ff85166000526020526040600020906000198101908111610475576120b491611474565b50908154916001600160601b038360401c16926001600160601b0385169081851461217d578560008051602061296d833981519152936001600160601b039763ffffffff6040958a95824316928391161460001461211c57505061211791611898565b612051565b835467ffffffff000000001916602083901b67ffffffff000000001617909355612117929091508760005260026020528560002060ff8c16600052602052856000209086519261216b84611582565b835260006020840152868301526118c8565b50505050505050600090565b60ff16600081815260016020526040902080549192916000198101908111610475576121b491611474565b509080156122505763ffffffff6121d98354926001600160601b038460401c16612921565b938492438316921682036121f257505061189591611898565b835467ffffffff000000001916602083901b67ffffffff00000000161790935561189592909150600052600160205260406000206040519161223383611582565b8252600060208301526001600160601b03841660408301526118c8565b506001600160601b0391505460401c1690565b602060ff7f26eecff2b70b0a71104ff4d940ba7162d23a95c248771fc487a7be17a596b3cf92169283600052600082526001600160601b036040600020911690816001600160601b0319825416179055604051908152a2565b9190820180921161047557565b8151156126125760ff82519116918260005260036020526040600020549260206122f384866122bc565b116125ab576000925b80841061230a575050505050565b909192939460005b61231c86886122bc565b8110156123bb5783600052600360205261233a816040600020611474565b50546001600160a01b03908116906123528888611767565b5151161461236257600101612312565b60405162461bcd60e51b815260206004820152603d602482015260008051602061298d83398151915260448201527f3a2063616e6e6f74206164642073616d652073747261746567792032780000006064820152608490fd5b509493929190926001600160601b0360206123d68386611767565b51015116156125435781600052600360205260406000206123f78285611767565b51908054600160401b81101561159d5761241691600182018155611474565b610d4f5781516020929092015160a01b6001600160a01b0319166001600160a01b03929092169190911790556000828152600460205260409020906001600160a01b036124638286611767565b515116825490600160401b82101561159d57610ce1826001958661248995018155611474565b827f10565e56cacbf32eca267945f054fec02e59750032d113d3302182ad967f54046020848060a01b036124bd8589611767565b515116604051908152a2827f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a75838060a01b036124f98488611767565b5151166001600160601b036020612510868a611767565b510151604080516001600160a01b0394909416845291166001600160601b03166020830152819081010390a201926122fc565b60405162461bcd60e51b8152602060048201526046602482015260008051602061298d83398151915260448201527f3a2063616e6e6f74206164642073747261746567792077697468207a65726f206064820152651dd95a59da1d60d21b608482015260a490fd5b60405162461bcd60e51b8152602060048201526045602482015260008051602061298d83398151915260448201527f3a20657863656564204d41585f5745494748494e475f46554e4354494f4e5f4c60648201526408a9c8ea8960db1b608482015260a490fd5b60405162461bcd60e51b8152602060048201526038602482015260008051602061298d83398151915260448201527f3a206e6f20737472617465676965732070726f766964656400000000000000006064820152608490fd5b63ffffffff808251169216918210612748576020015163ffffffff16801591821561273e575b50501561269a57565b60405162461bcd60e51b815260206004820152606a60248201527f5374616b6552656769737472792e5f76616c69646174655374616b655570646160448201527f74654174426c6f636b4e756d6265723a2074686572652069732061206e65776560648201527f72207374616b6555706461746520617661696c61626c65206265666f726520626084820152693637b1b5a73ab6b132b960b11b60a482015260c490fd5b1090503880612691565b60405162461bcd60e51b815260206004820152605660248201527f5374616b6552656769737472792e5f76616c69646174655374616b655570646160448201527f74654174426c6f636b4e756d6265723a207374616b6555706461746520697320606482015275333937b69030b33a32b910313637b1b5a73ab6b132b960511b608482015260a490fd5b92919092806000526002602052604060002060ff8516600052602052604060002054805b6128bb5760405162461bcd60e51b815260206004820152608160248201527f5374616b6552656769737472792e5f6765745374616b65557064617465496e6460448201527f6578466f724f70657261746f724174426c6f636b4e756d6265723a206e6f207360648201527f74616b652075706461746520666f756e6420666f72206f70657261746f72496460848201527f20616e642071756f72756d4e756d62657220617420626c6f636b206e756d626560a4820152603960f91b60c482015260e490fd5b81600052600260205260408060002060009060ff8816825260205220600019820190828211610475576128f38263ffffffff92611474565b50541663ffffffff85161015612914575080156104755760001901806127f6565b63ffffffff169450505050565b90600081121561295857600160ff1b8114610475576001600160601b038091600003169116036001600160601b0381116104755790565b906001600160601b036118959216906119b256fe2f527d527e95d8fe40aec55377743bb779087da3f6d0d08f12e36444da62327d5374616b6552656769737472792e5f6164645374726174656779506172616d73a2646970667358221220f0d18f2e2b70f53f067e64da43d0249596a83f641b7d89b1ee198941287fcc7c64736f6c634300081a0033","sourceMap":"960:31883:85:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;937:2:86;960:31883:85;937:2:86;;;960:31883:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;:::i;:::-;1048:90;;:::i;:::-;8291:27;;960:31883;;-1:-1:-1;960:31883:85;22389:18;960:31883;;;-1:-1:-1;960:31883:85;;22389:44;;22300:140;;8291:27;960:31883;;;8419:15;;8485:12;8419:15;;;:::i;:::-;8485:12;;:::i;:::-;960:31883;;;8509:18;960:31883;;8509:175;960:31883;;;;;;;;;:::i;:::-;;8599:12;960:31883;;;;;8547:136;;960:31883;;;8547:136;;960:31883;8509:175;:::i;:::-;960:31883;;;;-1:-1:-1;;;960:31883:85;;;;;;;;;;;;;;;;;-1:-1:-1;;;960:31883:85;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26851:161:85;26915:83;960:31883;;;:::i;:::-;;;;;;;;26851:20;960:31883;;;;;;;;-1:-1:-1;960:31883:85;;;;-1:-1:-1;960:31883:85;26915:83;;:::i;:::-;26851:161;;:::i;:::-;960:31883;;;;;;;;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;;-1:-1:-1;;;;;960:31883:85;;;:::i;:::-;;;:::i;:::-;;;;;;28320:20;960:31883;;;;;;28320:46;960:31883;-1:-1:-1;960:31883:85;;;28438:11;960:31883;28320:53;960:31883;-1:-1:-1;960:31883:85;;;28320:53;;:::i;:::-;960:31883;;:::i;:::-;28438:11;;;:::i;:::-;28467:25;960:31883;;;;;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;;;1138:46:86;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;27329:83;960:31883;;;:::i;:::-;27329:83;;:::i;:::-;960:31883;;;;;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;;;;:::i;:::-;;;;;;29291:18;960:31883;;;;;;;-1:-1:-1;;960:31883:85;;;;;;;29291:77;-1:-1:-1;;;;;29291:77:85;960:31883;29291:77;;:::i;960:31883::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;;-1:-1:-1;;;;;960:31883:85;;;:::i;:::-;;;;:::i;:::-;;;;;;;;30750:11;960:31883;30649:39;960:31883;;;;;30649:39;:::i;960:31883::-;;;;;;-1:-1:-1;;960:31883:85;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;960:31883:85;;;;;9670:15;960:31883;;;;;;:::i;:::-;1144:92;;;:::i;:::-;1313:12;;;:::i;:::-;9670:15;:::i;960:31883::-;;;;;;-1:-1:-1;;960:31883:85;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;:::i;:::-;1048:90;;;;;:::i;:::-;960:31883;5186:24;;;;;;960:31883;5212:3;5258:16;5701:49;5258:16;960:31883;5258:16;;;;:::i;:::-;;960:31883;;5308:12;;;:::i;:::-;5446:157;;;;:::i;:::-;5701:49;;:::i;:::-;;960:31883;5171:13;;960:31883;;;;;;-1:-1:-1;;960:31883:85;;;;8908:12;960:31883;;:::i;:::-;;;:::i;:::-;1144:92;;;:::i;:::-;1313:12;;;:::i;:::-;8908;:::i;960:31883::-;;;;;;-1:-1:-1;;960:31883:85;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;29857:39;960:31883;;;;;29857:39;:::i;960:31883::-;;;;;;-1:-1:-1;;960:31883:85;;;;;;;:::i;:::-;;;:::i;:::-;;;;;23625:14;960:31883;;;;23625:35;960:31883;;;;;23625:35;:::i;:::-;960:31883;;:::i;:::-;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;;;:::i;:::-;;;:::i;:::-;;;;;;26495:20;960:31883;;;;;;26495:46;960:31883;-1:-1:-1;960:31883:85;;;;;26495:53;960:31883;-1:-1:-1;960:31883:85;;;26495:53;;:::i;960:31883::-;;;;;;-1:-1:-1;;960:31883:85;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2078:56:86;;;;;960:31883:85;2078:56:86;;;;:::i;:::-;960:31883:85;;;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;;;;;;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;960:31883:85;;;;;31437:24;;;;;;960:31883;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;960:31883:85;;;;;;;;;31611:18;960:31883;;;31463:3;31509:16;;;;;;;:::i;:::-;;960:31883;;31559:12;;;:::i;:::-;960:31883;;;;31611:18;960:31883;;;;;;;;;;;;;;;;;;;;;;;31611:68;960:31883;;;;;31611:18;960:31883;;;;;;31893:13;31908:10;;;;;;31888:259;31463:3;;;;31611:18;960:31883;31422:13;;;;;31920:3;960:31883;;;31611:18;960:31883;;;;;31980:10;;;;:::i;:::-;-1:-1:-1;;960:31883:85;;;;;;;;31947:48;;;960:31883;31947:48;;:::i;:::-;960:31883;;;31947:81;;31943:190;;31611:18;960:31883;31893:13;;31943:190;32072:10;;;;;:::i;:::-;-1:-1:-1;;960:31883:85;;;;;;;;;;;31611:18;960:31883;;32052:35;;;;:::i;:::-;960:31883;32109:5;;;;;;960:31883;-1:-1:-1;;;960:31883:85;;;;;;;;;-1:-1:-1;;;960:31883:85;;;;;;;;;;;-1:-1:-1;;;960:31883:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;960:31883:85;;;;;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;937:2:86;960:31883:85;;;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;;;1270:44:86;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;;;:::i;:::-;1048:90;;;;;:::i;:::-;960:31883;6802:13;960:31883;6817:24;;;;;;960:31883;;-1:-1:-1;;;;;960:31883:85;;;;;;;6843:3;6889:16;7916:49;6889:16;960:31883;6889:16;;;;:::i;:::-;;960:31883;;6939:12;;;:::i;:::-;7176:50;;;;:::i;:::-;7361:16;7357:151;;6843:3;7677:165;;;;;:::i;7916:49::-;;960:31883;6802:13;;7357:151;-1:-1:-1;960:31883:85;;;;;;;;;;;;;;;;;;;;;7357:151;;960:31883;;;;;;-1:-1:-1;;960:31883:85;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:92;;;;;:::i;:::-;1313:12;;;:::i;:::-;960:31883;;10267:18;;;960:31883;;;;;;;;10405:14;960:31883;;;;;;;;;;;;;;10535:13;960:31883;10550:18;;;;;;960:31883;10570:3;10650:18;10594:85;960:31883;10634:35;10650:18;;;;:::i;:::-;960:31883;10634:35;;:::i;:::-;-1:-1:-1;960:31883:85;;;-1:-1:-1;;;;;960:31883:85;;;;;10594:85;10754:18;10698:88;960:31883;10738:35;10754:18;;;;:::i;10738:35::-;-1:-1:-1;960:31883:85;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;10698:88;960:31883;;-1:-1:-1;;960:31883:85;;;;;;;10933:43;;;;:::i;:::-;10911:18;10895:35;10911:18;;;;:::i;:::-;960:31883;10895:35;;:::i;:::-;960:31883;;;;;;;10570:3;960:31883;;;;;;;;-1:-1:-1;;960:31883:85;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;;;;11068:53;11025:96;11068:53;;;:::i;:::-;960:31883;;10405:14;960:31883;;;;;-1:-1:-1;;;;;960:31883:85;11025:40;11046:18;;;;:::i;:::-;960:31883;11025:40;;:::i;:::-;960:31883;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;;;;;;;;;;;;;;11025:96;960:31883;;;;;;;10974:1;;-1:-1:-1;;960:31883:85;;;;;:::i;:::-;;;;;;;;;;10405:14;960:31883;;;;;;;;;10535:13;;960:31883;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;-1:-1:-1;;;;;;960:31883:85;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;960:31883:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;;;;792:4:86;960:31883:85;;;;;;;;;-1:-1:-1;;960:31883:85;;;;;-1:-1:-1;;;;;960:31883:85;25018:46;960:31883;;:::i;:::-;;;;;;-1:-1:-1;;960:31883:85;;;;;;:::i;:::-;;;;;24150:20;960:31883;;;;;;24150:46;960:31883;-1:-1:-1;960:31883:85;;;;;-1:-1:-1;960:31883:85;;;;;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;;;;:::i;:::-;;;;23307:14;960:31883;;;;;;;;;;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;;;:::i;:::-;;;;;24600:20;960:31883;;;;;;24600:46;960:31883;-1:-1:-1;960:31883:85;;;;-1:-1:-1;960:31883:85;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;1048:90;;;;;;:::i;:::-;2837:34;;;:::i;:::-;2911;;;;:::i;:::-;2960:13;960:31883;2975:24;;;;;;960:31883;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;3001:3;3072:16;;;;;:::i;:::-;;960:31883;;3122:12;;;;:::i;:::-;3333:50;;;;:::i;:::-;960:31883;;;;;;3640:167;;;960:31883;3640:167;3965:49;3640:167;;;:::i;:::-;3903:31;-1:-1:-1;;;;;3903:31:85;;;;:::i;:::-;960:31883;;;;3965:49;:::i;:::-;-1:-1:-1;;;;;3948:66:85;;;;:::i;:::-;960:31883;;;;;2960:13;;960:31883;;;-1:-1:-1;;;960:31883:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;;;:::i;:::-;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;:::i;:::-;1144:92;;;;:::i;:::-;1313:12;;;:::i;:::-;11789:13;;960:31883;;11889:34;;;960:31883;;;;;;;;12039:14;960:31883;;;;;12083:13;960:31883;12098:13;;;;;;960:31883;12113:3;12240:17;12191:66;12240:17;;960:31883;12240:17;;;;:::i;:::-;;:::i;:::-;12191:35;12207:18;;;;;:::i;:::-;960:31883;12191:35;;:::i;:::-;-1:-1:-1;960:31883:85;;-1:-1:-1;;;;;960:31883:85;;;;;;-1:-1:-1;;;;;;960:31883:85;;;;;;;;12191:66;12332:18;12276:104;12316:35;12332:18;;;;;:::i;12316:35::-;960:31883;;;;;;;;;12362:17;;;;;;:::i;:::-;960:31883;;;-1:-1:-1;;;;;960:31883:85;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;12276:104;960:31883;12083:13;;960:31883;;;-1:-1:-1;;;960:31883:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;1313:12;;;23027:50;1313:12;;:::i;:::-;23027:50;:::i;:::-;960:31883;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;;;:::i;:::-;;;;;;;;2016:56:86;960:31883:85;;;;;;;2016:56:86;;;;;960:31883:85;2016:56:86;;;;:::i;:::-;-1:-1:-1;960:31883:85;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;;;;;;:::i;:::-;;;;28940:18;960:31883;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;960:31883:85;;-1:-1:-1;960:31883:85;;;-1:-1:-1;960:31883:85;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;960:31883:85;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;960:31883:85;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;:::o;:::-;;;;-1:-1:-1;960:31883:85;;;;;-1:-1:-1;960:31883:85;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;:::o;:::-;-1:-1:-1;;;;;960:31883:85;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;960:31883:85;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;960:31883:85;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;960:31883:85;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;960:31883:85;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;:::o;25364:517::-;;960:31883;;:::i;:::-;;;-1:-1:-1;960:31883:85;25531:20;960:31883;;;-1:-1:-1;960:31883:85;;;;-1:-1:-1;960:31883:85;;;;-1:-1:-1;960:31883:85;;;;;:::i;:::-;25646:18;;;;25680:26;;;;:::o;25642:233::-;960:31883;;;;-1:-1:-1;960:31883:85;25531:20;960:31883;;;;-1:-1:-1;960:31883:85;25759:46;960:31883;-1:-1:-1;960:31883:85;;;;-1:-1:-1;960:31883:85;;;;;;;;;;;25759:65;;;;:::i;960:31883::-;25838:26;:::o;960:31883::-;;-1:-1:-1;;;960:31883:85;;;;;;;-1:-1:-1;;;960:31883:85;;;;;:::o;:::-;;;-1:-1:-1;;;960:31883:85;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;:::i;:::-;:::o;32673:168::-;32753:27;32673:168;960:31883;;-1:-1:-1;960:31883:85;22389:18;960:31883;;;-1:-1:-1;960:31883:85;;22389:44;;22300:140;;32753:27;960:31883;;;32673:168::o;960:31883::-;;;-1:-1:-1;;;960:31883:85;;;;;;;;;;;;;;;;;-1:-1:-1;;;960:31883:85;;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;:::o;21177:1051::-;;;960:31883;;;;;;;;23307:14;960:31883;;;;;;21396:43;960:31883;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;960:31883:85;;;21523:19;960:31883;;;;;;;;;-1:-1:-1;;;21484:73:85;;-1:-1:-1;;;;;960:31883:85;;;21484:73;;;960:31883;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;960:31883:85;;21484:73;;;;;-1:-1:-1;21484:73:85;;-1:-1:-1;21484:10:85;-1:-1:-1;;;;;960:31883:85;21484:73;;;;;;;960:31883;21484:73;;;960:31883;21572:13;960:31883;21587:16;;;;;;960:31883;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;-1:-1:-1;;;;;960:31883:85;;22134:45;;21177:1051;:::o;21605:3::-;960:31883;;;23307:14;960:31883;;;21721:31;960:31883;;;;21721:31;:::i;960:31883::-;21855:17;;;;:::i;:::-;960:31883;21851:150;;21605:3;;960:31883;;21572:13;;21851:150;-1:-1:-1;;;;;960:31883:85;21913:17;;;;;;;:::i;:::-;960:31883;21933:32;;960:31883;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;792:4:86;21896:90:85;960:31883;;;21896:90;;:::i;:::-;21851:150;;;;21484:73;;;;;;;;;;:::i;:::-;;;960:31883;;;;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21484:73;;;;;;960:31883;;;;;;;;;;;;;;;;;;;;;;;;21484:73;960:31883;;;;;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;-1:-1:-1;960:31883:85;;;;;;;;;;;;;32432:235;960:31883;;-1:-1:-1;;;32520:49:85;;;960:31883;32520:49;960:31883;32541:19;-1:-1:-1;;;;;960:31883:85;32520:49;;;;;;;-1:-1:-1;32520:49:85;;;32432:235;-1:-1:-1;;;;;;960:31883:85;32506:10;:63;960:31883;;32432:235::o;960:31883::-;;;-1:-1:-1;;;960:31883:85;;32520:49;;960:31883;;;;;;;;;;;;;;;;;;-1:-1:-1;;;960:31883:85;;;;;;;32520:49;;;;;;;;;;;;;;;:::i;:::-;;;960:31883;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;32520:49;;;;960:31883;;;;32520:49;;;-1:-1:-1;32520:49:85;;32193:233;32297:19;-1:-1:-1;;;;;960:31883:85;32275:10;:42;960:31883;;32193:233::o;960:31883::-;;;-1:-1:-1;;;960:31883:85;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;960:31883:85;;;;;;;13864:1857;960:31883;;;;;14074:20;960:31883;;;;;;;;-1:-1:-1;960:31883:85;;;;-1:-1:-1;960:31883:85;;14142:18;;14138:1393;14142:18;;;960:31883;-1:-1:-1;;;;;;;;;;;960:31883:85;-1:-1:-1;;;;;960:31883:85;;;;14074:20;960:31883;;;;;;;;-1:-1:-1;960:31883:85;;;14237:212;960:31883;-1:-1:-1;960:31883:85;;;;;;;:::i;:::-;;14345:12;960:31883;;;;;14289:159;;960:31883;;14289:159;;;960:31883;14237:212;:::i;:::-;960:31883;;;;;;;;;;;;15591:55;960:31883;;;;;;;;;;;;;;;;;;;;;;13864:1857;:::o;14138:1393::-;960:31883;;;;;;14074:20;960:31883;;;;;;;;-1:-1:-1;960:31883:85;;;;-1:-1:-1;960:31883:85;;;;;;;;;;;14588:63;;;:::i;:::-;960:31883;;;;;-1:-1:-1;;;;;960:31883:85;;;;14777:21;;;14773:68;;-1:-1:-1;;;;;960:31883:85;-1:-1:-1;;;;;;;;;;;15591:55:85;960:31883;;;15106:12;960:31883;;;;15067:52;;960:31883;;-1:-1:-1;960:31883:85;;-1:-1:-1;;960:31883:85;;;14138:1393;;15063:458;960:31883;;-1:-1:-1;;960:31883:85;;;;;;;;;;;15278:228;;960:31883;;;14074:20;960:31883;;;;;;;;-1:-1:-1;960:31883:85;;;;-1:-1:-1;960:31883:85;;;;;;;:::i;:::-;;;;;15330:175;;960:31883;;15330:175;;;960:31883;15278:228;:::i;:::-;14138:1393;;14773:68;14818:8;;;;;960:31883;14818:8;:::o;13864:1857::-;;;;960:31883;;;;;14074:20;960:31883;;;;;;;;-1:-1:-1;960:31883:85;;;;-1:-1:-1;960:31883:85;;14142:18;;14138:1393;14142:18;;;960:31883;-1:-1:-1;;;;;;;;;;;960:31883:85;-1:-1:-1;;;;;960:31883:85;;;;;14074:20;960:31883;;;;;;;;-1:-1:-1;960:31883:85;;;14237:212;960:31883;-1:-1:-1;960:31883:85;;;;;;;:::i;:::-;;14345:12;960:31883;;;;;14289:159;;960:31883;;;;14289:159;;;960:31883;14237:212;:::i;:::-;960:31883;;;;;;;;;;;;;;15591:55;960:31883;;;;;;;;;;;;;;;;;;;;;;13864:1857;:::o;14138:1393::-;960:31883;;;;;;14074:20;960:31883;;;;;;;;-1:-1:-1;960:31883:85;;;;-1:-1:-1;960:31883:85;;;;;;;;;;;14588:63;;;:::i;:::-;960:31883;;;;;-1:-1:-1;;;;;960:31883:85;;;;;-1:-1:-1;;;;;960:31883:85;;14777:21;;;;14773:68;;15106:12;-1:-1:-1;;;;;;;;;;;15106:12:85;-1:-1:-1;;;;;15106:12:85;960:31883;;15106:12;;;;;960:31883;;;;;15067:52;15063:458;960:31883;;;15139:27;;;;;:::i;:::-;14138:1393;;15063:458;960:31883;;-1:-1:-1;;960:31883:85;;;;;;;;;;;15278:228;;15205:55;;-1:-1:-1;960:31883:85;;;14074:20;960:31883;;;;;;;;-1:-1:-1;960:31883:85;;;;-1:-1:-1;960:31883:85;;;;;;;;:::i;:::-;;;;;15330:175;;960:31883;15330:175;;;960:31883;15278:228;:::i;14773:68::-;14818:8;;;;;;;960:31883;14818:8;:::o;15865:1272::-;960:31883;;;;;;16043:18;960:31883;;;;;;;;;;-1:-1:-1;;960:31883:85;;;;;;;16130:51;;;:::i;:::-;16243:15;;;;16239:74;;960:31883;16434:46;960:31883;;;-1:-1:-1;;;;;960:31883:85;;;;16434:46;:::i;:::-;16730:12;;;;960:31883;;;;16686:57;;960:31883;;16759:32;;;;;:::i;16682:423::-;960:31883;;-1:-1:-1;;960:31883:85;;;;;;;;;;;16896:198;;16822:60;;-1:-1:-1;960:31883:85;;16043:18;960:31883;;;;;;;;;;;:::i;:::-;;;;;16934:159;;960:31883;-1:-1:-1;;;;;960:31883:85;;;16934:159;;960:31883;16896:198;:::i;16239:74::-;960:31883;-1:-1:-1;;;;;960:31883:85;;;;;;16274:28;:::o;13456:223::-;960:31883;;13616:56;13456:223;960:31883;;;13551:21;960:31883;13551:21;960:31883;;-1:-1:-1;;;;;960:31883:85;13551:21;960:31883;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;;;13616:56;13456:223::o;960:31883::-;;;;;;;;;;:::o;17680:1628::-;960:31883;;17818:26;960:31883;;;;;;;;;17843:1;960:31883;18000:14;960:31883;;;17843:1;960:31883;;18066:34;960:31883;18066:34;;;;:::i;:::-;:66;960:31883;;17843:1;18237:1065;18257:18;;;;;;17680:1628;;;;;:::o;18277:3::-;18420:13;;;;;17843:1;18464:3;18440:21;;;;:::i;:::-;18435:27;;;;;960:31883;17843:1;960:31883;18000:14;960:31883;;18516:31;960:31883;;17843:1;960:31883;18516:31;:::i;:::-;-1:-1:-1;960:31883:85;-1:-1:-1;;;;;960:31883:85;;;;18560:18;;;;:::i;:::-;;960:31883;;18516:71;960:31883;;;;18420:13;;960:31883;;;-1:-1:-1;;;960:31883:85;;;18961:19;960:31883;;;;;;;;-1:-1:-1;;;;;;;;;;;960:31883:85;;;;;;;;;;;;18435:27;;;;;;;;-1:-1:-1;;;;;960:31883:85;18743:18;;;;:::i;:::-;;:29;960:31883;;18743:33;960:31883;;;17843:1;960:31883;18000:14;960:31883;;;17843:1;960:31883;18928:18;;;;:::i;:::-;;960:31883;;;-1:-1:-1;;;960:31883:85;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;;960:31883:85;-1:-1:-1;;;;;960:31883:85;;;;;;;;;;17843:1;960:31883;;;18961:19;960:31883;;;;;;-1:-1:-1;;;;;19000:18:85;960:31883;19000:18;;:::i;:::-;;960:31883;;;;;-1:-1:-1;;;960:31883:85;;;;;;;;;;;;;;;;:::i;:::-;;19047:64;960:31883;;;;;;19083:18;;;;:::i;:::-;;960:31883;;;;;;;19047:64;960:31883;19130:161;960:31883;;;;;19203:18;;;;:::i;:::-;;960:31883;;-1:-1:-1;;;;;960:31883:85;19248:18;;;;:::i;:::-;;:29;960:31883;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;;19130:161;;;960:31883;18242:13;;;960:31883;;;-1:-1:-1;;;960:31883:85;;;18961:19;960:31883;;;;;;;;-1:-1:-1;;;;;;;;;;;960:31883:85;;;;;;;;;-1:-1:-1;;;960:31883:85;;;;;;;;;;-1:-1:-1;;;960:31883:85;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;960:31883:85;;;;;;;;;-1:-1:-1;;;960:31883:85;;;;;;;;;;-1:-1:-1;;;960:31883:85;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;960:31883:85;;;;;;;;;;;;19962:830;960:31883;;;;;;;20377:44;;;960:31883;;20564:33;;960:31883;;;20564:38;;;:89;;;;19962:830;960:31883;;;;;19962:830::o;960:31883::-;;;-1:-1:-1;;;960:31883:85;;20564:33;960:31883;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;960:31883:85;;;;;;;20564:89;20606:47;;-1:-1:-1;20564:89:85;;;;960:31883;;;-1:-1:-1;;;960:31883:85;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;960:31883:85;;;;;;;12621:829;;;;;960:31883;;;12823:20;960:31883;;;;;;;;-1:-1:-1;960:31883:85;;;;-1:-1:-1;960:31883:85;;12995:206;13020:5;;;960:31883;;-1:-1:-1;;;13282:161:85;;960:31883;13282:161;;;960:31883;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;960:31883:85;;;;13282:161;;;13027:3;960:31883;;;12823:20;960:31883;;;;;;-1:-1:-1;960:31883:85;;;;;;;;;;;;;;;;;;;13050:53;;960:31883;13050:53;;:::i;:::-;960:31883;;;;;;-1:-1:-1;13050:86:85;13046:145;;13027:3;960:31883;;;;-1:-1:-1;;960:31883:85;;13000:18;;13046:145;960:31883;;;-1:-1:-1;;;;13156:20:85:o;19631:242::-;;960:31883;19725:9;;960:31883;;;-1:-1:-1;;;960:31883:85;;;;-1:-1:-1;;;;;960:31883:85;;;;;;;;-1:-1:-1;;;;;960:31883:85;;;;19750:38;:::o;19721:146::-;960:31883;-1:-1:-1;;;;;19826:30:85;960:31883;;19826:30;;:::i","linkReferences":{},"immutableReferences":{"27293":[{"start":979,"length":32},{"start":6754,"length":32}],"27296":[{"start":2601,"length":32},{"start":7219,"length":32},{"start":7504,"length":32}]}},"methodIdentifiers":{"MAX_WEIGHING_FUNCTION_LENGTH()":"7c172347","WEIGHTING_DIVISOR()":"5e5a6775","addStrategies(uint8,(address,uint96)[])":"c601527d","delegation()":"df5cf723","deregisterOperator(bytes32,bytes)":"bd29b8cd","getCurrentStake(bytes32,uint8)":"5401ed27","getCurrentTotalStake(uint8)":"d5eccc05","getLatestStakeUpdate(bytes32,uint8)":"f851e198","getStakeAtBlockNumber(bytes32,uint8,uint32)":"fa28c627","getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)":"f2be94ae","getStakeHistory(bytes32,uint8)":"2cd95940","getStakeHistoryLength(bytes32,uint8)":"4bd26e09","getStakeUpdateAtIndex(uint8,bytes32,uint256)":"ac6bfb03","getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)":"dd9846b9","getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)":"c8294c56","getTotalStakeHistoryLength(uint8)":"0491b41c","getTotalStakeIndicesAtBlockNumber(uint32,bytes)":"81c07502","getTotalStakeUpdateAtIndex(uint8,uint256)":"b6904b78","initializeQuorum(uint8,uint96,(address,uint96)[])":"ff694a77","minimumStakeForQuorum(uint8)":"c46778a5","modifyStrategyParams(uint8,uint256[],uint96[])":"20b66298","registerOperator(address,bytes32,bytes)":"25504777","registryCoordinator()":"6d14a987","removeStrategies(uint8,uint256[])":"5f1f2d77","setMinimumStakeForQuorum(uint8,uint96)":"bc9a40c3","strategiesPerQuorum(uint8,uint256)":"9f3ccf65","strategyParams(uint8,uint256)":"08732461","strategyParamsByIndex(uint8,uint256)":"adc804da","strategyParamsLength(uint8)":"3ca5a5f5","updateOperatorStake(address,bytes32,bytes)":"66acfefe","weightOfOperatorForQuorum(uint8,address)":"1f9b74e0"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IRegistryCoordinator\",\"name\":\"_registryCoordinator\",\"type\":\"address\"},{\"internalType\":\"contract IDelegationManager\",\"name\":\"_delegationManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"}],\"name\":\"MinimumStakeForQuorumUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"name\":\"OperatorStakeUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"QuorumCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyAddedToQuorum\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"name\":\"StrategyMultiplierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromQuorum\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_WEIGHING_FUNCTION_LENGTH\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WEIGHTING_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StrategyParams[]\",\"name\":\"_strategyParams\",\"type\":\"tuple[]\"}],\"name\":\"addStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"deregisterOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getCurrentStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getCurrentTotalStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getLatestStakeUpdate\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getStakeAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getStakeAtBlockNumberAndIndex\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getStakeHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StakeUpdate[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getStakeHistoryLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getStakeUpdateAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getStakeUpdateIndexAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTotalStakeAtBlockNumberFromIndex\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getTotalStakeHistoryLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"getTotalStakeIndicesAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint32[]\",\"name\":\"\",\"type\":\"uint32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTotalStakeUpdateAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"},{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StrategyParams[]\",\"name\":\"_strategyParams\",\"type\":\"tuple[]\"}],\"name\":\"initializeQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"minimumStakeForQuorum\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"strategyIndices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint96[]\",\"name\":\"newMultipliers\",\"type\":\"uint96[]\"}],\"name\":\"modifyStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"registerOperator\",\"outputs\":[{\"internalType\":\"uint96[]\",\"name\":\"\",\"type\":\"uint96[]\"},{\"internalType\":\"uint96[]\",\"name\":\"\",\"type\":\"uint96[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registryCoordinator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"indicesToRemove\",\"type\":\"uint256[]\"}],\"name\":\"removeStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"}],\"name\":\"setMinimumStakeForQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"strategiesPerQuorum\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"strategyParams\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"strategyParamsByIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistry.StrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"strategyParamsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"updateOperatorStake\",\"outputs\":[{\"internalType\":\"uint192\",\"name\":\"\",\"type\":\"uint192\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"weightOfOperatorForQuorum\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"kind\":\"dev\",\"methods\":{\"addStrategies(uint8,(address,uint96)[])\":{\"details\":\"Checks to make sure that the *same* strategy cannot be added multiple times (checks against both against existing and new strategies).This function has no check to make sure that the strategies for a single quorum have the same underlying asset. This is a concious choice, since a middleware may want, e.g., a stablecoin quorum that accepts USDC, USDT, DAI, etc. as underlying assets and trades them as \\\"equivalent\\\".\"},\"deregisterOperator(bytes32,bytes)\":{\"details\":\"access restricted to the RegistryCoordinatorPreconditions (these are assumed, not validated in this contract):         1) `quorumNumbers` has no duplicates         2) `quorumNumbers.length` != 0         3) `quorumNumbers` is ordered in ascending order         4) the operator is not already deregistered         5) `quorumNumbers` is a subset of the quorumNumbers that the operator is registered for\",\"params\":{\"operatorId\":\"The id of the operator to deregister.\",\"quorumNumbers\":\"The quorum numbers the operator is deregistering from, where each byte is an 8 bit integer quorumNumber.\"}},\"getCurrentStake(bytes32,uint8)\":{\"details\":\"Function returns weight of **0** in the event that the operator has no stake history\"},\"getCurrentTotalStake(uint8)\":{\"details\":\"Will revert if `_totalStakeHistory[quorumNumber]` is empty.\"},\"getLatestStakeUpdate(bytes32,uint8)\":{\"details\":\"Function returns an StakeUpdate struct with **every entry equal to 0** in the event that the operator has no stake history\"},\"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.\",\"params\":{\"blockNumber\":\"Block number to make sure the stake is from.\",\"index\":\"Array index for lookup, within the dynamic array `operatorStakeHistory[operatorId][quorumNumber]`.\",\"operatorId\":\"The id of the operator of interest.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"getStakeHistory(bytes32,uint8)\":{\"params\":{\"operatorId\":\"The id of the operator of interest.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"getStakeUpdateAtIndex(uint8,bytes32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.\",\"params\":{\"index\":\"Array index for lookup, within the dynamic array `operatorStakeHistory[operatorId][quorumNumber]`.\",\"operatorId\":\"The id of the operator of interest.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.\",\"params\":{\"blockNumber\":\"Block number to make sure the stake is from.\",\"index\":\"Array index for lookup, within the dynamic array `_totalStakeHistory[quorumNumber]`.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"getTotalStakeIndicesAtBlockNumber(uint32,bytes)\":{\"details\":\"Function will revert if there are no indices for the given `blockNumber`\",\"params\":{\"blockNumber\":\"Block number to retrieve the stake indices from.\",\"quorumNumbers\":\"The quorum numbers to get the stake indices for.\"}},\"getTotalStakeUpdateAtIndex(uint8,uint256)\":{\"params\":{\"index\":\"Array index for lookup, within the dynamic array `_totalStakeHistory[quorumNumber]`.\",\"quorumNumber\":\"The quorum number to get the stake for.\"}},\"modifyStrategyParams(uint8,uint256[],uint96[])\":{\"params\":{\"newMultipliers\":\"are the new multipliers for the strategies\",\"quorumNumber\":\"is the quorum number to which the strategies belong\",\"strategyIndices\":\"are the indices of the strategies to change\"}},\"registerOperator(address,bytes32,bytes)\":{\"details\":\"access restricted to the RegistryCoordinatorPreconditions (these are assumed, not validated in this contract):         1) `quorumNumbers` has no duplicates         2) `quorumNumbers.length` != 0         3) `quorumNumbers` is ordered in ascending order         4) the operator is not already registered\",\"params\":{\"operator\":\"The address of the operator to register.\",\"operatorId\":\"The id of the operator to register.\",\"quorumNumbers\":\"The quorum numbers the operator is registering for, where each byte is an 8 bit integer quorumNumber.\"},\"returns\":{\"_0\":\"The operator's current stake for each quorum, and the total stake for each quorum\"}},\"removeStrategies(uint8,uint256[])\":{\"details\":\"higher indices should be *first* in the list of @param indicesToRemove, since otherwise the removal of lower index entries will cause a shift in the indices of the other strategies to remove\"},\"updateOperatorStake(address,bytes32,bytes)\":{\"returns\":{\"_0\":\"A bitmap of quorums where the operator no longer meets the minimum stake and should be deregistered.\"}},\"weightOfOperatorForQuorum(uint8,address)\":{\"details\":\"reverts if the quorum does not exist\"}},\"title\":\"A `Registry` that keeps track of stakes of operators for up to 256 quorums. Specifically, it keeps track of      1) The stake of each operator in all the quorums they are a part of for block ranges      2) The total stake of all operators in each quorum for block ranges      3) The minimum stake required to register for each quorum It allows an additional functionality (in addition to registering and deregistering) to update the stake of an operator.\",\"version\":1},\"userdoc\":{\"events\":{\"MinimumStakeForQuorumUpdated(uint8,uint96)\":{\"notice\":\"emitted when the minimum stake for a quorum is updated\"},\"OperatorStakeUpdate(bytes32,uint8,uint96)\":{\"notice\":\"emitted whenever the stake of `operator` is updated\"},\"QuorumCreated(uint8)\":{\"notice\":\"emitted when a new quorum is created\"},\"StrategyAddedToQuorum(uint8,address)\":{\"notice\":\"emitted when `strategy` has been added to the array at `strategyParams[quorumNumber]`\"},\"StrategyMultiplierUpdated(uint8,address,uint256)\":{\"notice\":\"emitted when `strategy` has its `multiplier` updated in the array at `strategyParams[quorumNumber]`\"},\"StrategyRemovedFromQuorum(uint8,address)\":{\"notice\":\"emitted when `strategy` has removed from the array at `strategyParams[quorumNumber]`\"}},\"kind\":\"user\",\"methods\":{\"MAX_WEIGHING_FUNCTION_LENGTH()\":{\"notice\":\"Maximum length of dynamic arrays in the `strategyParams` mapping.\"},\"WEIGHTING_DIVISOR()\":{\"notice\":\"Constant used as a divisor in calculating weights.\"},\"addStrategies(uint8,(address,uint96)[])\":{\"notice\":\"Adds strategies and weights to the quorum\"},\"delegation()\":{\"notice\":\"The address of the Delegation contract for EigenLayer.\"},\"deregisterOperator(bytes32,bytes)\":{\"notice\":\"Deregisters the operator with `operatorId` for the specified `quorumNumbers`.\"},\"getCurrentStake(bytes32,uint8)\":{\"notice\":\"Returns the most recent stake weight for the `operatorId` for quorum `quorumNumber`\"},\"getCurrentTotalStake(uint8)\":{\"notice\":\"Returns the stake weight from the latest entry in `_totalStakeHistory` for quorum `quorumNumber`.\"},\"getLatestStakeUpdate(bytes32,uint8)\":{\"notice\":\"Returns the most recent stake weight for the `operatorId` for a certain quorum\"},\"getStakeAtBlockNumber(bytes32,uint8,uint32)\":{\"notice\":\"Returns the stake of the operator for the provided `quorumNumber` at the given `blockNumber`\"},\"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)\":{\"notice\":\"Returns the stake weight corresponding to `operatorId` for quorum `quorumNumber`, at the `index`-th entry in the `operatorStakeHistory[operatorId][quorumNumber]` array if it was the operator's stake at `blockNumber`. Reverts otherwise.\"},\"getStakeHistory(bytes32,uint8)\":{\"notice\":\"Returns the entire `operatorStakeHistory[operatorId][quorumNumber]` array.\"},\"getStakeHistoryLength(bytes32,uint8)\":{\"notice\":\"Returns the length of an operator's stake history for the given quorum\"},\"getStakeUpdateAtIndex(uint8,bytes32,uint256)\":{\"notice\":\"Returns the `index`-th entry in the `operatorStakeHistory[operatorId][quorumNumber]` array.\"},\"getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)\":{\"notice\":\"Returns the indices of the operator stakes for the provided `quorumNumber` at the given `blockNumber`\"},\"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)\":{\"notice\":\"Returns the total stake weight for quorum `quorumNumber`, at the `index`-th entry in the `_totalStakeHistory[quorumNumber]` array if it was the stake at `blockNumber`. Reverts otherwise.\"},\"getTotalStakeHistoryLength(uint8)\":{\"notice\":\"Returns the length of the total stake history for the given quorum\"},\"getTotalStakeIndicesAtBlockNumber(uint32,bytes)\":{\"notice\":\"Returns the indices of the total stakes for the provided `quorumNumbers` at the given `blockNumber`\"},\"getTotalStakeUpdateAtIndex(uint8,uint256)\":{\"notice\":\"Returns the `index`-th entry in the dynamic array of total stake, `_totalStakeHistory` for quorum `quorumNumber`.\"},\"initializeQuorum(uint8,uint96,(address,uint96)[])\":{\"notice\":\"Initialize a new quorum and push its first history update\"},\"minimumStakeForQuorum(uint8)\":{\"notice\":\"In order to register for a quorum i, an operator must have at least `minimumStakeForQuorum[i]` evaluated by this contract's 'VoteWeigher' logic.\"},\"modifyStrategyParams(uint8,uint256[],uint96[])\":{\"notice\":\"Modifies the weights of existing strategies for a specific quorum\"},\"registerOperator(address,bytes32,bytes)\":{\"notice\":\"Registers the `operator` with `operatorId` for the specified `quorumNumbers`.\"},\"registryCoordinator()\":{\"notice\":\"the coordinator contract that this registry is associated with\"},\"removeStrategies(uint8,uint256[])\":{\"notice\":\"Remove strategies and their associated weights from the quorum's considered strategies\"},\"strategyParams(uint8,uint256)\":{\"notice\":\"mapping from quorum number to the list of strategies considered and their corresponding multipliers for that specific quorum\"},\"strategyParamsByIndex(uint8,uint256)\":{\"notice\":\"Returns the strategy and weight multiplier for the `index`'th strategy in the quorum `quorumNumber`\"},\"strategyParamsLength(uint8)\":{\"notice\":\"Returns the length of the dynamic array stored in `strategyParams[quorumNumber]`.\"},\"updateOperatorStake(address,bytes32,bytes)\":{\"notice\":\"Called by the registry coordinator to update an operator's stake for one or more quorums. If the operator no longer has the minimum stake required for a quorum, they are added to the `quorumsToRemove`, which is returned to the registry coordinator\"},\"weightOfOperatorForQuorum(uint8,address)\":{\"notice\":\"This function computes the total weight of the @param operator in the quorum @param quorumNumber.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-middleware/src/StakeRegistry.sol\":\"StakeRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/\",\":@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/\",\":@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":@openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/\",\":ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x5a7dd74fb8a9334aa50c497a58875159aec17e905a7daaf3c276936d5b691bd1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a25b8d80233016a4634b9217a0899f43f18bfb21abb046bee4403e9408296009\",\"dweb:/ipfs/QmUA3bTzddiHnPxBqYtovxvcVvCkNrAxPJ7xcskocxEq5P\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0xdb3ff2be72047b89ead3fc98b52cdd514b243ed78cee7f6a48d672bc4cf0fd34\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d16a23a041559f6aaee6dc8342208beb3c3e98b1c23e46ab334243927f4ecc0b\",\"dweb:/ipfs/QmVbyRYgm6zHMFqmZXgsGhHAUxtmvyioc58VuMoJ9x8Eaj\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0x37cf51dde7316da0b95f1870504f2c1e5ed5c90faf7efec17dae3ba3d36cba93\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://03c4775b648612314d81278095cf17ad4f15fb850307eaf81d986107d5f664fc\",\"dweb:/ipfs/QmW5vuanTbTFz1kWUUAPBWLu4NhjwrMuye2sT272rC2X7d\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x33a935182f77cfd508fc57ec8e45afc8dc3748e1e9b764d36bf90ae6466f257b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d3981b5bbf435cda04e2ed2f348f886ebf1500c18dd4bbf67b1f1bc0272e2d3f\",\"dweb:/ipfs/QmYHDzQx29ataM2ejRCXFcPxaPdxWqX8v7uwUAYoG9572w\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0xffafae142d5337a5c204519e8f82fe3a5fae137286ebf597fa50699cf12c2474\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b577a12f7788095b230fd069b36ba9b3cdb376a0b7c3d8ae71588e5bf0c2f574\",\"dweb:/ipfs/QmXd1cDzYpxecyFEwowLiBKKjzRHgV8cs1qvLwypdEbVYy\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b\",\"dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x7655919fae553e75ff196b31c9244079ff222e34ff43f36c41429ee826cfad9b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d5d35a784a9511b351826cb70b00d92c3d374474f256b01af05cd1acb1ce6c10\",\"dweb:/ipfs/QmZog3BrpLa213wj5qxVYMQv7jdrkf5AAufLCVaMZsL7Gs\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e\",\"dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0x9e1a2bb1406e2440a4dffe2e34c398a83884b35f6bbe4a25c590a3039f1c4e46\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3ef20115ce26ab5c143fb88a5c3d2520756b286398dc1761069b05e38b2991c9\",\"dweb:/ipfs/QmY8oJpcQzTwcGxEhQtrNYPzXrGVnnQs8c7Sv5uTuvUByF\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x0bb92e390e73d450282108dd84f1cf7922de6e1a7e810ad5351b8708785ba659\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b03baa849b9e0b17ce4f5e35905b73ec83429e464ec3dbe229574333261ea460\",\"dweb:/ipfs/Qmd1FviY3CbqBzpYoTxCeEpS2R53vT9MijZ6qv71S2QEzo\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0x098850d09b65bb7dbad5ea0513eacb77f2701e135d9727b3627e13f303b2ff41\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3519f5a415b99d196f3cecef3f48ea116f2f3a2b381efcc96a5d7eff6934c2f3\",\"dweb:/ipfs/QmbCcFWgmFjXeZrvfEFQ17AgEueW9wS17HhvjkxMi5x3H8\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x6e82a559dc583bf4b15867654e82f3aca9a862589209abac1c4356142a3b2211\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a1a4819b95c7da710e11efb279bd4b596139dc12c96c45a366d8e1893018eb1\",\"dweb:/ipfs/QmZBHPLKoYepZmA7AL9ECJFkbBhujSNvvc8pJmNC9MnRni\"]},\"lib/eigenlayer-middleware/src/StakeRegistry.sol\":{\"keccak256\":\"0xe8e6b6262c6b6429067d48d2c81d7c76a229931613021d551e34f19c97bcb379\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9a774318fd803dad097fe26533ea71711564100939372293e849c75820968eb6\",\"dweb:/ipfs/Qmeb3k5XxuZyyZLvqayoP5GLvpCi97TNK7yvTAemXxo86z\"]},\"lib/eigenlayer-middleware/src/StakeRegistryStorage.sol\":{\"keccak256\":\"0xd0675a2edd88adf10f0e7f6f17f8274b3f660cf891bdd781defb1f229d0144d1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8d044348b69a2e71016b196a9011436bfe5c3b48e3942cce4706c0795cab8732\",\"dweb:/ipfs/Qmb1Khrwj57BMmQ71NdMUdXrnTNw9Fnc7k79svkT6HtJ5s\"]},\"lib/eigenlayer-middleware/src/interfaces/IBLSApkRegistry.sol\":{\"keccak256\":\"0xc07a5edfd95ab4f16f16a8dc8e76eadf4b0e90fe49db90540d01daaad86898c5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://52b53266450a53da641e82d8ae3be93c5e09f8342b4ea0cc96bb9038d8406354\",\"dweb:/ipfs/QmVuoiQyqPTLCGnyt8zDaxiyaj4ETdgTGKv4MDHWzqEDjp\"]},\"lib/eigenlayer-middleware/src/interfaces/IIndexRegistry.sol\":{\"keccak256\":\"0x83b2d56aacf27e65c4959a832c5de573e013908c044f6e48ea8284ac5282ae2b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://877af382587e96bb39bcc6db8bb5e4b871db5025c52347d4bee9afeaa4a6cc8d\",\"dweb:/ipfs/QmdnhsQCChzq2o5NgbeT3JxSsEcMm1PC9QW6zenZNPjD9F\"]},\"lib/eigenlayer-middleware/src/interfaces/IRegistry.sol\":{\"keccak256\":\"0x51426a17fb7e54bd3720e2890104e97a8559a13ff248b3d6b840916751c143d3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://01f91289e6100d528cb8b318cb14ff22a0bc52882c9d4db41585e030cc9ddc25\",\"dweb:/ipfs/Qmb22nqGrsrtNovHRwbMCvDHGENuxAgrWu3Db4p7Er2MHY\"]},\"lib/eigenlayer-middleware/src/interfaces/IRegistryCoordinator.sol\":{\"keccak256\":\"0xdd8effb082c1d5957d5ff43d7c59497b32866a6d82bcc7d5efa49ea9bc9b3385\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cb33a2a1446585b13b7a509e880c60d658d2d2522ec48a9f02e30d2cff54002d\",\"dweb:/ipfs/QmVNG8ZPZkXzNEadPdTj1uBYLiZdCnYfsE5iGU6nJcJXiD\"]},\"lib/eigenlayer-middleware/src/interfaces/IStakeRegistry.sol\":{\"keccak256\":\"0x1b8b4d757c1b804bc4cf6fbbf8bf8f89ebdeb30a31014751fe7d01deb9d513d4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://984bf2777b898ed187d28997f9783f5c293a1a1848e3e9aa470ce9183d454c97\",\"dweb:/ipfs/Qme3aTpBrkLu8wYHFMZbCfhXHoZ1M6SpXkeC237T9BuU5B\"]},\"lib/eigenlayer-middleware/src/libraries/BN254.sol\":{\"keccak256\":\"0xb428c8d0c3b325507a88a61a80115493eb88606ccc19ed64a31e11294ab853b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7b6fb935bfe0494e6ff970c8f30a86d5f4cf5c3e0967300c28cd383c043acae\",\"dweb:/ipfs/QmUHfFZaVjLPXhkBmcxrZhAHZaSFQDqXtrLGpjGBQBa5Ki\"]},\"lib/eigenlayer-middleware/src/libraries/BitmapUtils.sol\":{\"keccak256\":\"0x44315ac460be30a6b18fd4df4d1b8afb46653bf4dc06ca9f93c32353fd0605c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da14f2ead3a375b02afd09d4a02edddf7b63a88945746b96789b2473184fdb04\",\"dweb:/ipfs/QmRqcjxa2Vv2MrLdPeAwsktXdWTirapEDsRbJCyYRtKT6g\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IRegistryCoordinator","name":"_registryCoordinator","type":"address"},{"internalType":"contract IDelegationManager","name":"_delegationManager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true},{"internalType":"uint96","name":"minimumStake","type":"uint96","indexed":false}],"type":"event","name":"MinimumStakeForQuorumUpdated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32","indexed":true},{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":false},{"internalType":"uint96","name":"stake","type":"uint96","indexed":false}],"type":"event","name":"OperatorStakeUpdate","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true}],"type":"event","name":"QuorumCreated","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false}],"type":"event","name":"StrategyAddedToQuorum","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false},{"internalType":"uint256","name":"multiplier","type":"uint256","indexed":false}],"type":"event","name":"StrategyMultiplierUpdated","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false}],"type":"event","name":"StrategyRemovedFromQuorum","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"MAX_WEIGHING_FUNCTION_LENGTH","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"WEIGHTING_DIVISOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"struct IStakeRegistry.StrategyParams[]","name":"_strategyParams","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}],"stateMutability":"nonpayable","type":"function","name":"addStrategies"},{"inputs":[],"stateMutability":"view","type":"function","name":"delegation","outputs":[{"internalType":"contract IDelegationManager","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"bytes","name":"quorumNumbers","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deregisterOperator"},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getCurrentStake","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getCurrentTotalStake","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getLatestStakeUpdate","outputs":[{"internalType":"struct IStakeRegistry.StakeUpdate","name":"","type":"tuple","components":[{"internalType":"uint32","name":"updateBlockNumber","type":"uint32"},{"internalType":"uint32","name":"nextUpdateBlockNumber","type":"uint32"},{"internalType":"uint96","name":"stake","type":"uint96"}]}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"blockNumber","type":"uint32"}],"stateMutability":"view","type":"function","name":"getStakeAtBlockNumber","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"blockNumber","type":"uint32"},{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getStakeAtBlockNumberAndIndex","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getStakeHistory","outputs":[{"internalType":"struct IStakeRegistry.StakeUpdate[]","name":"","type":"tuple[]","components":[{"internalType":"uint32","name":"updateBlockNumber","type":"uint32"},{"internalType":"uint32","name":"nextUpdateBlockNumber","type":"uint32"},{"internalType":"uint96","name":"stake","type":"uint96"}]}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getStakeHistoryLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getStakeUpdateAtIndex","outputs":[{"internalType":"struct IStakeRegistry.StakeUpdate","name":"","type":"tuple","components":[{"internalType":"uint32","name":"updateBlockNumber","type":"uint32"},{"internalType":"uint32","name":"nextUpdateBlockNumber","type":"uint32"},{"internalType":"uint96","name":"stake","type":"uint96"}]}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"blockNumber","type":"uint32"}],"stateMutability":"view","type":"function","name":"getStakeUpdateIndexAtBlockNumber","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"blockNumber","type":"uint32"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getTotalStakeAtBlockNumberFromIndex","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getTotalStakeHistoryLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint32","name":"blockNumber","type":"uint32"},{"internalType":"bytes","name":"quorumNumbers","type":"bytes"}],"stateMutability":"view","type":"function","name":"getTotalStakeIndicesAtBlockNumber","outputs":[{"internalType":"uint32[]","name":"","type":"uint32[]"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getTotalStakeUpdateAtIndex","outputs":[{"internalType":"struct IStakeRegistry.StakeUpdate","name":"","type":"tuple","components":[{"internalType":"uint32","name":"updateBlockNumber","type":"uint32"},{"internalType":"uint32","name":"nextUpdateBlockNumber","type":"uint32"},{"internalType":"uint96","name":"stake","type":"uint96"}]}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint96","name":"minimumStake","type":"uint96"},{"internalType":"struct IStakeRegistry.StrategyParams[]","name":"_strategyParams","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}],"stateMutability":"nonpayable","type":"function","name":"initializeQuorum"},{"inputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function","name":"minimumStakeForQuorum","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256[]","name":"strategyIndices","type":"uint256[]"},{"internalType":"uint96[]","name":"newMultipliers","type":"uint96[]"}],"stateMutability":"nonpayable","type":"function","name":"modifyStrategyParams"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"bytes","name":"quorumNumbers","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"registerOperator","outputs":[{"internalType":"uint96[]","name":"","type":"uint96[]"},{"internalType":"uint96[]","name":"","type":"uint96[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"registryCoordinator","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256[]","name":"indicesToRemove","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"removeStrategies"},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint96","name":"minimumStake","type":"uint96"}],"stateMutability":"nonpayable","type":"function","name":"setMinimumStakeForQuorum"},{"inputs":[{"internalType":"uint8","name":"","type":"uint8"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"strategiesPerQuorum","outputs":[{"internalType":"contract IStrategy","name":"","type":"address"}]},{"inputs":[{"internalType":"uint8","name":"","type":"uint8"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"strategyParams","outputs":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"strategyParamsByIndex","outputs":[{"internalType":"struct IStakeRegistry.StrategyParams","name":"","type":"tuple","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"strategyParamsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"bytes","name":"quorumNumbers","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"updateOperatorStake","outputs":[{"internalType":"uint192","name":"","type":"uint192"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"weightOfOperatorForQuorum","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]}],"devdoc":{"kind":"dev","methods":{"addStrategies(uint8,(address,uint96)[])":{"details":"Checks to make sure that the *same* strategy cannot be added multiple times (checks against both against existing and new strategies).This function has no check to make sure that the strategies for a single quorum have the same underlying asset. This is a concious choice, since a middleware may want, e.g., a stablecoin quorum that accepts USDC, USDT, DAI, etc. as underlying assets and trades them as \"equivalent\"."},"deregisterOperator(bytes32,bytes)":{"details":"access restricted to the RegistryCoordinatorPreconditions (these are assumed, not validated in this contract):         1) `quorumNumbers` has no duplicates         2) `quorumNumbers.length` != 0         3) `quorumNumbers` is ordered in ascending order         4) the operator is not already deregistered         5) `quorumNumbers` is a subset of the quorumNumbers that the operator is registered for","params":{"operatorId":"The id of the operator to deregister.","quorumNumbers":"The quorum numbers the operator is deregistering from, where each byte is an 8 bit integer quorumNumber."}},"getCurrentStake(bytes32,uint8)":{"details":"Function returns weight of **0** in the event that the operator has no stake history"},"getCurrentTotalStake(uint8)":{"details":"Will revert if `_totalStakeHistory[quorumNumber]` is empty."},"getLatestStakeUpdate(bytes32,uint8)":{"details":"Function returns an StakeUpdate struct with **every entry equal to 0** in the event that the operator has no stake history"},"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)":{"details":"Function will revert if `index` is out-of-bounds.","params":{"blockNumber":"Block number to make sure the stake is from.","index":"Array index for lookup, within the dynamic array `operatorStakeHistory[operatorId][quorumNumber]`.","operatorId":"The id of the operator of interest.","quorumNumber":"The quorum number to get the stake for."}},"getStakeHistory(bytes32,uint8)":{"params":{"operatorId":"The id of the operator of interest.","quorumNumber":"The quorum number to get the stake for."}},"getStakeUpdateAtIndex(uint8,bytes32,uint256)":{"details":"Function will revert if `index` is out-of-bounds.","params":{"index":"Array index for lookup, within the dynamic array `operatorStakeHistory[operatorId][quorumNumber]`.","operatorId":"The id of the operator of interest.","quorumNumber":"The quorum number to get the stake for."}},"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)":{"details":"Function will revert if `index` is out-of-bounds.","params":{"blockNumber":"Block number to make sure the stake is from.","index":"Array index for lookup, within the dynamic array `_totalStakeHistory[quorumNumber]`.","quorumNumber":"The quorum number to get the stake for."}},"getTotalStakeIndicesAtBlockNumber(uint32,bytes)":{"details":"Function will revert if there are no indices for the given `blockNumber`","params":{"blockNumber":"Block number to retrieve the stake indices from.","quorumNumbers":"The quorum numbers to get the stake indices for."}},"getTotalStakeUpdateAtIndex(uint8,uint256)":{"params":{"index":"Array index for lookup, within the dynamic array `_totalStakeHistory[quorumNumber]`.","quorumNumber":"The quorum number to get the stake for."}},"modifyStrategyParams(uint8,uint256[],uint96[])":{"params":{"newMultipliers":"are the new multipliers for the strategies","quorumNumber":"is the quorum number to which the strategies belong","strategyIndices":"are the indices of the strategies to change"}},"registerOperator(address,bytes32,bytes)":{"details":"access restricted to the RegistryCoordinatorPreconditions (these are assumed, not validated in this contract):         1) `quorumNumbers` has no duplicates         2) `quorumNumbers.length` != 0         3) `quorumNumbers` is ordered in ascending order         4) the operator is not already registered","params":{"operator":"The address of the operator to register.","operatorId":"The id of the operator to register.","quorumNumbers":"The quorum numbers the operator is registering for, where each byte is an 8 bit integer quorumNumber."},"returns":{"_0":"The operator's current stake for each quorum, and the total stake for each quorum"}},"removeStrategies(uint8,uint256[])":{"details":"higher indices should be *first* in the list of @param indicesToRemove, since otherwise the removal of lower index entries will cause a shift in the indices of the other strategies to remove"},"updateOperatorStake(address,bytes32,bytes)":{"returns":{"_0":"A bitmap of quorums where the operator no longer meets the minimum stake and should be deregistered."}},"weightOfOperatorForQuorum(uint8,address)":{"details":"reverts if the quorum does not exist"}},"version":1},"userdoc":{"kind":"user","methods":{"MAX_WEIGHING_FUNCTION_LENGTH()":{"notice":"Maximum length of dynamic arrays in the `strategyParams` mapping."},"WEIGHTING_DIVISOR()":{"notice":"Constant used as a divisor in calculating weights."},"addStrategies(uint8,(address,uint96)[])":{"notice":"Adds strategies and weights to the quorum"},"delegation()":{"notice":"The address of the Delegation contract for EigenLayer."},"deregisterOperator(bytes32,bytes)":{"notice":"Deregisters the operator with `operatorId` for the specified `quorumNumbers`."},"getCurrentStake(bytes32,uint8)":{"notice":"Returns the most recent stake weight for the `operatorId` for quorum `quorumNumber`"},"getCurrentTotalStake(uint8)":{"notice":"Returns the stake weight from the latest entry in `_totalStakeHistory` for quorum `quorumNumber`."},"getLatestStakeUpdate(bytes32,uint8)":{"notice":"Returns the most recent stake weight for the `operatorId` for a certain quorum"},"getStakeAtBlockNumber(bytes32,uint8,uint32)":{"notice":"Returns the stake of the operator for the provided `quorumNumber` at the given `blockNumber`"},"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)":{"notice":"Returns the stake weight corresponding to `operatorId` for quorum `quorumNumber`, at the `index`-th entry in the `operatorStakeHistory[operatorId][quorumNumber]` array if it was the operator's stake at `blockNumber`. Reverts otherwise."},"getStakeHistory(bytes32,uint8)":{"notice":"Returns the entire `operatorStakeHistory[operatorId][quorumNumber]` array."},"getStakeHistoryLength(bytes32,uint8)":{"notice":"Returns the length of an operator's stake history for the given quorum"},"getStakeUpdateAtIndex(uint8,bytes32,uint256)":{"notice":"Returns the `index`-th entry in the `operatorStakeHistory[operatorId][quorumNumber]` array."},"getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)":{"notice":"Returns the indices of the operator stakes for the provided `quorumNumber` at the given `blockNumber`"},"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)":{"notice":"Returns the total stake weight for quorum `quorumNumber`, at the `index`-th entry in the `_totalStakeHistory[quorumNumber]` array if it was the stake at `blockNumber`. Reverts otherwise."},"getTotalStakeHistoryLength(uint8)":{"notice":"Returns the length of the total stake history for the given quorum"},"getTotalStakeIndicesAtBlockNumber(uint32,bytes)":{"notice":"Returns the indices of the total stakes for the provided `quorumNumbers` at the given `blockNumber`"},"getTotalStakeUpdateAtIndex(uint8,uint256)":{"notice":"Returns the `index`-th entry in the dynamic array of total stake, `_totalStakeHistory` for quorum `quorumNumber`."},"initializeQuorum(uint8,uint96,(address,uint96)[])":{"notice":"Initialize a new quorum and push its first history update"},"minimumStakeForQuorum(uint8)":{"notice":"In order to register for a quorum i, an operator must have at least `minimumStakeForQuorum[i]` evaluated by this contract's 'VoteWeigher' logic."},"modifyStrategyParams(uint8,uint256[],uint96[])":{"notice":"Modifies the weights of existing strategies for a specific quorum"},"registerOperator(address,bytes32,bytes)":{"notice":"Registers the `operator` with `operatorId` for the specified `quorumNumbers`."},"registryCoordinator()":{"notice":"the coordinator contract that this registry is associated with"},"removeStrategies(uint8,uint256[])":{"notice":"Remove strategies and their associated weights from the quorum's considered strategies"},"strategyParams(uint8,uint256)":{"notice":"mapping from quorum number to the list of strategies considered and their corresponding multipliers for that specific quorum"},"strategyParamsByIndex(uint8,uint256)":{"notice":"Returns the strategy and weight multiplier for the `index`'th strategy in the quorum `quorumNumber`"},"strategyParamsLength(uint8)":{"notice":"Returns the length of the dynamic array stored in `strategyParams[quorumNumber]`."},"updateOperatorStake(address,bytes32,bytes)":{"notice":"Called by the registry coordinator to update an operator's stake for one or more quorums. If the operator no longer has the minimum stake required for a quorum, they are added to the `quorumsToRemove`, which is returned to the registry coordinator"},"weightOfOperatorForQuorum(uint8,address)":{"notice":"This function computes the total weight of the @param operator in the quorum @param quorumNumber."}},"version":1}},"settings":{"remappings":["@eigenlayer-middleware/=lib/eigenlayer-middleware/","@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/","@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/","@openzeppelin-upgrades-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/","@openzeppelin-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","@openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/","ds-test/=lib/eigenlayer-middleware/lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/eigenlayer-middleware/src/StakeRegistry.sol":"StakeRegistry"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61","urls":["bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354","dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b","urls":["bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34","dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol":{"keccak256":"0x5a7dd74fb8a9334aa50c497a58875159aec17e905a7daaf3c276936d5b691bd1","urls":["bzz-raw://a25b8d80233016a4634b9217a0899f43f18bfb21abb046bee4403e9408296009","dweb:/ipfs/QmUA3bTzddiHnPxBqYtovxvcVvCkNrAxPJ7xcskocxEq5P"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol":{"keccak256":"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c","urls":["bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91","dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"],"license":"CC0-1.0"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol":{"keccak256":"0xdb3ff2be72047b89ead3fc98b52cdd514b243ed78cee7f6a48d672bc4cf0fd34","urls":["bzz-raw://d16a23a041559f6aaee6dc8342208beb3c3e98b1c23e46ab334243927f4ecc0b","dweb:/ipfs/QmVbyRYgm6zHMFqmZXgsGhHAUxtmvyioc58VuMoJ9x8Eaj"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol":{"keccak256":"0x37cf51dde7316da0b95f1870504f2c1e5ed5c90faf7efec17dae3ba3d36cba93","urls":["bzz-raw://03c4775b648612314d81278095cf17ad4f15fb850307eaf81d986107d5f664fc","dweb:/ipfs/QmW5vuanTbTFz1kWUUAPBWLu4NhjwrMuye2sT272rC2X7d"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol":{"keccak256":"0x33a935182f77cfd508fc57ec8e45afc8dc3748e1e9b764d36bf90ae6466f257b","urls":["bzz-raw://d3981b5bbf435cda04e2ed2f348f886ebf1500c18dd4bbf67b1f1bc0272e2d3f","dweb:/ipfs/QmYHDzQx29ataM2ejRCXFcPxaPdxWqX8v7uwUAYoG9572w"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol":{"keccak256":"0xffafae142d5337a5c204519e8f82fe3a5fae137286ebf597fa50699cf12c2474","urls":["bzz-raw://b577a12f7788095b230fd069b36ba9b3cdb376a0b7c3d8ae71588e5bf0c2f574","dweb:/ipfs/QmXd1cDzYpxecyFEwowLiBKKjzRHgV8cs1qvLwypdEbVYy"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol":{"keccak256":"0x3b62ea6ee304cbab976ff206bcf55268f18a3291708021557f93f899f99862e4","urls":["bzz-raw://b59a96fbf9940a7795d9a5fcb9e03939a87216317fb67872b7017285bf7eb49b","dweb:/ipfs/QmdiH5AfYBvuTpzxTqfhorLG25t2dhSTKWh1cvBbYxGDJH"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISlasher.sol":{"keccak256":"0x7655919fae553e75ff196b31c9244079ff222e34ff43f36c41429ee826cfad9b","urls":["bzz-raw://d5d35a784a9511b351826cb70b00d92c3d374474f256b01af05cd1acb1ce6c10","dweb:/ipfs/QmZog3BrpLa213wj5qxVYMQv7jdrkf5AAufLCVaMZsL7Gs"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol":{"keccak256":"0x816aaa02d489535da4f4103a5df5444307487d3121eda4be0a1bd8e7c0f7cdf9","urls":["bzz-raw://54f58369f286eaa6d2ab3c6b8250774b1de46c9935d4af09518bbdeec08a906e","dweb:/ipfs/QmZPmSTAu4fmR7TeBijDTYNM2bsv5DHh9H8gtyP7Ap1DwE"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol":{"keccak256":"0x9e1a2bb1406e2440a4dffe2e34c398a83884b35f6bbe4a25c590a3039f1c4e46","urls":["bzz-raw://3ef20115ce26ab5c143fb88a5c3d2520756b286398dc1761069b05e38b2991c9","dweb:/ipfs/QmY8oJpcQzTwcGxEhQtrNYPzXrGVnnQs8c7Sv5uTuvUByF"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol":{"keccak256":"0x0bb92e390e73d450282108dd84f1cf7922de6e1a7e810ad5351b8708785ba659","urls":["bzz-raw://b03baa849b9e0b17ce4f5e35905b73ec83429e464ec3dbe229574333261ea460","dweb:/ipfs/Qmd1FviY3CbqBzpYoTxCeEpS2R53vT9MijZ6qv71S2QEzo"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol":{"keccak256":"0x098850d09b65bb7dbad5ea0513eacb77f2701e135d9727b3627e13f303b2ff41","urls":["bzz-raw://3519f5a415b99d196f3cecef3f48ea116f2f3a2b381efcc96a5d7eff6934c2f3","dweb:/ipfs/QmbCcFWgmFjXeZrvfEFQ17AgEueW9wS17HhvjkxMi5x3H8"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol":{"keccak256":"0x6e82a559dc583bf4b15867654e82f3aca9a862589209abac1c4356142a3b2211","urls":["bzz-raw://8a1a4819b95c7da710e11efb279bd4b596139dc12c96c45a366d8e1893018eb1","dweb:/ipfs/QmZBHPLKoYepZmA7AL9ECJFkbBhujSNvvc8pJmNC9MnRni"],"license":"MIT"},"lib/eigenlayer-middleware/src/StakeRegistry.sol":{"keccak256":"0xe8e6b6262c6b6429067d48d2c81d7c76a229931613021d551e34f19c97bcb379","urls":["bzz-raw://9a774318fd803dad097fe26533ea71711564100939372293e849c75820968eb6","dweb:/ipfs/Qmeb3k5XxuZyyZLvqayoP5GLvpCi97TNK7yvTAemXxo86z"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/StakeRegistryStorage.sol":{"keccak256":"0xd0675a2edd88adf10f0e7f6f17f8274b3f660cf891bdd781defb1f229d0144d1","urls":["bzz-raw://8d044348b69a2e71016b196a9011436bfe5c3b48e3942cce4706c0795cab8732","dweb:/ipfs/Qmb1Khrwj57BMmQ71NdMUdXrnTNw9Fnc7k79svkT6HtJ5s"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/IBLSApkRegistry.sol":{"keccak256":"0xc07a5edfd95ab4f16f16a8dc8e76eadf4b0e90fe49db90540d01daaad86898c5","urls":["bzz-raw://52b53266450a53da641e82d8ae3be93c5e09f8342b4ea0cc96bb9038d8406354","dweb:/ipfs/QmVuoiQyqPTLCGnyt8zDaxiyaj4ETdgTGKv4MDHWzqEDjp"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/IIndexRegistry.sol":{"keccak256":"0x83b2d56aacf27e65c4959a832c5de573e013908c044f6e48ea8284ac5282ae2b","urls":["bzz-raw://877af382587e96bb39bcc6db8bb5e4b871db5025c52347d4bee9afeaa4a6cc8d","dweb:/ipfs/QmdnhsQCChzq2o5NgbeT3JxSsEcMm1PC9QW6zenZNPjD9F"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/IRegistry.sol":{"keccak256":"0x51426a17fb7e54bd3720e2890104e97a8559a13ff248b3d6b840916751c143d3","urls":["bzz-raw://01f91289e6100d528cb8b318cb14ff22a0bc52882c9d4db41585e030cc9ddc25","dweb:/ipfs/Qmb22nqGrsrtNovHRwbMCvDHGENuxAgrWu3Db4p7Er2MHY"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/IRegistryCoordinator.sol":{"keccak256":"0xdd8effb082c1d5957d5ff43d7c59497b32866a6d82bcc7d5efa49ea9bc9b3385","urls":["bzz-raw://cb33a2a1446585b13b7a509e880c60d658d2d2522ec48a9f02e30d2cff54002d","dweb:/ipfs/QmVNG8ZPZkXzNEadPdTj1uBYLiZdCnYfsE5iGU6nJcJXiD"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/IStakeRegistry.sol":{"keccak256":"0x1b8b4d757c1b804bc4cf6fbbf8bf8f89ebdeb30a31014751fe7d01deb9d513d4","urls":["bzz-raw://984bf2777b898ed187d28997f9783f5c293a1a1848e3e9aa470ce9183d454c97","dweb:/ipfs/Qme3aTpBrkLu8wYHFMZbCfhXHoZ1M6SpXkeC237T9BuU5B"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/libraries/BN254.sol":{"keccak256":"0xb428c8d0c3b325507a88a61a80115493eb88606ccc19ed64a31e11294ab853b3","urls":["bzz-raw://d7b6fb935bfe0494e6ff970c8f30a86d5f4cf5c3e0967300c28cd383c043acae","dweb:/ipfs/QmUHfFZaVjLPXhkBmcxrZhAHZaSFQDqXtrLGpjGBQBa5Ki"],"license":"MIT"},"lib/eigenlayer-middleware/src/libraries/BitmapUtils.sol":{"keccak256":"0x44315ac460be30a6b18fd4df4d1b8afb46653bf4dc06ca9f93c32353fd0605c5","urls":["bzz-raw://da14f2ead3a375b02afd09d4a02edddf7b63a88945746b96789b2473184fdb04","dweb:/ipfs/QmRqcjxa2Vv2MrLdPeAwsktXdWTirapEDsRbJCyYRtKT6g"],"license":"MIT"}},"version":1},"id":85}